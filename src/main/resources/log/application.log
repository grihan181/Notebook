2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@812593550 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@9910241 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@2059198063 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1335054043 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@b26796
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@79945570
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4769e66f
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a4ebf73
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Handling root path - Notebooks
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:05:04 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:05:04 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@358344179 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@395397743)
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1525425849 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@395397743)
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@95867622 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@2056982522 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@fc37b53
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@10dec177
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@543059152 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@20977801 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@2088762901 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@549584070 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@4b47066e
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@9a7c6e7
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@466fb1b4
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@71ff9aba
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [true]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735c967a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce17db3
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [577]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@10d108a8
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@4b460c36
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [true]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Время]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [тест]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735c967a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce17db3
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [2]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@466175ae
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@61a9d7e9
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:01:46.460731]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T15:01:46.460731]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce17db3
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735c967a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [65]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@11c97891
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@590d53b9
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce17db3
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735c967a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [290]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@663283fe
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@4e75f1a4
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce17db3
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735c967a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [801]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@5679348a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@1dee14b2
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735c967a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce17db3
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [769]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@79c0b733
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@50efcea4
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - []
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - []
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735c967a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce17db3
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [739]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@a3839d8
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@34b83f81
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - []
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce17db3
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735c967a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [738]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@483d6f0a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@78e77612
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735c967a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce17db3
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [481]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@1f90e7cf
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@1541b638
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [aew]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735c967a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce17db3
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [641]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@608d953e
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@3bf5d0da
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735c967a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [33]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce17db3
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@153cea99
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@7048c885
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [141f]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735c967a
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ce17db3
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:05:04 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:05:04 INFO  [http-nio-8080-exec-4]: Пользователь wqr вошел
2022-05-08 15:05:04 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:05:10 DEBUG [http-nio-8080-exec-5]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:05:10 ERROR [http-nio-8080-exec-5]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (lower(n.name) like lower(%:current%)) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC]
2022-05-08 15:05:30 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:07:01 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:07:01 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:07:01 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:07:01 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:07:01 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:07:01 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:07:01 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44c316ef
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44c316ef
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@44c316ef
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@278e47bf
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@278e47bf
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2c502e19
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2c502e19
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2733cb07
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2733cb07
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@7b9bc560
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@7b9bc560
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7b9bc560
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@2e7dc613
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2e7dc613
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@2e7dc613
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3700523
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3700523
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@3700523
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@3700523
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@3a229db9
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1f37ef58
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1f37ef58
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5fbaeff3
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5c60a03a
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@7281215a
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@7281215a
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7281215a
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@52ec5d7d
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@52ec5d7d
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@52ec5d7d
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@5aa1f5a4
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@5aa1f5a4
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5aa1f5a4
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@319efba
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@319efba
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@319efba
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@78698572
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@78698572
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@78698572
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@48de38b7
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@48de38b7
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1d87f8dd
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1d87f8dd
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@51afb0e8
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@51afb0e8
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@51afb0e8
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@65d9fdba
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@5cfb7a36
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5cfb7a36
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7e183064
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@529ce7bf
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@529ce7bf
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@529ce7bf
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7882e47b
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@7882e47b
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@7882e47b
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@7faf1b97
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@408b8f16
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@751f39a7
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@751f39a7
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a51aa43
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a51aa43
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1da5693d
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14aa6a0
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@d14752f
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1a00d57c
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2cdaab80
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78f1671d
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5662c821
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5662c821
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4a554ca4
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4a554ca4
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33aa68c5
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33aa68c5
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@40102822
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@40102822
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@f3c3c1
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@f3c3c1
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@60238f17
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@af2f96
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@413f4699
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@413f4699
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fcc78b4
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fcc78b4
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23eb0f6d
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a415719
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@6171c946
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6171c946
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@5dc40404
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5dc40404
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26aff8b6
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26aff8b6
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26aff8b6
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@76868ae5
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@76868ae5
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@76868ae5
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@19d2468a
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@644b8590
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@3df8abe7
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3df8abe7
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7f6bcf1f
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7f6bcf1f
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7f6bcf1f
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7406206e
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4c594c7b
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@34867184
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34867184
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@1534533c
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1534533c
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1534533c
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@507414a4
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@507414a4
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@56c8a045
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@56c8a045
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@51c5f149
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@51c5f149
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@665fe5fe
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@665fe5fe
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@16fe0ca5
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@16fe0ca5
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5274cb7
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4049af20
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4049af20
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@2b15a3a6
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@2b15a3a6
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@27120082
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@77b132
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@25b817ce
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@72dea533
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@457fadfa
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@783c6a46
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1d5f04e8
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1a2fcd4d
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2207b38f
2022-05-08 15:07:02 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:07:02 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:07:02 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:07:02 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:07:02 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:07:02 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:07:02 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:07:07 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19d317e1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@fedbbf1]
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:07:07 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4c38d172, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@26adfb74] under count; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@78eabb29] under every; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@522a3581] under any; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@64f3ece4] under position; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@578d22b7] under overlay; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@61c97911] under trim; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4c63be10] under cast; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c932f3] under collate; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5e2b3081] under extract; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@20e3f1f5] under ifnull; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@30301779] under pad; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@30628cde] under str; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3e9dbeb5] under format; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@cc1e47f] under timestampadd; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@309aa785] under timestampdiff; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@15f0a53] under current_date; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cbc8c49] under current_time; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c5e7ad0] under current_timestamp; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69b9fa7e] under local_date; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10cd6888] under local_time; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@787b701c] under local_datetime; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67ec0d39] under offset_datetime; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@412061b0] under instant; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5ce728bf] under sql; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@70d8586f] under count; prior registration was org.hibernate.dialect.function.CountFunction@26adfb74
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@323fb39d] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@10cd6888
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@787b701c
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44893ab7] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@64f3ece4
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e821d7d] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1a664075] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3e9dbeb5
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4cfd02a8] under listagg; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@25c4719e] under mode; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@54192b57] under percentile_cont; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@64086290] under percentile_disc; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2dea98a3] under rank; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@37450eb1] under dense_rank; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5d8dff22] under percent_rank; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5ce13627] under cume_dist; prior registration was null
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:07:08 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19d317e1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5bcccef]
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f1c1cb1] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@73921f4b] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:07:09 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:07:09 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@10113472] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b75cddb
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 9b2357e5-7b91-40b4-ba01-c631e8610d2b (<unnamed>)
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:07:10 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:07:10 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1756008005 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1486182363 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@145225d3
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@19d7d5c4
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:07:11 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1382859266 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1063387697)
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1915002565 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@4df8313f
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@776135473 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@714419370 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@2724e369
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d6d66a1
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@70381051
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@43c12068
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:01:46.460731]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@48d4b549
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@7f713ed9
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@4ffb03fe
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@5f3b809
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@68e03b03
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@1e114730
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@9e253ff
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@1149913a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@78189833
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:07:11 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:07:11 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: HQL : FROM Notebooks n where n.id = :id AND  n.user = :user
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Encountered use of reserved word as identifier : =
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Encountered use of reserved word as identifier : AND
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Handling root path - Notebooks
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMNotebooksnwheren.id=:idANDn.user=:user
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> BasicSqmPathSource(id : Long)
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Notebooks(n).id`
                :id
            <- [EQUAL]
            -> [EQUAL]
                -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                :user
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:07:13 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(id)
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).id) 
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1839204252 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1063387697)
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1043681846 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.id=? and n1_0.users_id=?
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [2]
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@69ee9e95
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@2111755644 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1576747747 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@37a6bfd6
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@32969c9e
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T15:01:46.460731]
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:07:13 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:07:18 DEBUG [http-nio-8080-exec-6]: Handling root path - Notebooks
2022-05-08 15:07:18 DEBUG [http-nio-8080-exec-6]: Encountered implicit select clause : FROMNotebooksnwherelower(n.name)likelower('%:current%')AND(n.user=:user)
2022-05-08 15:07:18 DEBUG [http-nio-8080-exec-6]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:07:18 DEBUG [http-nio-8080-exec-6]: Error processing stanza {is-like}
java.lang.NullPointerException: Cannot invoke "org.hibernate.query.sqm.tree.expression.SqmExpression.accept(org.hibernate.query.sqm.SemanticQueryWalker)" because the return value of "org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.getEscapeCharacter()" is null
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitLikePredicate$35(SqmTreePrinter.java:889)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitLikePredicate(SqmTreePrinter.java:884)
	at org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.accept(SqmLikePredicate.java:120)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitJunctionPredicate$30(SqmTreePrinter.java:816)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitJunctionPredicate(SqmTreePrinter.java:812)
	at org.hibernate.query.sqm.tree.predicate.SqmJunctionPredicate.accept(SqmJunctionPredicate.java:76)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitWhereClause$28(SqmTreePrinter.java:789)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitWhereClause(SqmTreePrinter.java:787)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitQuerySpec$12(SqmTreePrinter.java:431)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitQuerySpec(SqmTreePrinter.java:426)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:122)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitSelectStatement$7(SqmTreePrinter.java:336)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitSelectStatement(SqmTreePrinter.java:334)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.logTree(SqmTreePrinter.java:149)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:89)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$createQuery$2(AbstractSharedSessionContract.java:741)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:141)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:128)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:738)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:656)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at org.example.DAOClasses.NotebookDao.search(NotebookDao.java:166)
	at org.example.servlets.SearchServlet.doGet(SearchServlet.java:68)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 15:07:18 DEBUG [http-nio-8080-exec-6]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [is-like]
            <- [is-like]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:07:18 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:07:18 ERROR [http-nio-8080-exec-6]: java.lang.IllegalArgumentException: Could not locate named parameter [row], expecting one of [user]
2022-05-08 15:07:37 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:09:26 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:09:26 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:09:26 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:09:26 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:09:26 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:09:26 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:09:26 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@bc8c20b
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@bc8c20b
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@bc8c20b
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7cc75ff4
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7cc75ff4
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4aedfbd8
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4aedfbd8
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@476fcb0d
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@476fcb0d
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@afa9171
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@afa9171
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@afa9171
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@4c844725
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4c844725
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@4c844725
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@69125656
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@69125656
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@69125656
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@69125656
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@509ccfda
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@eb3bda1
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@eb3bda1
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@60e07e3d
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1bbb3491
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2d6fda23
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2d6fda23
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2d6fda23
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@3e22249a
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@3e22249a
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3e22249a
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@5d50b4f5
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@5d50b4f5
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5d50b4f5
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@1f0d0c72
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@1f0d0c72
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1f0d0c72
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@4c606372
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@4c606372
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4c606372
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@63c99890
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@63c99890
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3b666f00
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3b666f00
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@4cff8a82
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@4cff8a82
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4cff8a82
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3cb0b9c
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@2c691e6d
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2c691e6d
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@24ff7a8f
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@14e44f08
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@14e44f08
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@14e44f08
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4f2821e3
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@4f2821e3
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@4f2821e3
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@2b56d41d
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@74a2f8fa
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@42887569
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@42887569
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4c2163e2
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4c2163e2
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@514ab047
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@32ccf7bc
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@33eeffb1
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7417a45d
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@70dbea10
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@257f82a0
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@61a8f2c9
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@61a8f2c9
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@285487ed
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@285487ed
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@770739d
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@770739d
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5e439b51
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5e439b51
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@785b14ea
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@785b14ea
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@743c9fe3
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7054e662
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@328f722a
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@328f722a
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@12d3dcd5
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@12d3dcd5
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2809aeb
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55b01b2f
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@1c673d91
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1c673d91
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@10de7fbc
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@10de7fbc
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@160ff88e
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@160ff88e
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@160ff88e
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4333f003
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4333f003
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4333f003
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@669dc641
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5dd76b1
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6c7f350c
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6c7f350c
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30106368
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30106368
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30106368
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@383714e5
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@56b185ac
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@43f31d23
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@43f31d23
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@70cb3d16
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@70cb3d16
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@70cb3d16
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@70db9fd6
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@70db9fd6
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2a1df884
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2a1df884
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@71dcf2e1
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@71dcf2e1
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@58d65241
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@58d65241
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@74df53a2
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@74df53a2
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@31435c65
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a63cbea
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a63cbea
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@500f927
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@500f927
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@6b264397
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@37455be4
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1507e07d
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@550a735
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5cb366f3
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@41349cfa
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6b9a88a9
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6b73e3e0
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2cb08483
2022-05-08 15:09:27 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:09:27 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:09:27 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:09:27 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:09:27 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:09:27 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:09:27 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:09:32 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@799123d8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7574b25c]
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:09:32 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@127e8721, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6be6a416] under count; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6460e2d7] under every; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1055b742] under any; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2db5570] under position; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@563dfd94] under overlay; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3b90c6b2] under trim; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@174bbbc4] under cast; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3240883b] under collate; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@f25d613] under extract; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5f5f864c] under ifnull; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4a50fbf6] under pad; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5d1d8005] under str; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1011616d] under format; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1de5a6a6] under timestampadd; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@fa474fb] under timestampdiff; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@38a924b8] under current_date; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51deeeb7] under current_time; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11de62c4] under current_timestamp; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31335ce1] under local_date; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@404e329b] under local_time; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6643d773] under local_datetime; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4e9513d] under offset_datetime; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2f96d115] under instant; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3154f758] under sql; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@40fceca0] under count; prior registration was org.hibernate.dialect.function.CountFunction@6be6a416
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@49864a14] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@404e329b
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6643d773
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76a62e74] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2db5570
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9bef36c] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@26bd840e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1011616d
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@55f2661c] under listagg; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@296805c] under mode; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@ec311dc] under percentile_cont; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6632d1cf] under percentile_disc; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@472caece] under rank; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1f71d8c1] under dense_rank; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@66992f94] under percent_rank; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5421b48e] under cume_dist; prior registration was null
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:09:33 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@799123d8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6ed38f42]
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9350367] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5ac72d29] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:09:34 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:09:35 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14c2d290] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c31f139
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 862d146e-ef10-404f-a6c6-86b5d24530f1 (<unnamed>)
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:09:35 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:09:35 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1183306139 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@188093380 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@5fd96100
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46915ac
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:09:36 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1148288219 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1805982973)
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@640207455 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@65297def
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1927344253 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@635901624 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@2058f20b
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ab1e069
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ba0deb7
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@72d75029
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ba0deb7
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@1a67bd27
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:01:46.460731]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ba0deb7
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@5cd1af81
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ba0deb7
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@217987ca
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ba0deb7
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@69e7cdd4
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ba0deb7
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@4ecedb4a
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ba0deb7
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@1f32d8b5
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ba0deb7
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@72984b4e
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ba0deb7
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@25c6b1a4
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ba0deb7
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@1dea2add
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ba0deb7
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@1494aea5
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ba0deb7
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:09:36 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:09:36 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: HQL : FROM Notebooks n where n.id = :id AND  n.user = :user
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Encountered use of reserved word as identifier : =
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Encountered use of reserved word as identifier : AND
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Handling root path - Notebooks
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Encountered implicit select clause : FROMNotebooksnwheren.id=:idANDn.user=:user
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> BasicSqmPathSource(id : Long)
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Notebooks(n).id`
                :id
            <- [EQUAL]
            -> [EQUAL]
                -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                :user
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:09:44 WARN  [http-nio-8080-exec-5]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Created new SQL alias : n1_0
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(id)
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).id) 
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1731093013 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1805982973)
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1009345538 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.id=? and n1_0.users_id=?
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [577]
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@6360f992
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@345933960 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1776097698 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@4bce2b5c
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6ac68bbb
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [true]
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Время]
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [тест]
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69c53a6f
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:09:44 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:10:02 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:10:03 DEBUG [http-nio-8080-exec-6]: Handling root path - Notebooks
2022-05-08 15:10:03 DEBUG [http-nio-8080-exec-6]: Encountered implicit select clause : FROMNotebooksnwherelower(n.name)likelower('%:current%')AND(n.user=:user)
2022-05-08 15:10:03 DEBUG [http-nio-8080-exec-6]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:10:03 DEBUG [http-nio-8080-exec-6]: Error processing stanza {is-like}
java.lang.NullPointerException: Cannot invoke "org.hibernate.query.sqm.tree.expression.SqmExpression.accept(org.hibernate.query.sqm.SemanticQueryWalker)" because the return value of "org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.getEscapeCharacter()" is null
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitLikePredicate$35(SqmTreePrinter.java:889)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitLikePredicate(SqmTreePrinter.java:884)
	at org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.accept(SqmLikePredicate.java:120)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitJunctionPredicate$30(SqmTreePrinter.java:816)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitJunctionPredicate(SqmTreePrinter.java:812)
	at org.hibernate.query.sqm.tree.predicate.SqmJunctionPredicate.accept(SqmJunctionPredicate.java:76)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitWhereClause$28(SqmTreePrinter.java:789)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitWhereClause(SqmTreePrinter.java:787)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitQuerySpec$12(SqmTreePrinter.java:431)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitQuerySpec(SqmTreePrinter.java:426)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:122)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitSelectStatement$7(SqmTreePrinter.java:336)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitSelectStatement(SqmTreePrinter.java:334)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.logTree(SqmTreePrinter.java:149)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:89)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$createQuery$2(AbstractSharedSessionContract.java:741)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:141)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:128)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:738)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:656)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at org.example.DAOClasses.NotebookDao.search(NotebookDao.java:166)
	at org.example.servlets.SearchServlet.doGet(SearchServlet.java:68)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 15:10:03 DEBUG [http-nio-8080-exec-6]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [is-like]
            <- [is-like]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:10:03 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:10:03 ERROR [http-nio-8080-exec-6]: java.lang.IllegalArgumentException: Could not locate named parameter [current], expecting one of [user]
2022-05-08 15:10:54 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:10:54 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:10:54 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:10:54 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:10:54 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:10:54 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:10:54 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44c316ef
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44c316ef
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@44c316ef
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@278e47bf
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@278e47bf
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2c502e19
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2c502e19
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2733cb07
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2733cb07
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@7b9bc560
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@7b9bc560
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7b9bc560
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@2e7dc613
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2e7dc613
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@2e7dc613
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3700523
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3700523
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@3700523
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@3700523
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@3a229db9
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1f37ef58
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1f37ef58
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5fbaeff3
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5c60a03a
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@7281215a
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@7281215a
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7281215a
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@52ec5d7d
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@52ec5d7d
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@52ec5d7d
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@5aa1f5a4
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@5aa1f5a4
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5aa1f5a4
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@319efba
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@319efba
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@319efba
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@78698572
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@78698572
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@78698572
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@48de38b7
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@48de38b7
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1d87f8dd
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1d87f8dd
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@51afb0e8
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@51afb0e8
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@51afb0e8
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@65d9fdba
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@5cfb7a36
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5cfb7a36
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7e183064
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@529ce7bf
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@529ce7bf
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@529ce7bf
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7882e47b
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@7882e47b
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@7882e47b
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@7faf1b97
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@408b8f16
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@751f39a7
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@751f39a7
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a51aa43
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a51aa43
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1da5693d
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14aa6a0
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@d14752f
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1a00d57c
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2cdaab80
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78f1671d
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5662c821
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5662c821
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4a554ca4
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4a554ca4
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33aa68c5
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33aa68c5
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@40102822
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@40102822
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@f3c3c1
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@f3c3c1
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@60238f17
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@af2f96
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@413f4699
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@413f4699
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fcc78b4
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fcc78b4
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23eb0f6d
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a415719
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@6171c946
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6171c946
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@5dc40404
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5dc40404
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26aff8b6
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26aff8b6
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26aff8b6
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@76868ae5
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@76868ae5
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@76868ae5
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@19d2468a
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@644b8590
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@3df8abe7
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3df8abe7
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7f6bcf1f
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7f6bcf1f
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7f6bcf1f
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7406206e
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4c594c7b
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@34867184
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34867184
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@1534533c
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1534533c
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1534533c
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@507414a4
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@507414a4
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@56c8a045
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@56c8a045
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@51c5f149
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@51c5f149
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@665fe5fe
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@665fe5fe
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@16fe0ca5
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@16fe0ca5
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5274cb7
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4049af20
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4049af20
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@2b15a3a6
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@2b15a3a6
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@27120082
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@77b132
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@25b817ce
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@72dea533
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@457fadfa
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@783c6a46
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1d5f04e8
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1a2fcd4d
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2207b38f
2022-05-08 15:10:55 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:10:55 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:10:55 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:10:55 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:10:55 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:10:55 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:10:55 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:11:00 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19d317e1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@fedbbf1]
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:11:00 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4c38d172, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@26adfb74] under count; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@78eabb29] under every; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@522a3581] under any; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@64f3ece4] under position; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@578d22b7] under overlay; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@61c97911] under trim; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4c63be10] under cast; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c932f3] under collate; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5e2b3081] under extract; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@20e3f1f5] under ifnull; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@30301779] under pad; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@30628cde] under str; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3e9dbeb5] under format; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@cc1e47f] under timestampadd; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@309aa785] under timestampdiff; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@15f0a53] under current_date; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cbc8c49] under current_time; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c5e7ad0] under current_timestamp; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69b9fa7e] under local_date; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10cd6888] under local_time; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@787b701c] under local_datetime; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67ec0d39] under offset_datetime; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@412061b0] under instant; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5ce728bf] under sql; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@70d8586f] under count; prior registration was org.hibernate.dialect.function.CountFunction@26adfb74
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@323fb39d] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@10cd6888
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@787b701c
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44893ab7] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@64f3ece4
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e821d7d] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1a664075] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3e9dbeb5
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4cfd02a8] under listagg; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@25c4719e] under mode; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@54192b57] under percentile_cont; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@64086290] under percentile_disc; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2dea98a3] under rank; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@37450eb1] under dense_rank; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5d8dff22] under percent_rank; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5ce13627] under cume_dist; prior registration was null
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:11:01 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19d317e1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5bcccef]
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f1c1cb1] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@73921f4b] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:11:02 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:11:03 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@10113472] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b75cddb
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 22db2c4a-5d49-466b-a0a3-4e0b5776b644 (<unnamed>)
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:11:03 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:11:03 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1756008005 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1486182363 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@145225d3
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@19d7d5c4
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:11:04 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1382859266 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1063387697)
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1915002565 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@4df8313f
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@776135473 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@714419370 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@2724e369
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d6d66a1
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@70381051
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@43c12068
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:01:46.460731]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@48d4b549
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@7f713ed9
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@4ffb03fe
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@5f3b809
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@68e03b03
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@1e114730
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@9e253ff
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@1149913a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@78189833
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516508a
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:11:04 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:11:04 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Handling root path - Notebooks
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Encountered implicit select clause : FROMNotebooksnwherelower(n.name)likelower('%f')AND(n.user=:user)
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Error processing stanza {is-like}
java.lang.NullPointerException: Cannot invoke "org.hibernate.query.sqm.tree.expression.SqmExpression.accept(org.hibernate.query.sqm.SemanticQueryWalker)" because the return value of "org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.getEscapeCharacter()" is null
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitLikePredicate$35(SqmTreePrinter.java:889)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitLikePredicate(SqmTreePrinter.java:884)
	at org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.accept(SqmLikePredicate.java:120)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitJunctionPredicate$30(SqmTreePrinter.java:816)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitJunctionPredicate(SqmTreePrinter.java:812)
	at org.hibernate.query.sqm.tree.predicate.SqmJunctionPredicate.accept(SqmJunctionPredicate.java:76)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitWhereClause$28(SqmTreePrinter.java:789)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitWhereClause(SqmTreePrinter.java:787)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitQuerySpec$12(SqmTreePrinter.java:431)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitQuerySpec(SqmTreePrinter.java:426)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:122)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitSelectStatement$7(SqmTreePrinter.java:336)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitSelectStatement(SqmTreePrinter.java:334)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.logTree(SqmTreePrinter.java:149)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:89)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$createQuery$2(AbstractSharedSessionContract.java:741)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:141)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:128)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:738)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:656)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at org.example.DAOClasses.NotebookDao.search(NotebookDao.java:166)
	at org.example.servlets.SearchServlet.doGet(SearchServlet.java:68)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [is-like]
            <- [is-like]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:11:25 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Created new SQL alias : n1_0
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1609099726 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1063387697)
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1527785272 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where lower(n1_0.name) like lower('%f') and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [2]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@53c41847
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@59284817 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1064357292 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@31a67246
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@193c0a24
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:01:46.460731]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b06d461
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [290]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@75802a2d
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b06d461
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [739]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@53da7308
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b06d461
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:11:25 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:11:30 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:11:57 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:11:57 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:11:57 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:11:57 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:11:57 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:11:57 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:11:57 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@401b215e
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@401b215e
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@401b215e
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4515d5b6
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4515d5b6
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@79b5f81f
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@79b5f81f
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4157eedf
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4157eedf
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@58df267a
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@58df267a
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@58df267a
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@338ce0b2
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@338ce0b2
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@338ce0b2
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@65af93dc
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@65af93dc
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@65af93dc
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@65af93dc
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@1b70a8a0
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@3abda142
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3abda142
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6e604fd7
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@774810b4
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@69639355
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@69639355
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@69639355
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@3e83888a
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@3e83888a
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3e83888a
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@5271767a
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@5271767a
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5271767a
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@650b0130
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@650b0130
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@650b0130
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@1007dfff
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@1007dfff
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1007dfff
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3262c2ad
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3262c2ad
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6b79b03d
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6b79b03d
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@56c63ee3
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@56c63ee3
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@56c63ee3
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7810fbe3
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@5cc339e6
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5cc339e6
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7a9d921b
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@1d4b9a8d
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1d4b9a8d
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@1d4b9a8d
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@62fbb524
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@62fbb524
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@62fbb524
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@27b2bc94
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@31a9ff33
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@70779479
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@70779479
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4f9a5dc6
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4f9a5dc6
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7d7e0ebd
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3503646
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4f48be09
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5221be4b
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5fa74954
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5dc7a6e0
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@57f5f3a7
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@57f5f3a7
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@8f9ccf4
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@8f9ccf4
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6d71d956
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6d71d956
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@d6192be
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@d6192be
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@75f1307e
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@75f1307e
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3329dc58
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@50f11802
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@510494c0
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@510494c0
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d0a3c5e
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d0a3c5e
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@503cfebb
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@855cdb6
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@7d02fae8
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7d02fae8
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@116c1da
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@116c1da
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@36682e65
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@36682e65
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@36682e65
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@10f67d63
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@10f67d63
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@10f67d63
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ac9102f
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4d6606bd
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@3a8a1272
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3a8a1272
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@19347d25
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@19347d25
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@19347d25
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2bce5e44
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@56e0f66e
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@3c137742
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3c137742
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@674f8b0
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@674f8b0
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@674f8b0
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@5f91aa44
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5f91aa44
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@e13745e
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@e13745e
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@291dabb9
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@291dabb9
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@88d6752
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@88d6752
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@5a9c2f8d
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5a9c2f8d
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4f380104
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7b4caccc
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7b4caccc
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@112cd1e1
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@112cd1e1
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@131f2230
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@19ecef2a
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@71d03ce8
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@695b1707
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@33fb6be
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7d549c4c
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@d13c872
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3c4115f8
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4235de88
2022-05-08 15:11:58 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:11:58 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:11:58 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:11:58 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:11:58 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:11:58 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:11:58 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:12:03 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a5a5060] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@633c1cf8]
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:03 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@43da8d14, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5ca7b4cd] under count; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1edbc968] under every; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@d408276] under any; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7a3e58d5] under position; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1d0a1a7a] under overlay; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6b5e2bff] under trim; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1decbef6] under cast; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1820bdef] under collate; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4917c43c] under extract; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@61877160] under ifnull; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4199e8fd] under pad; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@28db74e5] under str; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@46ab5a7] under format; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@643754f5] under timestampadd; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@68ececa1] under timestampdiff; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54f894e8] under current_date; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46784a85] under current_time; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@47b5114f] under current_timestamp; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf10399] under local_date; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7b3e85db] under local_time; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f96d45b] under local_datetime; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10c68d8f] under offset_datetime; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@73c8a9c5] under instant; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@27948158] under sql; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@64d1b9ba] under count; prior registration was org.hibernate.dialect.function.CountFunction@5ca7b4cd
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@582ffe09] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7b3e85db
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7f96d45b
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@674a2a2b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7a3e58d5
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fa080a6] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@a702db6] under format; prior registration was org.hibernate.dialect.function.FormatFunction@46ab5a7
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@f569c91] under listagg; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2769f71f] under mode; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5a14717f] under percentile_cont; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@515cfa3e] under percentile_disc; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@120f857a] under rank; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7996fe99] under dense_rank; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@34d5c414] under percent_rank; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@30531610] under cume_dist; prior registration was null
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:12:04 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a5a5060] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@148bb897]
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2d2b6ed3] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@40ec9592] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:12:05 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:12:06 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@22c064b5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5e85577c
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: b0bfb99b-c3d9-4a8c-96e1-ecb089bf3749 (<unnamed>)
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:12:06 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:12:06 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@846699055 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1767992654 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@2de14f6c
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@168ff3a
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:12:07 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1313089772 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1906460371)
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@790141861 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@275aad14
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1286216339 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1567828484 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@72ba6088
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55bb1505
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0bfe5f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@4dc1f50d
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0bfe5f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@3d71b6f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:01:46.460731]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0bfe5f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@523682b4
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0bfe5f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@39e77ab
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0bfe5f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@41358348
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0bfe5f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@7a82f462
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0bfe5f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@1c47faa4
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0bfe5f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@6c94e5a8
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0bfe5f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@1d604b1
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0bfe5f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@6c9ac10d
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0bfe5f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@4fab84e0
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0bfe5f
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:12:07 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:12:07 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:12:12 DEBUG [http-nio-8080-exec-4]: Handling root path - Notebooks
2022-05-08 15:12:12 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMNotebooksnwherelower(n.NAME)likelower('%f')AND(n.user=:user)
2022-05-08 15:12:12 DEBUG [http-nio-8080-exec-4]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:12:12 ERROR [http-nio-8080-exec-4]: java.lang.IllegalArgumentException: org.hibernate.query.sqm.InterpretationException: Error interpreting query [FROM Notebooks n where lower(n.NAME) like lower('%f') AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC]; this may indicate a semantic (user query) problem or a bug in the parser [FROM Notebooks n where lower(n.NAME) like lower('%f') AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC]
2022-05-08 15:12:33 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:13:41 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:13:41 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:13:41 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:13:41 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:13:41 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:13:41 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:13:41 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@72fb3ed0
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@72fb3ed0
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@72fb3ed0
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@773ad5e8
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@773ad5e8
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@798dd0be
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@798dd0be
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6170107
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6170107
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@2d31a2ab
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@2d31a2ab
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2d31a2ab
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@c05b770
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@c05b770
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@c05b770
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1b9a9e6e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1b9a9e6e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@1b9a9e6e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@1b9a9e6e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@25bbab23
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@5bf61c5
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5bf61c5
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2420f835
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6b066b31
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@139c27c1
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@139c27c1
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@139c27c1
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@6d53cd3e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@6d53cd3e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6d53cd3e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@4e1161f1
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@4e1161f1
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4e1161f1
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@1696d4e1
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@1696d4e1
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1696d4e1
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@64464bdd
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@64464bdd
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@64464bdd
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@170f5056
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@170f5056
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@52d4b5af
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@52d4b5af
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@72c552c8
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@72c552c8
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@72c552c8
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@240be7ee
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@496b9ed9
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@496b9ed9
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3ee52396
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@66ee7590
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@66ee7590
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@66ee7590
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1d21ca34
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@1d21ca34
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@1d21ca34
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@8a9021f
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1fc7690f
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@a10cd92
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@a10cd92
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1973d68e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1973d68e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@598a9645
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7da1036a
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@71513d11
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76115213
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7b24ca2a
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@e6b3c77
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@762a311e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@762a311e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@ad76402
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@ad76402
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@577f9ae8
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@577f9ae8
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@a09cf4
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@a09cf4
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@27a5ff3f
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@27a5ff3f
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@166368bd
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d600843
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@39237427
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@39237427
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@31f7283b
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@31f7283b
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c5c9838
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@143ade0
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@23e363a3
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@23e363a3
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@2b5d2114
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2b5d2114
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7318e11f
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7318e11f
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7318e11f
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6f287e31
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6f287e31
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6f287e31
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@57eee60c
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@15792864
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@215d23cd
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@215d23cd
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@d280821
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@d280821
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@d280821
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2d56410e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@71b076c8
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@393b6078
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@393b6078
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@749f0e7e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@749f0e7e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@749f0e7e
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@6b5e7fd2
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6b5e7fd2
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@192a4247
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@192a4247
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7bf0d9ba
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7bf0d9ba
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7710d444
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7710d444
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@6f28859b
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6f28859b
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@245bca43
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@263bfcc1
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@263bfcc1
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@7641f628
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@7641f628
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@5fcede59
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@297451f3
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2e72c38c
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@35fab4e6
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1cef9816
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@179fa9b1
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2f49766d
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4ff4aae6
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2fbbb426
2022-05-08 15:13:42 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:13:42 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:13:42 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:13:42 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:13:42 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:13:42 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:13:42 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:13:47 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@753081bd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5747bab0]
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:13:47 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@27186ed4, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@715afca0] under count; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4febfbb9] under every; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@58a1663a] under any; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@45df7244] under position; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@72c946c7] under overlay; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@323b63f2] under trim; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@235e99f8] under cast; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@472a6337] under collate; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@59c7c380] under extract; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4e203a3f] under ifnull; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@39c8964a] under pad; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1219c827] under str; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@174989d3] under format; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@8b7e3d2] under timestampadd; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6e61ed16] under timestampdiff; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25620a45] under current_date; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5afd1d88] under current_time; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3359c0b5] under current_timestamp; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2571c6ff] under local_date; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1074c036] under local_time; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@22579eed] under local_datetime; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ff6be7a] under offset_datetime; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@749bcd45] under instant; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1cd2fa39] under sql; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@18ba5375] under count; prior registration was org.hibernate.dialect.function.CountFunction@715afca0
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@4823efa0] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1074c036
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@22579eed
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ff3e9a6] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@45df7244
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@269023b9] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@65304911] under format; prior registration was org.hibernate.dialect.function.FormatFunction@174989d3
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4b0fb72d] under listagg; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3ace9df5] under mode; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@272471d1] under percentile_cont; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@f29f6ba] under percentile_disc; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@32cb5b1] under rank; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@d5365b] under dense_rank; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@35dac00d] under percent_rank; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@765313fa] under cume_dist; prior registration was null
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:13:48 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@753081bd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3ef42c7f]
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c955af6] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@20674276] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:13:49 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:13:50 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1aabd6d5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e653571
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 9850306a-282a-47f1-a0a6-07c023a2e567 (<unnamed>)
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:13:50 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:13:50 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1018322572 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@366600937 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@58c9acdd
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd85478
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:13:51 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@856762504 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@734802507)
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1516987984 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@5a0f76a5
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1170129453 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1448136261 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@71c0271d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4887a93b
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41686a3d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@2bfc0d62
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41686a3d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@1063b5ce
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:01:46.460731]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41686a3d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@285940c7
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41686a3d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@2ae2ee73
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41686a3d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@61be6150
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41686a3d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@6c7e756c
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41686a3d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@e434f5c
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41686a3d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@33efb991
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41686a3d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@2149fa5d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41686a3d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@3e832e0d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41686a3d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@2a2eaf2e
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41686a3d
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:13:51 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:13:51 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:14:17 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:14:53 WARN  [http-nio-8080-exec-10]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Initializer list
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1045552354 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1797138229 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@162a12ed
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7727741e
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:14:53 WARN  [http-nio-8080-exec-10]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Initializer list
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1161283101 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@734802507)
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1959761149 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@5037ed3
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Initializer list
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@233007858 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@497612136 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@4b8282c4
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@415c378e
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [true]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dafd0b0
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [577]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@458d0d81
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [true]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Время]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [тест]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dafd0b0
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [2]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@49dfea67
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T15:01:46.460731]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dafd0b0
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [65]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@641307d8
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dafd0b0
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [290]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@4fe4548f
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dafd0b0
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [801]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@41d24a8b
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dafd0b0
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [769]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@77e81c04
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - []
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - []
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dafd0b0
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [739]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@b39e8e6
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - []
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dafd0b0
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [738]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@66148522
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dafd0b0
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [481]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@35411d79
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [aew]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dafd0b0
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [641]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@2fe3fe9
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dafd0b0
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [33]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@46449988
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [141f]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dafd0b0
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:14:53 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:14:53 INFO  [http-nio-8080-exec-10]: Пользователь wqr вошел
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: HQL : FROM Notebooks n where n.id = :id AND  n.user = :user
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Encountered use of reserved word as identifier : =
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Encountered use of reserved word as identifier : AND
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Handling root path - Notebooks
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Encountered implicit select clause : FROMNotebooksnwheren.id=:idANDn.user=:user
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> BasicSqmPathSource(id : Long)
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Notebooks(n).id`
                :id
            <- [EQUAL]
            -> [EQUAL]
                -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                :user
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:15:09 WARN  [http-nio-8080-exec-2]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Created new SQL alias : n1_0
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Determining mapping-model type for SqmParameter : SqmNamedParameter(id)
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).id) 
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Initializer list
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1350953992 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@734802507)
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1867285520 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.id=? and n1_0.users_id=?
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [2]
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@550e5b38
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Initializer list
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1592342925 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@804329694 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [1]
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@3283310c
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@19f9fecd
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [2022-05-08T15:01:46.460731]
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@171694ea
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:15:09 DEBUG [http-nio-8080-exec-2]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: begin
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: committing
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: Processing flush-time cascades
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: Dirty checking collections
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: Listing entities:
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: org.example.modelClasses.Notebooks{important=false, notes=fsafas, reminder=null, name=fsaf, id=2, user=org.example.modelClasses.Users#1, createdWhen=2022-05-08T15:15:12.718184600}
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-1]: HHH000420: Closing un-released batch
2022-05-08 15:15:12 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@908120245 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@606556288 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@42a2ce72
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9f2cec5
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:15:12 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@846227464 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@734802507)
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@402386633 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@6de40afa
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@631319593 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@360148276 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@2e8e6ec9
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2cef593c
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@106675dd
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@65c4b573
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@106675dd
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@38616724
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@106675dd
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@6e91ffad
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@106675dd
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@4dfab73f
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@106675dd
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@dd5fcde
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@106675dd
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@3ebee207
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@106675dd
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@5fb31eea
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@106675dd
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@4768196c
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@106675dd
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@65f93e53
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@106675dd
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@2c9e4631
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@106675dd
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@6b1d5906
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@106675dd
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:15:12 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:15:12 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:15:15 WARN  [http-nio-8080-exec-5]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1311532688 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1089175845 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@309d2b52
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54c28bac
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:15:15 WARN  [http-nio-8080-exec-5]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1643738193 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@734802507)
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1451705561 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@65b7e911
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@159041778 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1328706831 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@6bb296b8
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@469221a3
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [true]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d204f82
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [577]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@af935c5
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [true]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Время]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [тест]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d204f82
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [2]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@75816574
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d204f82
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [65]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@2249cd5e
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d204f82
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [290]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@3d0acaca
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d204f82
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [801]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@7e9e87b3
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d204f82
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [769]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@4af7d1
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - []
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - []
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d204f82
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [739]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@6c05f9bb
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - []
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d204f82
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [738]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@732226b
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d204f82
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [481]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@d9b8e21
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [aew]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d204f82
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [641]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@5ab8143c
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d204f82
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [33]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@19b3f6f1
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [141f]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d204f82
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:15:15 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:15:15 INFO  [http-nio-8080-exec-5]: Пользователь wqr вошел
2022-05-08 15:17:02 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:17:02 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:17:02 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:17:02 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:17:02 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:17:02 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:17:02 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@16360323
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@16360323
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@16360323
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d869653
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d869653
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2e3f3560
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2e3f3560
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2e88d1e1
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2e88d1e1
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@881f008
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@881f008
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@881f008
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@13cdb45
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@13cdb45
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@13cdb45
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@567f7a37
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@567f7a37
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@567f7a37
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@567f7a37
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@3e90bec0
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@391608aa
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@391608aa
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5e170a3e
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@73946d09
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@4849bb05
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@4849bb05
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4849bb05
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@4113a9fe
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@4113a9fe
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4113a9fe
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@27b30d18
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@27b30d18
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@27b30d18
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@779fd0c2
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@779fd0c2
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@779fd0c2
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@728bcca7
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@728bcca7
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@728bcca7
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2e8bc751
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2e8bc751
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@11efd455
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@11efd455
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@18ff1f6a
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@18ff1f6a
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@18ff1f6a
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@343d1626
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@44fcfebf
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@44fcfebf
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2b5ed709
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@4b3a9947
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4b3a9947
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@4b3a9947
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@17ea3a20
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@17ea3a20
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@17ea3a20
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@34c03764
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@69fb486a
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@769404b3
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@769404b3
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@30e90b7b
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@30e90b7b
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a76115
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@362cc1d3
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@604bea39
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@18819798
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2610e254
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@76628d1c
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@49c7abcb
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@49c7abcb
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5d6ec83c
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5d6ec83c
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c4d9387
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c4d9387
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1ea5eb7f
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1ea5eb7f
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6a488293
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6a488293
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41cc88ce
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@518deadb
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60420d86
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60420d86
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4e304707
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4e304707
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b1f3cf7
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55fac87d
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@25a4c179
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@25a4c179
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@6960a2b5
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6960a2b5
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7b8ad3ea
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7b8ad3ea
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7b8ad3ea
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@783045c6
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@783045c6
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@783045c6
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7b1cecb0
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@17058c6c
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@3a3d08e5
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3a3d08e5
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40d97411
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40d97411
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40d97411
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5cbc69d6
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6761e8c1
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@3549aee8
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3549aee8
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@3ebb3dac
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3ebb3dac
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3ebb3dac
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@1f61174
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1f61174
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6939c66b
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6939c66b
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@11ff1b4a
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@11ff1b4a
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@764e0284
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@764e0284
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@4702c088
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4702c088
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@60af5c9d
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4884d24d
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4884d24d
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@cca9cec
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@cca9cec
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@646fe89c
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7689232
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5d90b70
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@353fadad
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2e0f989e
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6db5766f
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@20fa6222
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@68e0f155
2022-05-08 15:17:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3af95fbf
2022-05-08 15:17:03 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:17:03 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:17:03 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:17:03 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:17:03 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:17:04 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:17:04 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:17:08 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:17:08 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@59e70aac] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@23e0e85e]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3bf67cfe, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:17:09 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2e1cb4e1] under count; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f74868] under every; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@357b8bb1] under any; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@72c7716b] under position; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@36ee69fb] under overlay; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5710672b] under trim; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1eef8936] under cast; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@599a2e7a] under collate; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@37a0b53a] under extract; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2f9ec169] under ifnull; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@253251b1] under pad; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@16ef6e99] under str; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6c4e8d28] under format; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@14d20c43] under timestampadd; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@17739d7a] under timestampdiff; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@d346c79] under current_date; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@416ed68b] under current_time; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7b9cdda8] under current_timestamp; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40ccd028] under local_date; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6e352bec] under local_time; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5958622f] under local_datetime; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@44b48531] under offset_datetime; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62df401f] under instant; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@471bc1ec] under sql; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7130b189] under count; prior registration was org.hibernate.dialect.function.CountFunction@2e1cb4e1
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@103a40d2] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6e352bec
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5958622f
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7695c4b7] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@72c7716b
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@767478e8] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2bb2463] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6c4e8d28
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@1923c92b] under listagg; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1676c4da] under mode; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@729968e3] under percentile_cont; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7e4717cf] under percentile_disc; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@67999347] under rank; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@50e3bd4b] under dense_rank; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45d56873] under percent_rank; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@54ec4113] under cume_dist; prior registration was null
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@59e70aac] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4c4a1bf9]
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:17:10 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7f56fed0] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5327f1f7] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:17:11 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@22a1c2ae] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@168dfcaf
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 9391a640-e414-466f-a1a7-8871ed6be326 (<unnamed>)
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:17:11 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:17:12 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@269148817 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1708383566 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@6f66b725
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d058e36
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:17:12 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@22083245 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@991626590)
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1681366575 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@76054fa
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@777067657 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@978253282 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@10a7b85a
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35a94eff
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9afd9d3
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@3334f0e
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9afd9d3
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@32f62e5c
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9afd9d3
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@57f6da94
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9afd9d3
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@20e0e0f8
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9afd9d3
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@393280d5
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9afd9d3
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@3a35cd61
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9afd9d3
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@5b7682c9
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9afd9d3
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@7c365e7f
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9afd9d3
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@51af4d04
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9afd9d3
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@45e5cc95
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9afd9d3
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@2aea7e2a
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9afd9d3
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:17:12 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:17:12 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Handling root path - Notebooks
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Encountered implicit select clause : FROMNotebooksnwherelower(n.name)likelower('%f')AND(n.user=:user)
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Error processing stanza {is-like}
java.lang.NullPointerException: Cannot invoke "org.hibernate.query.sqm.tree.expression.SqmExpression.accept(org.hibernate.query.sqm.SemanticQueryWalker)" because the return value of "org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.getEscapeCharacter()" is null
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitLikePredicate$35(SqmTreePrinter.java:889)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitLikePredicate(SqmTreePrinter.java:884)
	at org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.accept(SqmLikePredicate.java:120)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitJunctionPredicate$30(SqmTreePrinter.java:816)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitJunctionPredicate(SqmTreePrinter.java:812)
	at org.hibernate.query.sqm.tree.predicate.SqmJunctionPredicate.accept(SqmJunctionPredicate.java:76)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitWhereClause$28(SqmTreePrinter.java:789)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitWhereClause(SqmTreePrinter.java:787)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitQuerySpec$12(SqmTreePrinter.java:431)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitQuerySpec(SqmTreePrinter.java:426)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:122)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitSelectStatement$7(SqmTreePrinter.java:336)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitSelectStatement(SqmTreePrinter.java:334)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.logTree(SqmTreePrinter.java:149)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:89)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$createQuery$2(AbstractSharedSessionContract.java:741)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:141)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:128)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:738)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:656)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at org.example.DAOClasses.NotebookDao.search(NotebookDao.java:166)
	at org.example.servlets.SearchServlet.doGet(SearchServlet.java:68)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [is-like]
            <- [is-like]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:17:18 WARN  [http-nio-8080-exec-5]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Created new SQL alias : n1_0
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1044587664 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@991626590)
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@228323370 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where lower(n1_0.name) like lower('%f') and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [2]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@769430c2
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@398967045 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@77446254 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@6dcebd4a
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4792ffdf
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@131855f9
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [290]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@5f76627e
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@131855f9
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [739]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@4610fb8c
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - []
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@131855f9
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:17:18 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Handling root path - Notebooks
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Encountered implicit select clause : FROMNotebooksnwherelower(n.notes)likelower('%a')AND(n.user=:user)
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Error processing stanza {is-like}
java.lang.NullPointerException: Cannot invoke "org.hibernate.query.sqm.tree.expression.SqmExpression.accept(org.hibernate.query.sqm.SemanticQueryWalker)" because the return value of "org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.getEscapeCharacter()" is null
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitLikePredicate$35(SqmTreePrinter.java:889)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitLikePredicate(SqmTreePrinter.java:884)
	at org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.accept(SqmLikePredicate.java:120)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitJunctionPredicate$30(SqmTreePrinter.java:816)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitJunctionPredicate(SqmTreePrinter.java:812)
	at org.hibernate.query.sqm.tree.predicate.SqmJunctionPredicate.accept(SqmJunctionPredicate.java:76)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitWhereClause$28(SqmTreePrinter.java:789)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitWhereClause(SqmTreePrinter.java:787)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitQuerySpec$12(SqmTreePrinter.java:431)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitQuerySpec(SqmTreePrinter.java:426)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:122)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitSelectStatement$7(SqmTreePrinter.java:336)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitSelectStatement(SqmTreePrinter.java:334)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.logTree(SqmTreePrinter.java:149)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:89)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$createQuery$2(AbstractSharedSessionContract.java:741)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:141)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:128)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:738)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:656)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at org.example.DAOClasses.NotebookDao.search(NotebookDao.java:166)
	at org.example.servlets.SearchServlet.doGet(SearchServlet.java:68)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [is-like]
            <- [is-like]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:17:24 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Created new SQL alias : n1_0
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@911015111 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@991626590)
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1825495451 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where lower(n1_0.notes) like lower('%a') and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [290]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@6d521d84
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@2009732020 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1667299730 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@2ae52ca0
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a5f2bbc
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bce2b5c
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [738]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@6ac68bbb
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bce2b5c
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:17:24 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:17:34 DEBUG [http-nio-8080-exec-7]: Handling root path - Notebooks
2022-05-08 15:17:34 DEBUG [http-nio-8080-exec-7]: Encountered implicit select clause : FROMNotebooksnwherelower(n.createdWhen)likelower('%2022')AND(n.user=:user)
2022-05-08 15:17:34 DEBUG [http-nio-8080-exec-7]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:17:34 ERROR [http-nio-8080-exec-7]: java.lang.IllegalArgumentException: org.hibernate.QueryException: Parameter 1 of function lower() has type STRING, but argument is of type java.time.LocalDateTime
2022-05-08 15:17:38 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:17:42 DEBUG [http-nio-8080-exec-9]: HQL : FROM Notebooks n where (:row is :current) AND (n.user = :user) ORDER BY n.createdWhen DESC
2022-05-08 15:17:42 DEBUG [http-nio-8080-exec-9]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:17:42 ERROR [http-nio-8080-exec-9]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (:row is :current) AND (n.user = :user) ORDER BY n.createdWhen DESC]
2022-05-08 15:19:14 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:19:14 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:19:14 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:19:14 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:19:14 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:19:15 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5b175
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5b175
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5b175
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@72c24b90
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@72c24b90
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@51c0a49b
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@51c0a49b
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@554bd3cb
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@554bd3cb
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@78e84e0e
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@78e84e0e
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@78e84e0e
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@18161448
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18161448
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@18161448
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4c268fad
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4c268fad
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@4c268fad
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@4c268fad
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@47f8c869
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@7d5a76a6
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7d5a76a6
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@55468911
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2de53ff3
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2c5f11a6
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2c5f11a6
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2c5f11a6
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@29eadcd
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@29eadcd
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@29eadcd
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@63f1b28e
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@63f1b28e
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@63f1b28e
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@676f13a4
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@676f13a4
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@676f13a4
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@33e9ecce
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@33e9ecce
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@33e9ecce
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@446edfbb
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@446edfbb
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2a65707a
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2a65707a
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@3588b4a1
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@3588b4a1
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3588b4a1
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@497ba142
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@7bda3cd1
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7bda3cd1
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7a3d7570
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@a60eb2a
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@a60eb2a
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@a60eb2a
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1e852a95
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@1e852a95
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@1e852a95
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@3413b120
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2514d427
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@28204214
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28204214
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1f460407
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1f460407
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@36752c7e
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@35c3637b
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1f59a735
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3010fee5
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2f193245
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@16f5466
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@53dd2b71
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@53dd2b71
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@648d1039
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@648d1039
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2e09df7
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2e09df7
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@79d735a9
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@79d735a9
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@43eb0f41
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@43eb0f41
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4f6bd3dd
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4962e0e2
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@958fe1a
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@958fe1a
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@12d27977
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@12d27977
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3b6a5cb
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d0d30af
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@13ebad3a
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@13ebad3a
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@12f367f1
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@12f367f1
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@24dd1099
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@24dd1099
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@24dd1099
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@10e1d4e5
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@10e1d4e5
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@10e1d4e5
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ead39be
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@57681175
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@1bfd9ad9
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1bfd9ad9
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@52533bf
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@52533bf
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@52533bf
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@32729a6c
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2586c6ee
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@52dabbd5
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@52dabbd5
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@7e4ec2fa
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7e4ec2fa
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7e4ec2fa
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@584996a5
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@584996a5
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4beb8af4
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4beb8af4
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4c68844f
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4c68844f
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4439c62a
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4439c62a
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@50518cb6
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@50518cb6
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@477a0062
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@53c2d287
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@53c2d287
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@267f757b
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@267f757b
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@64595ed5
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4941b3a4
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2b1641ba
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@45bff24f
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6bbea3db
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2fa6f19b
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@36a47e44
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@c33df55
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@128d1573
2022-05-08 15:19:16 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:19:16 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:19:16 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:19:16 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:19:16 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:19:16 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:19:16 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:19:21 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5b375fcc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6650404a]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:19:21 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@54055ba5, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@665cc8f] under count; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@170b29af] under every; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2cfd6b91] under any; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1618e386] under position; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@da0478c] under overlay; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@683b5353] under trim; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7c7cad73] under cast; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79c7799] under collate; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@75493196] under extract; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@16b8817f] under ifnull; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@520fcb5d] under pad; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3c3312fb] under str; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2243d1e4] under format; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@472fdc1b] under timestampadd; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@26bb3f8d] under timestampdiff; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@17f226d8] under current_date; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3b3b6d34] under current_time; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@776caf21] under current_timestamp; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4ec750a4] under local_date; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@48057b42] under local_time; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@28b7edbb] under local_datetime; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ab04a2b] under offset_datetime; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4e866fa9] under instant; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f2810d5] under sql; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@47b7522] under count; prior registration was org.hibernate.dialect.function.CountFunction@665cc8f
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@13eaf527] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@48057b42
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@28b7edbb
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@714da3ef] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1618e386
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30e5ef92] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@462b6ac9] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2243d1e4
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4d92342c] under listagg; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@52711856] under mode; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@229b65c9] under percentile_cont; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@75ea6067] under percentile_disc; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5fcd9302] under rank; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@38a760d4] under dense_rank; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4d33b315] under percent_rank; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@25b195eb] under cume_dist; prior registration was null
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5b375fcc] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7fb74f54]
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:19:22 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@427be0d7] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@77242b34] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:19:23 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@dd947fe] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@75a19cb1
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 14b1e5a8-e6ff-4379-95c1-3e447200a146 (<unnamed>)
2022-05-08 15:19:23 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:19:24 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:19:24 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1207774233 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@211979842 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@23651e9d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34bcc9b3
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:19:25 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1786615511 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@670544099)
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1581719272 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@56634b62
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1621738068 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1624876042 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@52efbcf7
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64019b5f
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbe77d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@6c822231
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbe77d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@20165aff
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbe77d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@42b76d78
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbe77d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@196cfa5c
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbe77d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@6402d0ea
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbe77d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@76d1bf37
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbe77d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@f74c038
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbe77d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@71346590
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbe77d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@3c37edc
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbe77d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@78104194
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbe77d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@51cc3bae
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbe77d
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:19:25 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:19:25 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:19:41 DEBUG [http-nio-8080-exec-5]: HQL : FROM Notebooks n where (:row is :current) AND (n.user = :user) ORDER BY n.createdWhen DESC
2022-05-08 15:19:41 DEBUG [http-nio-8080-exec-5]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:19:41 ERROR [http-nio-8080-exec-5]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (:row is :current) AND (n.user = :user) ORDER BY n.createdWhen DESC]
2022-05-08 15:19:44 DEBUG [http-nio-8080-exec-6]: HQL : FROM Notebooks n where (:row is :current) AND (n.user = :user) ORDER BY n.createdWhen DESC
2022-05-08 15:19:44 DEBUG [http-nio-8080-exec-6]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:19:44 ERROR [http-nio-8080-exec-6]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (:row is :current) AND (n.user = :user) ORDER BY n.createdWhen DESC]
2022-05-08 15:19:48 DEBUG [http-nio-8080-exec-7]: Handling root path - Notebooks
2022-05-08 15:19:48 DEBUG [http-nio-8080-exec-7]: Encountered implicit select clause : FROMNotebooksnwherelower(n.createdWhen)likelower('%20')AND(n.user=:user)
2022-05-08 15:19:48 DEBUG [http-nio-8080-exec-7]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:19:48 ERROR [http-nio-8080-exec-7]: java.lang.IllegalArgumentException: org.hibernate.QueryException: Parameter 1 of function lower() has type STRING, but argument is of type java.time.LocalDateTime
2022-05-08 15:19:51 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:20:35 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:20:35 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:20:35 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:20:35 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:20:35 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:20:36 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@58c7a4f0
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@58c7a4f0
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@58c7a4f0
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@41c9909a
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@41c9909a
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6bf2747f
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6bf2747f
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@42935363
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@42935363
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@27169fe5
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@27169fe5
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@27169fe5
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@2ad696dd
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2ad696dd
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@2ad696dd
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@527f5e74
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@527f5e74
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@527f5e74
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@527f5e74
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@aaf1713
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@19d55814
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@19d55814
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7ab458d
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2f8f37f2
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@5d6aba9f
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@5d6aba9f
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5d6aba9f
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@6ecc5cde
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@6ecc5cde
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6ecc5cde
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@3316eba7
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@3316eba7
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3316eba7
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@65f06a90
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@65f06a90
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@65f06a90
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@6d469af3
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@6d469af3
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6d469af3
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@61e01129
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@61e01129
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@65af9561
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@65af9561
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@3edc7ae
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@3edc7ae
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3edc7ae
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5a255422
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@3bad6f16
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3bad6f16
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2230e19f
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@4f8d82c0
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4f8d82c0
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@4f8d82c0
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3f794b57
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@3f794b57
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@3f794b57
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@6f7c4671
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4ae57e18
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@695d6e06
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@695d6e06
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c8bb389
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c8bb389
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@11c921a7
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@70bd9838
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7212f577
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33c41747
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6bd8dc81
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77b8f59a
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@12e40f57
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@12e40f57
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1094c63
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1094c63
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2c98a417
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2c98a417
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1c3c803b
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1c3c803b
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e10aa5c
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e10aa5c
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@653181a9
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@ce03904
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@74254dfb
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@74254dfb
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5f4c4b69
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5f4c4b69
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3619b5e0
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bbc823e
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@65a84a27
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@65a84a27
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@588242f8
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@588242f8
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@23cf5abd
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@23cf5abd
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@23cf5abd
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5b63055a
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@113c094c
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@487fa364
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@487fa364
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@58de5a22
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@58de5a22
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@58de5a22
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1b54ddb6
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6ad3c1f9
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@5f023b44
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5f023b44
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@752775cc
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@752775cc
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@752775cc
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@4823afb3
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4823afb3
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3c8b6347
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3c8b6347
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@721db789
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@721db789
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3cda3513
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3cda3513
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@69514b0c
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@69514b0c
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@e278c3a
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@388f2924
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@388f2924
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@502729ac
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@502729ac
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@2b2a99c7
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6b66ea0
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@53327668
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@333954b8
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4c2217b9
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7954a3f3
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@39151b87
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@40700489
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1c334ce1
2022-05-08 15:20:37 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:20:37 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:20:37 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:20:37 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:20:37 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:20:37 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:20:37 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:20:41 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:20:41 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:20:41 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:20:41 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65ad4772] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@662a1f52]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@42fee73, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:20:42 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5c0decb3] under count; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@48fdb770] under every; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3f0549a6] under any; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@44c64b81] under position; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@fe3f511] under overlay; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3f68f4d0] under trim; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1429489a] under cast; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fb76898] under collate; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7cf164cc] under extract; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3cf90f73] under ifnull; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@22da2d16] under pad; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5e947dbe] under str; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13b20f96] under format; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@538b5c8f] under timestampadd; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1236eb78] under timestampdiff; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7785a29a] under current_date; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4ec29398] under current_time; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@55f62bc0] under current_timestamp; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6872e680] under local_date; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32b91866] under local_time; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@683d03fa] under local_datetime; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cf18d16] under offset_datetime; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@73c82cee] under instant; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3beec753] under sql; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@71ea364f] under count; prior registration was org.hibernate.dialect.function.CountFunction@5c0decb3
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@51f78dc4] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@32b91866
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@683d03fa
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@213f3b8d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@44c64b81
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d6e2b19] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@20432b75] under format; prior registration was org.hibernate.dialect.function.FormatFunction@13b20f96
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@f87ec03] under listagg; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4c96f7b5] under mode; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@69a1c9f8] under percentile_cont; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@449cfbb9] under percentile_disc; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3533e7ad] under rank; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7fad5e6c] under dense_rank; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4db6bef8] under percent_rank; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5742b6cc] under cume_dist; prior registration was null
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65ad4772] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4d6eb45b]
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:20:43 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c9f9913] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2c0cfd2a] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:20:44 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@63c55d30] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6afa8d2
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 13c751cf-6246-4f1d-998e-2694f6b8abfd (<unnamed>)
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:20:44 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:20:45 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1343970592 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1066730845 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@6436df77
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e48abef
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:20:45 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@627588952 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1310493364)
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1178415355 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@a70d4ae
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@703547182 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@631648670 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@329c9845
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6de4b608
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@70017882
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@546129d0
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@108b0253
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@16db331e
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@6de59c2f
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@309707ea
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@78c61231
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@374a9df4
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@768f6bd6
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@7e2f9aba
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@363058d4
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:20:45 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:20:45 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:20:49 DEBUG [http-nio-8080-exec-4]: Handling root path - Notebooks
2022-05-08 15:20:49 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMNotebooksnwherelower(n.createdWhen)likelower('%2022')AND(n.user=:user)
2022-05-08 15:20:49 DEBUG [http-nio-8080-exec-4]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:20:49 ERROR [http-nio-8080-exec-4]: java.lang.IllegalArgumentException: org.hibernate.QueryException: Parameter 1 of function lower() has type STRING, but argument is of type java.time.LocalDateTime
2022-05-08 15:21:11 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:22:02 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:22:02 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:22:02 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:22:02 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:22:02 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:22:02 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:22:02 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@67b61fde
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@67b61fde
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@67b61fde
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2bd57769
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2bd57769
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@314c0f11
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@314c0f11
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@303b23d2
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@303b23d2
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@672492e4
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@672492e4
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@672492e4
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@674adf56
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@674adf56
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@674adf56
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@362f7029
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@362f7029
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@362f7029
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@362f7029
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@5f63f08d
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1c13ea37
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1c13ea37
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2d12368c
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6071b53f
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2056c624
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2056c624
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2056c624
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@2397c24b
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@2397c24b
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2397c24b
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@1f0d36e3
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@1f0d36e3
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1f0d36e3
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7238a070
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7238a070
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7238a070
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@64493ff5
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@64493ff5
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@64493ff5
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79513cad
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79513cad
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@f9da74a
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@f9da74a
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@3891bde9
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@3891bde9
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3891bde9
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@158a9b99
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@65ce69d1
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65ce69d1
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@78b35d5
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@3240ae38
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3240ae38
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@3240ae38
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@73d7adba
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@73d7adba
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@73d7adba
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@6541d2f0
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3bba7610
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@cbc2e31
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@cbc2e31
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4248e861
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4248e861
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2975648a
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@41978d42
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2cb7eee7
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@29b910f0
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2bea6079
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@56ea15db
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@45390937
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@45390937
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2466aff0
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2466aff0
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5c77eaad
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5c77eaad
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5a357835
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5a357835
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@57c8a2f5
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@57c8a2f5
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@46c09ed3
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25813624
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@54041671
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@54041671
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@46c9c90e
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@46c9c90e
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4bdf102
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28a1d7a7
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@5c62fb5c
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5c62fb5c
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@54ebc867
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@54ebc867
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3f351619
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3f351619
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3f351619
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@190ff2b7
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@190ff2b7
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@190ff2b7
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@52fc42d1
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@585e0019
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@4fcc40d5
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4fcc40d5
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@29b089d1
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@29b089d1
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@29b089d1
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@196aacfc
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@311c3900
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@1c7b1d1e
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1c7b1d1e
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@3128f141
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3128f141
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3128f141
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@7d69b6d4
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7d69b6d4
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2d6d5440
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2d6d5440
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@69ba3f1e
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@69ba3f1e
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1f6e7991
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1f6e7991
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@2f81a3be
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2f81a3be
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68892d5a
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@50180a41
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@50180a41
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@27526a6e
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@27526a6e
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@db42c57
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@694eebcb
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@56db92da
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1884a30c
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@34fef2df
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2a705738
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@20374dee
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1d160627
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5ebd6750
2022-05-08 15:22:03 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:22:03 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:22:03 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:22:03 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:22:03 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:22:03 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:22:03 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:22:08 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14d510f7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6a958666]
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:22:08 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@57a031a7, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4add7323] under count; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7aec8caf] under every; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@277038fd] under any; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@9a4988a] under position; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3255edc4] under overlay; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3cac174a] under trim; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@30147516] under cast; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77eeec6c] under collate; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@735b7d04] under extract; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@415f46c5] under ifnull; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6b78f31f] under pad; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1f5e2d11] under str; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6b9a6afa] under format; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12452fd7] under timestampadd; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3a9f3a62] under timestampdiff; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25670dfa] under current_date; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2a2f98b4] under current_time; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@782dae2d] under current_timestamp; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ddbed48] under local_date; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40ce33d4] under local_time; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16f2e941] under local_datetime; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33b6174] under offset_datetime; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1087df6] under instant; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2b1d21ae] under sql; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@56fd0773] under count; prior registration was org.hibernate.dialect.function.CountFunction@4add7323
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@359c5ae7] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@40ce33d4
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@16f2e941
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4394bfd1] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@9a4988a
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@380cfea7] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13d0347b] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6b9a6afa
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@25027bfe] under listagg; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7818feb5] under mode; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3b547def] under percentile_cont; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@144534f8] under percentile_disc; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6e6646b9] under rank; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@58591294] under dense_rank; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@44355ce1] under percent_rank; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5dc361ef] under cume_dist; prior registration was null
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:22:09 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14d510f7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@a489068]
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2e5688c4] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3dd2355e] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:22:10 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:22:11 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5656197e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bcaa29d
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: c25378c0-09fd-48b6-abce-c667c8ad30a1 (<unnamed>)
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:22:11 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:22:12 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@2142259602 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1973479422 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@55820b8e
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b23c259
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:22:12 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1070230475 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1716190029 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@28275e94
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@817557115 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@843404038 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@5ea9b504
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22e64c76
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@1cba9350
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@4c66f44d
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@5f131757
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@2aaf1dd3
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@62473bc5
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@19f86f5c
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@5e166a9b
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@c85a50f
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@57473e49
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@d1f2972
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@60b0d8f8
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:22:12 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:22:12 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Handling root path - Notebooks
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMNotebooksnwheren.createdWhenlike('%2022')AND(n.user=:user)
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Error processing stanza {is-like}
java.lang.NullPointerException: Cannot invoke "org.hibernate.query.sqm.tree.expression.SqmExpression.accept(org.hibernate.query.sqm.SemanticQueryWalker)" because the return value of "org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.getEscapeCharacter()" is null
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitLikePredicate$35(SqmTreePrinter.java:889)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitLikePredicate(SqmTreePrinter.java:884)
	at org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.accept(SqmLikePredicate.java:120)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitJunctionPredicate$30(SqmTreePrinter.java:816)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitJunctionPredicate(SqmTreePrinter.java:812)
	at org.hibernate.query.sqm.tree.predicate.SqmJunctionPredicate.accept(SqmJunctionPredicate.java:76)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitWhereClause$28(SqmTreePrinter.java:789)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitWhereClause(SqmTreePrinter.java:787)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitQuerySpec$12(SqmTreePrinter.java:431)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitQuerySpec(SqmTreePrinter.java:426)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:122)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitSelectStatement$7(SqmTreePrinter.java:336)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitSelectStatement(SqmTreePrinter.java:334)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.logTree(SqmTreePrinter.java:149)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:89)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$createQuery$2(AbstractSharedSessionContract.java:741)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:141)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:128)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:738)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:656)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at org.example.DAOClasses.NotebookDao.search(NotebookDao.java:172)
	at org.example.servlets.SearchServlet.doGet(SearchServlet.java:68)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [is-like]
              -> [basic-path] - `org.example.modelClasses.Notebooks(n).createdWhen`
            <- [is-like]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:22:17 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).createdWhen) 
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1776342353 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1182892575 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.created_when like '%2022' and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:22:17 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:22:27 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:22:27 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:22:27 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:22:27 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@960273746 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:22:27 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1417943170 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:22:27 DEBUG [http-nio-8080-exec-6]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.created_when like '%2022' and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:22:27 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:22:27 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:22:27 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:22:38 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:22:54 DEBUG [http-nio-8080-exec-4]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:22:54 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:22:54 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:22:54 INFO  [http-nio-8080-exec-4]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:22:54 DEBUG [http-nio-8080-exec-4]: HHH000206: hibernate.properties not found
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:22:55 DEBUG [http-nio-8080-exec-4]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4be1f55e
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4be1f55e
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4be1f55e
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@43a124a1
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@43a124a1
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3ea58b60
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3ea58b60
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@43ace859
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@43ace859
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@7a3be77
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@7a3be77
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7a3be77
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@4ded060e
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4ded060e
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@4ded060e
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5f017a58
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5f017a58
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@5f017a58
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@5f017a58
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration image -> org.hibernate.type.BasicTypeReference@7b4bbfc1
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@6181f6d9
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6181f6d9
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@44795191
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@10fe30fc
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration short -> org.hibernate.type.BasicTypeReference@36ed3095
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration short -> org.hibernate.type.BasicTypeReference@36ed3095
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@36ed3095
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@58b42faf
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration int -> org.hibernate.type.BasicTypeReference@58b42faf
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@58b42faf
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration long -> org.hibernate.type.BasicTypeReference@56cf18f1
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration long -> org.hibernate.type.BasicTypeReference@56cf18f1
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@56cf18f1
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration float -> org.hibernate.type.BasicTypeReference@3757bb04
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration float -> org.hibernate.type.BasicTypeReference@3757bb04
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3757bb04
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration double -> org.hibernate.type.BasicTypeReference@68e15ce3
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration double -> org.hibernate.type.BasicTypeReference@68e15ce3
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@68e15ce3
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1151cf07
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1151cf07
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3f77554c
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3f77554c
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration character -> org.hibernate.type.BasicTypeReference@35f2463d
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration char -> org.hibernate.type.BasicTypeReference@35f2463d
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@35f2463d
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@57960224
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration string -> org.hibernate.type.BasicTypeReference@4820d626
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4820d626
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4d78275b
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@6a1c4367
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6a1c4367
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@6a1c4367
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@d7cfb22
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@d7cfb22
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@d7cfb22
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration text -> org.hibernate.type.BasicTypeReference@43238d4d
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4fed288d
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@47e25d6c
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@47e25d6c
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2dad1b59
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2dad1b59
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@723ba244
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@54b445ce
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1e87b09
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@445adfbe
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6bdc6cf3
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1db0ce73
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5fc2deff
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5fc2deff
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4d774d96
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4d774d96
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@45441b3f
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@45441b3f
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5e9c86b2
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5e9c86b2
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@17609eb8
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@17609eb8
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@600c6a3f
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5f408e2
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3fe7a7f8
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3fe7a7f8
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ce16be2
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ce16be2
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f3fb1d3
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@aa91fce
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration date -> org.hibernate.type.BasicTypeReference@873a104
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@873a104
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration time -> org.hibernate.type.BasicTypeReference@2f6a6593
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2f6a6593
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7d09e884
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7d09e884
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7d09e884
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3f1cdf84
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3f1cdf84
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3f1cdf84
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2af222e2
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@56488cd2
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@64370357
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@64370357
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3d0e10aa
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3d0e10aa
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3d0e10aa
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6d0d0db
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@14ecf2cf
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration class -> org.hibernate.type.BasicTypeReference@481d76be
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@481d76be
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@55bb457
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@55bb457
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@55bb457
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@50dfa2f
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@50dfa2f
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@76841acb
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@76841acb
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@558f3a23
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@558f3a23
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@d2ed5c9
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@d2ed5c9
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration url -> org.hibernate.type.BasicTypeReference@67189ac1
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@67189ac1
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@311c86ab
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@773a865f
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@773a865f
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration object -> org.hibernate.type.BasicTypeReference@6e2f7e64
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@6e2f7e64
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration null -> org.hibernate.type.NullType@350c3adf
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@844ac00
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@29e73ce0
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5863ac4b
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@cedbf5a
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@21e4366b
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@31740e8b
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7430ed1a
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@15468ba9
2022-05-08 15:22:56 WARN  [http-nio-8080-exec-4]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:22:56 INFO  [http-nio-8080-exec-4]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:22:56 INFO  [http-nio-8080-exec-4]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:22:56 INFO  [http-nio-8080-exec-4]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:22:56 INFO  [http-nio-8080-exec-4]: HHH10001003: Autocommit mode: false
2022-05-08 15:22:56 DEBUG [http-nio-8080-exec-4]: Initializing Connection pool with 1 Connections
2022-05-08 15:22:56 INFO  [http-nio-8080-exec-4]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: JDBC version : 4.2
2022-05-08 15:23:01 INFO  [http-nio-8080-exec-4]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ba6d03f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@c37ba7c]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Import with entity name Notebooks
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: building BasicValue for id
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.id
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Building property id
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: building BasicValue for createdWhen
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Building property createdWhen
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: building BasicValue for important
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.important
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Building property important
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: building BasicValue for name
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.name
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Building property name
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: building BasicValue for notes
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.notes
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Building property notes
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: building BasicValue for reminder
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Building property reminder
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Building property user
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Import with entity name Users
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: building BasicValue for id
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.id
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Building property id
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: building BasicValue for email
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.email
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Building property email
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Building property notebooks
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: building BasicValue for password
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.password
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Building property password
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: building BasicValue for username
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.username
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Building property username
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:23:01 DEBUG [http-nio-8080-exec-4]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Building session factory
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Session factory constructed with filter configurations : {}
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar;G:\IntelliJ IDEA Community Edition 2021.1.3\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, jboss.modules.system.pkgs=com.intellij.rt, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@40b4ea79, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Instantiated session factory
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Starting QueryPlanCache(2048)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1f0d6d59] under count; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2749f0c0] under every; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2c08e9da] under any; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : length -> character_length
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2446f7c0] under position; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2234565f] under overlay; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5df81293] under trim; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@61a23e94] under cast; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c145cec] under collate; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5e16caaa] under extract; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3b0f1172] under ifnull; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@349e35c] under pad; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1b13199] under str; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5d18efce] under format; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7574ae77] under timestampadd; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6f9badb7] under timestampdiff; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4ab24bc0] under current_date; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69fe7108] under current_time; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34b015d8] under current_timestamp; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current date -> current_date
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current time -> current_time
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79b01965] under local_date; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2184a1d8] under local_time; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3b68e2d1] under local_datetime; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f423eb1] under offset_datetime; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : local date -> local_date
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : local time -> local_time
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7640650d] under instant; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current_instant -> instant
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@65f8ed5c] under sql; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6333dcef] under count; prior registration was org.hibernate.dialect.function.CountFunction@1f0d6d59
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@6a537553] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : day -> day_of_month
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2184a1d8
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3b68e2d1
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : chr -> char
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a81e0be] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2446f7c0
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b5aa117] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : every -> bool_and
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registering alternate key : any -> bool_or
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4c58cab4] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5d18efce
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@bdd571d] under listagg; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@73c0c6dc] under mode; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@58fb6ccd] under percentile_cont; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@346f861a] under percentile_disc; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5760a1c7] under rank; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@69d3ea81] under dense_rank; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3ce6aeb3] under percent_rank; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1e6896d9] under cume_dist; prior registration was null
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: abs(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double acos(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Boolean any(BOOLEAN arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer ascii(STRING arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double asin(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double atan(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double avg(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: bit_and(arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer bit_length(STRING arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: bit_or(arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: bitand(arg0, arg1)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: bitor(arg0, arg1)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: bitxor(arg0, arg1)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: cast(arg as Type)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: ceiling(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Character char(INTEGER arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer character_length(STRING arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String collate(STRING string as COLLATION collation)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double cos(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double cot(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Long count([distinct ]{arg|*})
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double cume_dist([arg0[, ...]])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Date curdate()
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Date current_date
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Time current_time
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Timestamp current_timestamp
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Time curtime()
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer day(DATE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer day_of_month(DATE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer day_of_week(DATE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer day_of_year(DATE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String dayname(DATE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double degrees(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Long dense_rank([arg0[, ...]])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Boolean every(BOOLEAN arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double exp(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: first_valueANY value
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: floor(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer hour(TIME arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: ifnull(arg0, arg1)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Instant instant
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: last_valueANY value
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String left(STRING string, INTEGER length)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double ln(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: LocalDate local_date
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: LocalDateTime local_datetime
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: LocalTime local_time
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Time localtime
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Timestamp localtimestamp
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double log10(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String lower(STRING string)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String ltrim(STRING string)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: max(COMPARABLE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double median(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer microsecond(TIME arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: min(COMPARABLE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer minute(TIME arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: mode()
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer month(DATE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String monthname(DATE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Timestamp now()
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: nth_valueANY value, INTEGER nth
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: nullif(arg0, arg1)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer octet_length(STRING arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: OffsetDateTime offset_datetime
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double percent_rank([arg0[, ...]])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: percentile_cont(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: percentile_disc(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double pi()
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer position(STRING pattern in STRING string)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer quarter(DATE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double radians(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double rand([INTEGER seed])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Long rank([arg0[, ...]])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String repeat(STRING string, INTEGER times)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String right(STRING string, INTEGER length)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Long row_number()
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Long rownum()
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String rtrim(STRING string)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer second(TIME arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer sign(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double sin(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String soundex(arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String space(INTEGER arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Object sql
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double sqrt(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String str(arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: sum(arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Timestamp sysdate
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double tan(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: String upper(STRING string)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double var_pop(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Double var_samp(NUMERIC arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer week(DATE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer year(DATE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Boolean any(BOOLEAN predicate)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Character chr(INTEGER arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Date current date
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Time current time
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Timestamp current timestamp
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Instant current_instant
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer day(DATE arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Boolean every(BOOLEAN predicate)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Integer length(STRING arg)
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: LocalDate local date
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: LocalDateTime local datetime
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: LocalTime local time
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: OffsetDateTime offset datetime
2022-05-08 15:23:02 DEBUG [http-nio-8080-exec-4]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ba6d03f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@49c8f34a]
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]:  Row update: update notebooks set  where id=?
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Starting post-init callbacks
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]:  Version select: select id from notebooks where id =?
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c9c63b] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:23:03 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : u1_0
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]:  Version select: select id from users where id =?
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]:  Delete 0: delete from users where id=?
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : u1_0
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2d1e4d7] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: Checking 0 named HQL queries
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: Checking 0 named SQL queries
2022-05-08 15:23:04 INFO  [http-nio-8080-exec-4]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@26e6332a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: No alter strings for table : notebooks
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: No alter strings for table : users
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@197ad2e5
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: Registering SessionFactory: c273b152-a145-4ac6-92f6-33c1addabd28 (<unnamed>)
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: Statistics initialized [enabled=false]
2022-05-08 15:23:04 DEBUG [http-nio-8080-exec-4]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Handling root path - Users
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:23:05 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : u1_0
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@3617432 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@886447118 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@1ae9be3
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@327def8f
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Handling root path - Notebooks
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:23:05 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1195751663 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1345003124)
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1127760153 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@733285df
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@2143002929 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@354459050 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@191e942
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b50f9f1
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [true]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b6e3f8a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [577]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@7f57903f
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [true]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Время]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [тест]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b6e3f8a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [2]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@399caee4
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b6e3f8a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [65]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@3a160014
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b6e3f8a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [290]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@40fefab3
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b6e3f8a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [801]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@3eb4cfb
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b6e3f8a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [769]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@5fdc39ec
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - []
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - []
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b6e3f8a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [739]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@554084a3
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - []
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b6e3f8a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [738]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@62dcd7da
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b6e3f8a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [481]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@3b89c3ee
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [aew]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b6e3f8a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [641]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@5249e2a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b6e3f8a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [33]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@549067b1
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [141f]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b6e3f8a
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:23:05 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:23:05 INFO  [http-nio-8080-exec-4]: Пользователь wqr вошел
2022-05-08 15:23:26 DEBUG [http-nio-8080-exec-5]: Handling root path - Notebooks
2022-05-08 15:23:26 DEBUG [http-nio-8080-exec-5]: Encountered implicit select clause : FROMNotebooksnwheren.createdWhenlike('%2022')AND(n.user=:user)
2022-05-08 15:23:26 DEBUG [http-nio-8080-exec-5]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:23:26 DEBUG [http-nio-8080-exec-5]: Error processing stanza {is-like}
java.lang.NullPointerException: Cannot invoke "org.hibernate.query.sqm.tree.expression.SqmExpression.accept(org.hibernate.query.sqm.SemanticQueryWalker)" because the return value of "org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.getEscapeCharacter()" is null
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitLikePredicate$35(SqmTreePrinter.java:889)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitLikePredicate(SqmTreePrinter.java:884)
	at org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.accept(SqmLikePredicate.java:120)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitJunctionPredicate$30(SqmTreePrinter.java:816)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitJunctionPredicate(SqmTreePrinter.java:812)
	at org.hibernate.query.sqm.tree.predicate.SqmJunctionPredicate.accept(SqmJunctionPredicate.java:76)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitWhereClause$28(SqmTreePrinter.java:789)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitWhereClause(SqmTreePrinter.java:787)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitQuerySpec$12(SqmTreePrinter.java:431)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitQuerySpec(SqmTreePrinter.java:426)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:122)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitSelectStatement$7(SqmTreePrinter.java:336)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitSelectStatement(SqmTreePrinter.java:334)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.logTree(SqmTreePrinter.java:149)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:89)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$createQuery$2(AbstractSharedSessionContract.java:741)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:141)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:128)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:738)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:656)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at org.example.DAOClasses.NotebookDao.search(NotebookDao.java:172)
	at org.example.servlets.SearchServlet.doGet(SearchServlet.java:68)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 15:23:26 DEBUG [http-nio-8080-exec-5]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [is-like]
              -> [basic-path] - `org.example.modelClasses.Notebooks(n).createdWhen`
            <- [is-like]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:23:26 WARN  [http-nio-8080-exec-5]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:23:29 DEBUG [http-nio-8080-exec-5]: Created new SQL alias : n1_0
2022-05-08 15:23:29 DEBUG [http-nio-8080-exec-5]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:23:29 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).createdWhen) 
2022-05-08 15:23:29 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:23:29 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:23:29 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:23:29 DEBUG [http-nio-8080-exec-5]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:23:29 DEBUG [http-nio-8080-exec-5]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:23:30 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:23:30 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:23:30 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1826078127 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1345003124)
2022-05-08 15:23:30 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1351869147 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:23:30 DEBUG [http-nio-8080-exec-5]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.created_when like '%2022' and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:23:30 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:23:30 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:23:30 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:23:42 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:24:24 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:24:24 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:24:24 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:24:24 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:24:24 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:24:25 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:24:25 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:24:25 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:24:25 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:24:25 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:24:25 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@157dfdc
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@157dfdc
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@157dfdc
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6bb98b7e
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6bb98b7e
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2ce9b358
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2ce9b358
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@42ae07ff
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@42ae07ff
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@7d388949
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@7d388949
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7d388949
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@5a7d0feb
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5a7d0feb
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@5a7d0feb
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3bef048f
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3bef048f
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@3bef048f
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@3bef048f
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@9cc7df2
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@3087cf43
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3087cf43
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2379cef
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@413f3b5a
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2b76fd62
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2b76fd62
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2b76fd62
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@2585d298
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@2585d298
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2585d298
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@1b6be223
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@1b6be223
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b6be223
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@2336efff
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@2336efff
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2336efff
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@3f378b16
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@3f378b16
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3f378b16
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@342d8f7a
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@342d8f7a
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@70130926
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@70130926
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@644e59cc
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@644e59cc
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@644e59cc
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@67a20168
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@3fac14b9
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3fac14b9
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@571e6053
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@4188d345
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4188d345
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@4188d345
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@36d6335d
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@36d6335d
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@36d6335d
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@6900f0e2
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4db81969
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@4aade960
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4aade960
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4de667b3
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4de667b3
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@230f190d
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2e712f54
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@b323513
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@75171039
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2e0bb8e7
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@92739fd
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@13270f67
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@13270f67
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5efc53e2
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5efc53e2
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2d43045a
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2d43045a
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1d9b28de
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1d9b28de
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@366c503d
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@366c503d
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a337651
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3fe7c299
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7b7ed063
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7b7ed063
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2fc79a89
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2fc79a89
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ed7f0de
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3fa50e97
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@32552cc8
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@32552cc8
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@21d5fbd9
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@21d5fbd9
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2005ae3d
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2005ae3d
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2005ae3d
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3743dd1c
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3743dd1c
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3743dd1c
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2c6b8450
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@22eeb937
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@2f179f11
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2f179f11
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6950cd2
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6950cd2
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6950cd2
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@76ac4154
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@215c69b7
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@3220859a
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3220859a
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@1c7dec90
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1c7dec90
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1c7dec90
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@8cfb8aa
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@8cfb8aa
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4a9c69d5
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4a9c69d5
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7ca62949
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7ca62949
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@fcc4321
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@fcc4321
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@7a33b09a
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7a33b09a
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@53c8acc8
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@374b349
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@374b349
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@2bbb43b3
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@2bbb43b3
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@199684ed
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@547f16f6
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@51318ff6
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@bbf74ff
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@26a33889
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@ac7520d
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5754329c
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@273cac05
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1864bf1b
2022-05-08 15:24:26 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:24:26 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:24:26 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:24:26 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:24:26 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:24:26 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:24:26 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:24:31 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@122a1af4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3905815d]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:24:31 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1c05d531, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6da0c379] under count; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3df8be0f] under every; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2d8e3cb5] under any; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2ed9b48a] under position; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@9b6e66c] under overlay; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3c1d2d49] under trim; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@871d351] under cast; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a8c49f8] under collate; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@460196ef] under extract; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@14c4c3ba] under ifnull; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@18505a0d] under pad; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@560d0d41] under str; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@10c157bd] under format; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5087b86a] under timestampadd; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@132cee5f] under timestampdiff; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a9cfdcb] under current_date; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a512ce8] under current_time; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@162afcde] under current_timestamp; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@d85da5f] under local_date; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@304a1c81] under local_time; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33ff400c] under local_datetime; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@727296a1] under offset_datetime; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5186fd92] under instant; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7853c626] under sql; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@b011dee] under count; prior registration was org.hibernate.dialect.function.CountFunction@6da0c379
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2144181] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@304a1c81
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@33ff400c
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17ee39fc] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2ed9b48a
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a4e5c59] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@55690d17] under format; prior registration was org.hibernate.dialect.function.FormatFunction@10c157bd
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@508b5e4c] under listagg; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3d8e8144] under mode; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4bec643b] under percentile_cont; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2d09e472] under percentile_disc; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4524ac6a] under rank; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@26dd55ef] under dense_rank; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@652041fd] under percent_rank; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2538fba6] under cume_dist; prior registration was null
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@122a1af4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@13cebaad]
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:24:32 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ed59330] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@448217a7] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:24:33 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@577e219] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:24:33 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7944f4cf
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 4abd5123-71ea-4b7e-b694-492772498cf6 (<unnamed>)
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:24:34 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@768366304 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1893343132 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:24:34 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@24d5f780
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18cdac1f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:24:35 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@248984 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1239103533)
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1620741662 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@20121887
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1433652022 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@203648490 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@5677ed7c
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64ed2b88
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6048230f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@11dc5064
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6048230f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@39c56dfc
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6048230f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@59e6fce2
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6048230f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@7817fc8a
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6048230f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@bbbcc9c
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6048230f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@1903ea9a
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6048230f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@776c04b4
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6048230f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@30d8557f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6048230f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@65d2a0d4
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6048230f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@6383d1ce
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6048230f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@74dd20ae
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6048230f
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:24:35 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:24:35 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: HQL : FROM Notebooks n where n.createdWhen liken.user = :user) ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Handling root path - Notebooks
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMNotebooksnwheren.createdWhenlike('%2022%')AND(n.user=:user)
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Error processing stanza {is-like}
java.lang.NullPointerException: Cannot invoke "org.hibernate.query.sqm.tree.expression.SqmExpression.accept(org.hibernate.query.sqm.SemanticQueryWalker)" because the return value of "org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.getEscapeCharacter()" is null
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitLikePredicate$35(SqmTreePrinter.java:889)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitLikePredicate(SqmTreePrinter.java:884)
	at org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.accept(SqmLikePredicate.java:120)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitJunctionPredicate$30(SqmTreePrinter.java:816)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitJunctionPredicate(SqmTreePrinter.java:812)
	at org.hibernate.query.sqm.tree.predicate.SqmJunctionPredicate.accept(SqmJunctionPredicate.java:76)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitWhereClause$28(SqmTreePrinter.java:789)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitWhereClause(SqmTreePrinter.java:787)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitQuerySpec$12(SqmTreePrinter.java:431)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitQuerySpec(SqmTreePrinter.java:426)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:122)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitSelectStatement$7(SqmTreePrinter.java:336)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitSelectStatement(SqmTreePrinter.java:334)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.logTree(SqmTreePrinter.java:149)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:89)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$createQuery$2(AbstractSharedSessionContract.java:741)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:141)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:128)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:738)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:656)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at org.example.DAOClasses.NotebookDao.search(NotebookDao.java:172)
	at org.example.servlets.SearchServlet.doGet(SearchServlet.java:68)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [is-like]
              -> [basic-path] - `org.example.modelClasses.Notebooks(n).createdWhen`
            <- [is-like]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:24:40 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).createdWhen) 
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1211446716 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1239103533)
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@796992969 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.created_when like '%2022%' and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@26691499
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@6345456 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@2120332485 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@205a8add
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7828163e
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [true]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@563e85f7
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [577]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@732a2dca
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [true]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Время]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [тест]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@563e85f7
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [2]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@1dc01916
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@563e85f7
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [65]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@3fa62319
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@563e85f7
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [290]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@2a09d330
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@563e85f7
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [801]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@ccd8671
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@563e85f7
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [769]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@11d82657
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - []
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - []
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@563e85f7
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [739]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@1f68719e
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - []
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@563e85f7
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [738]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@7b1cb110
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@563e85f7
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [481]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@1b825e0c
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [aew]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@563e85f7
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [641]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@4bb839b5
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@563e85f7
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [33]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@170055dd
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [141f]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@563e85f7
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:24:40 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:24:41 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Handling root path - Notebooks
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Encountered implicit select clause : FROMNotebooksnwherelower(n.name)likelower('%f%')AND(n.user=:user)
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Error processing stanza {is-like}
java.lang.NullPointerException: Cannot invoke "org.hibernate.query.sqm.tree.expression.SqmExpression.accept(org.hibernate.query.sqm.SemanticQueryWalker)" because the return value of "org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.getEscapeCharacter()" is null
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitLikePredicate$35(SqmTreePrinter.java:889)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitLikePredicate(SqmTreePrinter.java:884)
	at org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.accept(SqmLikePredicate.java:120)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitJunctionPredicate$30(SqmTreePrinter.java:816)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitJunctionPredicate(SqmTreePrinter.java:812)
	at org.hibernate.query.sqm.tree.predicate.SqmJunctionPredicate.accept(SqmJunctionPredicate.java:76)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitWhereClause$28(SqmTreePrinter.java:789)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitWhereClause(SqmTreePrinter.java:787)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitQuerySpec$12(SqmTreePrinter.java:431)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitQuerySpec(SqmTreePrinter.java:426)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:122)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitSelectStatement$7(SqmTreePrinter.java:336)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitSelectStatement(SqmTreePrinter.java:334)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.logTree(SqmTreePrinter.java:149)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:89)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$createQuery$2(AbstractSharedSessionContract.java:741)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:141)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:128)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:738)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:656)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at org.example.DAOClasses.NotebookDao.search(NotebookDao.java:172)
	at org.example.servlets.SearchServlet.doGet(SearchServlet.java:68)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [is-like]
            <- [is-like]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:24:44 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Created new SQL alias : n1_0
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1154789185 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1239103533)
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@2063532831 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where lower(n1_0.name) like lower('%f%') and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [2]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@560f8a89
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1339711187 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1418072458 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@1ddca3b0
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@47fe31af
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3b0f75d9
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [290]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@55e9f5fa
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3b0f75d9
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [739]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@2dd00dd4
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3b0f75d9
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [481]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@1b153288
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aew]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3b0f75d9
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [33]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@5b743d8e
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [141f]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3b0f75d9
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:24:44 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Handling root path - Notebooks
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Encountered implicit select clause : FROMNotebooksnwherelower(n.notes)likelower('%a%')AND(n.user=:user)
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Error processing stanza {is-like}
java.lang.NullPointerException: Cannot invoke "org.hibernate.query.sqm.tree.expression.SqmExpression.accept(org.hibernate.query.sqm.SemanticQueryWalker)" because the return value of "org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.getEscapeCharacter()" is null
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitLikePredicate$35(SqmTreePrinter.java:889)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitLikePredicate(SqmTreePrinter.java:884)
	at org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.accept(SqmLikePredicate.java:120)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitJunctionPredicate$30(SqmTreePrinter.java:816)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitJunctionPredicate(SqmTreePrinter.java:812)
	at org.hibernate.query.sqm.tree.predicate.SqmJunctionPredicate.accept(SqmJunctionPredicate.java:76)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitWhereClause$28(SqmTreePrinter.java:789)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitWhereClause(SqmTreePrinter.java:787)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitQuerySpec$12(SqmTreePrinter.java:431)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitQuerySpec(SqmTreePrinter.java:426)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:122)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitSelectStatement$7(SqmTreePrinter.java:336)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitSelectStatement(SqmTreePrinter.java:334)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.logTree(SqmTreePrinter.java:149)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:89)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$createQuery$2(AbstractSharedSessionContract.java:741)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:141)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:128)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:738)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:656)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at org.example.DAOClasses.NotebookDao.search(NotebookDao.java:172)
	at org.example.servlets.SearchServlet.doGet(SearchServlet.java:68)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [is-like]
            <- [is-like]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:24:48 WARN  [http-nio-8080-exec-7]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Created new SQL alias : n1_0
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Initializer list
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@594738611 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1239103533)
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@892949122 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where lower(n1_0.notes) like lower('%a%') and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [2]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@51ef6863
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Initializer list
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@775789982 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1984678851 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [1]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@77162f24
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34503ba8
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bdb9c42
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [290]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@6be6d682
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bdb9c42
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [801]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@2d4fabd5
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bdb9c42
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [738]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@187758af
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bdb9c42
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [481]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@2f79fe6f
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [aew]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bdb9c42
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:24:48 DEBUG [http-nio-8080-exec-7]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:24:54 DEBUG [http-nio-8080-exec-8]: HQL : FROM Notebooks n where (:row is :current) AND (n.user = :user) ORDER BY n.createdWhen DESC
2022-05-08 15:24:55 DEBUG [http-nio-8080-exec-8]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:24:55 ERROR [http-nio-8080-exec-8]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (:row is :current) AND (n.user = :user) ORDER BY n.createdWhen DESC]
2022-05-08 15:25:01 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:26:21 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:26:21 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:26:21 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:26:21 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:26:21 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@635b198c
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@635b198c
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@635b198c
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1d7242eb
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1d7242eb
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3ce51d92
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3ce51d92
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7ff02aac
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7ff02aac
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@445cdba7
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@445cdba7
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@445cdba7
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@4b36bcdd
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4b36bcdd
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@4b36bcdd
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5f2b21a4
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5f2b21a4
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@5f2b21a4
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@5f2b21a4
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@21f0d5a7
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@353a3dd
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@353a3dd
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7dfd373e
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7b5d0f24
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@5c27b005
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@5c27b005
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5c27b005
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@4274bd17
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@4274bd17
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4274bd17
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@562436a0
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@562436a0
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@562436a0
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@4593376f
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@4593376f
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4593376f
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@24551040
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@24551040
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@24551040
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@432e9dd8
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@432e9dd8
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@34c8322b
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@34c8322b
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@68bc5392
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@68bc5392
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@68bc5392
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@646799d5
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@539008dc
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@539008dc
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@26bc31ef
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@2c16d669
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2c16d669
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@2c16d669
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@74e75b0f
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@74e75b0f
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@74e75b0f
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@27e27ba7
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@601605fd
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@7aa92208
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7aa92208
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@34582171
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@34582171
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@535b1e
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@503a8f04
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@63305e69
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1696b8d7
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@c879ab0
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@841668b
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@69e3b2fc
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@69e3b2fc
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4a10ef17
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4a10ef17
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7af2beff
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7af2beff
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7984fa14
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7984fa14
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@d84d38a
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@d84d38a
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40a1ed7a
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2f4ba6d7
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7141bd70
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7141bd70
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5a723851
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5a723851
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@15f7d458
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6778a52f
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@1b2e3e8d
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1b2e3e8d
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@50d52d09
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@50d52d09
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7bab765f
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7bab765f
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7bab765f
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5958e5d8
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5958e5d8
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5958e5d8
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@33686228
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4aacac29
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6a1522ad
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6a1522ad
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@74fd7c12
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@74fd7c12
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@74fd7c12
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4743987
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2b1610c4
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@68d54f41
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@68d54f41
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@77d7b3a5
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@77d7b3a5
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@77d7b3a5
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@52ca04d9
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@52ca04d9
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4941be74
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4941be74
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@b2c4f5a
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@b2c4f5a
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@41ac9f01
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@41ac9f01
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@43c2a721
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@43c2a721
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7b40333
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f4e847c
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f4e847c
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@31b2f77b
2022-05-08 15:26:22 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@31b2f77b
2022-05-08 15:26:23 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@5f45ce78
2022-05-08 15:26:23 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1cddf7df
2022-05-08 15:26:23 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@262f6766
2022-05-08 15:26:23 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@28fa001d
2022-05-08 15:26:23 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@59bd2d74
2022-05-08 15:26:23 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2a2d5a93
2022-05-08 15:26:23 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77e41ce7
2022-05-08 15:26:23 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@f6610ee
2022-05-08 15:26:23 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3f805afb
2022-05-08 15:26:23 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:26:23 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:26:23 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:26:23 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:26:23 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:26:23 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:26:23 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:26:27 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:26:27 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36c722fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@73f7bc71]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3ea722f4, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@24781a13] under count; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@45bd77e7] under every; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@54d91b60] under any; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@790eca87] under position; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3b278a7] under overlay; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7fa3dace] under trim; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1f43d245] under cast; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35ddf939] under collate; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@14da90d7] under extract; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1891f101] under ifnull; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@77938bda] under pad; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@34c8886] under str; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@19ce7b33] under format; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@14fb12f7] under timestampadd; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@723ca2fc] under timestampdiff; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32da62e8] under current_date; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ade8855] under current_time; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a1b6157] under current_timestamp; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4f17bc31] under local_date; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2ebb4a19] under local_time; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9e3bb] under local_datetime; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1193b34] under offset_datetime; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@739de912] under instant; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1c985f4f] under sql; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@ffee768] under count; prior registration was org.hibernate.dialect.function.CountFunction@24781a13
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@23e824f4] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:26:28 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2ebb4a19
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@9e3bb
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5badaf47] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@790eca87
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@164db18e] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@678359d3] under format; prior registration was org.hibernate.dialect.function.FormatFunction@19ce7b33
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@6b4c35df] under listagg; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@36abda43] under mode; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@523a0095] under percentile_cont; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7df352a3] under percentile_disc; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@278c24c0] under rank; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@c0314b7] under dense_rank; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@420ed062] under percent_rank; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6a2a844b] under cume_dist; prior registration was null
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36c722fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@16d4a902]
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@62685d0c] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:26:29 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1b97a601] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:26:30 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@60deb33] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64b24520
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: fe088eff-d59b-4deb-bc6d-64c300c982f7 (<unnamed>)
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:26:30 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:26:31 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@912033686 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1006203964 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@1ec04362
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c2c5e7c
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:26:31 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@452083424 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@896074338)
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1180685108 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@61cf029d
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@922437867 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1875035466 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@1e96151e
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f767b04
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6152c436
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@4c124ea2
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6152c436
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@7a4e3758
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6152c436
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@765797c1
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6152c436
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@1d39e49
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6152c436
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@5feab78f
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6152c436
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@5495afdd
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6152c436
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@1eb6d311
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6152c436
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@38a3758
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6152c436
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@956be69
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6152c436
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@704413d9
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6152c436
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@5842789b
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6152c436
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:26:31 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:26:31 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:26:34 DEBUG [http-nio-8080-exec-4]: HQL : FROM Notebooks n where (n.important is true) AND (n.user = :user) ORDER BY n.createdWhen DESC
2022-05-08 15:26:34 DEBUG [http-nio-8080-exec-4]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:26:34 ERROR [http-nio-8080-exec-4]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (n.important is true) AND (n.user = :user) ORDER BY n.createdWhen DESC]
2022-05-08 15:26:38 DEBUG [http-nio-8080-exec-5]: HQL : FROM Notebooks n where (n.important is false) AND (n.user = :user) ORDER BY n.createdWhen DESC
2022-05-08 15:26:38 DEBUG [http-nio-8080-exec-5]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:26:38 ERROR [http-nio-8080-exec-5]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (n.important is false) AND (n.user = :user) ORDER BY n.createdWhen DESC]
2022-05-08 15:26:57 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:27:11 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:27:11 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:27:11 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:27:11 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:27:11 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:27:11 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:27:11 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@67b61fde
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@67b61fde
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@67b61fde
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2bd57769
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2bd57769
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@314c0f11
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@314c0f11
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@303b23d2
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@303b23d2
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@672492e4
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@672492e4
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@672492e4
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@674adf56
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@674adf56
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@674adf56
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@362f7029
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@362f7029
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@362f7029
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@362f7029
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@5f63f08d
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1c13ea37
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1c13ea37
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2d12368c
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6071b53f
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2056c624
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2056c624
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2056c624
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@2397c24b
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@2397c24b
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2397c24b
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@1f0d36e3
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@1f0d36e3
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1f0d36e3
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7238a070
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7238a070
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7238a070
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@64493ff5
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@64493ff5
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@64493ff5
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79513cad
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79513cad
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@f9da74a
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@f9da74a
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@3891bde9
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@3891bde9
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3891bde9
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@158a9b99
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@65ce69d1
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65ce69d1
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@78b35d5
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@3240ae38
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3240ae38
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@3240ae38
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@73d7adba
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@73d7adba
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@73d7adba
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@6541d2f0
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3bba7610
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@cbc2e31
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@cbc2e31
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4248e861
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4248e861
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2975648a
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@41978d42
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2cb7eee7
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@29b910f0
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2bea6079
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@56ea15db
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@45390937
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@45390937
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2466aff0
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2466aff0
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5c77eaad
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5c77eaad
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5a357835
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5a357835
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@57c8a2f5
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@57c8a2f5
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@46c09ed3
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25813624
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@54041671
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@54041671
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@46c9c90e
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@46c9c90e
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4bdf102
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28a1d7a7
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@5c62fb5c
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5c62fb5c
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@54ebc867
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@54ebc867
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3f351619
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3f351619
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3f351619
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@190ff2b7
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@190ff2b7
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@190ff2b7
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@52fc42d1
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@585e0019
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@4fcc40d5
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4fcc40d5
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@29b089d1
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@29b089d1
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@29b089d1
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@196aacfc
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@311c3900
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@1c7b1d1e
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1c7b1d1e
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@3128f141
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3128f141
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3128f141
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@7d69b6d4
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7d69b6d4
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2d6d5440
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2d6d5440
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@69ba3f1e
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@69ba3f1e
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1f6e7991
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1f6e7991
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@2f81a3be
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2f81a3be
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68892d5a
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@50180a41
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@50180a41
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@27526a6e
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@27526a6e
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@db42c57
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@694eebcb
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@56db92da
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1884a30c
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@34fef2df
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2a705738
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@20374dee
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1d160627
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5ebd6750
2022-05-08 15:27:12 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:27:12 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:27:12 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:27:12 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:27:12 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:27:12 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:27:12 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:27:17 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14d510f7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6a958666]
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:27:17 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@57a031a7, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4add7323] under count; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7aec8caf] under every; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@277038fd] under any; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@9a4988a] under position; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3255edc4] under overlay; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3cac174a] under trim; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@30147516] under cast; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77eeec6c] under collate; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@735b7d04] under extract; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@415f46c5] under ifnull; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6b78f31f] under pad; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1f5e2d11] under str; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6b9a6afa] under format; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12452fd7] under timestampadd; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3a9f3a62] under timestampdiff; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25670dfa] under current_date; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2a2f98b4] under current_time; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@782dae2d] under current_timestamp; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ddbed48] under local_date; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40ce33d4] under local_time; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16f2e941] under local_datetime; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33b6174] under offset_datetime; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1087df6] under instant; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2b1d21ae] under sql; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@56fd0773] under count; prior registration was org.hibernate.dialect.function.CountFunction@4add7323
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@359c5ae7] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@40ce33d4
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@16f2e941
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4394bfd1] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@9a4988a
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@380cfea7] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13d0347b] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6b9a6afa
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@25027bfe] under listagg; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7818feb5] under mode; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3b547def] under percentile_cont; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@144534f8] under percentile_disc; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6e6646b9] under rank; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@58591294] under dense_rank; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@44355ce1] under percent_rank; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5dc361ef] under cume_dist; prior registration was null
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:27:18 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14d510f7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@a489068]
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2e5688c4] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:27:19 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3dd2355e] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:27:20 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5656197e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bcaa29d
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 53201381-b2fd-412b-bd84-c7b1b11682b0 (<unnamed>)
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:27:20 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:27:21 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@2142259602 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1973479422 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@55820b8e
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b23c259
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:27:21 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1070230475 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1716190029 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@28275e94
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@817557115 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@843404038 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@5ea9b504
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22e64c76
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@1cba9350
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@4c66f44d
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@5f131757
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@2aaf1dd3
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@62473bc5
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@19f86f5c
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@5e166a9b
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@c85a50f
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@57473e49
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@d1f2972
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@60b0d8f8
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@148c28be
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:27:21 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:27:21 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:27:27 DEBUG [http-nio-8080-exec-4]: HQL : FROM Notebooks n where (n.important = true) AND (n.user = :user) ORDER BY n.createdWhen DESC
2022-05-08 15:27:27 DEBUG [http-nio-8080-exec-4]: Handling root path - Notebooks
2022-05-08 15:27:27 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMNotebooksnwhere(n.important=true)AND(n.user=:user)
2022-05-08 15:27:27 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:27:27 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [grouped]
                -> [EQUAL]
                    -> [basic-path] - `org.example.modelClasses.Notebooks(n).important`
                <- [EQUAL]
            <- [grouped]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:27:27 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).important) 
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@509617723 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1627391284 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where (n1_0.important=true) and (n1_0.users_id=?) order by n1_0.created_when desc
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@57939541
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@920326946 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@534756786 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@793144fd
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a698c0a
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [true]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27854d66
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [577]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@36b5d020
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [true]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Время]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [тест]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27854d66
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:27:28 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: HQL : FROM Notebooks n where (n.important = false) AND (n.user = :user) ORDER BY n.createdWhen DESC
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Handling root path - Notebooks
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Encountered implicit select clause : FROMNotebooksnwhere(n.important=false)AND(n.user=:user)
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [grouped]
                -> [EQUAL]
                    -> [basic-path] - `org.example.modelClasses.Notebooks(n).important`
                <- [EQUAL]
            <- [grouped]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:27:31 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Created new SQL alias : n1_0
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).important) 
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@569602984 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@2059846611 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where (n1_0.important=false) and (n1_0.users_id=?) order by n1_0.created_when desc
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [2]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@429cc815
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@791054370 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1519861436 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@1bd2126a
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@634f82b4
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a6f9d3a
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [65]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@1f51e844
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a6f9d3a
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [290]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@141be886
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a6f9d3a
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [801]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@b5e9293
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a6f9d3a
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [769]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@dde588f
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - []
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a6f9d3a
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [739]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@1d5d82b8
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a6f9d3a
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [738]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@56c9164d
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a6f9d3a
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [481]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@29fcdc0d
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aew]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a6f9d3a
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [641]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@5619f39d
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a6f9d3a
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [33]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@2720f3a4
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [141f]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a6f9d3a
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:27:31 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:27:33 DEBUG [http-nio-8080-exec-7]: HQL : FROM Notebooks n where (n.reminder = NOT NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:27:33 DEBUG [http-nio-8080-exec-7]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:27:33 ERROR [http-nio-8080-exec-7]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (n.reminder = NOT NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: HQL : FROM Notebooks n where (n.reminder = NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Handling root path - Notebooks
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Encountered implicit select clause : FROMNotebooksnwhere(n.reminder=NULL)AND(n.user=:user)
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [grouped]
                -> [is-null]
                    -> [basic-path] - `org.example.modelClasses.Notebooks(n).reminder`
                <- [is-null]
            <- [grouped]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:27:35 WARN  [http-nio-8080-exec-8]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Created new SQL alias : n1_0
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Initializer list
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@81953846 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1434586789 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where (n1_0.reminder is null) and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@7a9193fb
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Initializer list
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@726412486 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1968250140 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@39c93bfb
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@695d8206
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [true]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d505681
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [577]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@224ed99f
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [true]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Время]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [тест]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d505681
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [2]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@522838ce
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d505681
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [65]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@5760dd3f
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d505681
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [290]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@580b7d0c
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d505681
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [801]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@c5dd5b3
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d505681
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [769]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@1f2062be
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - []
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - []
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d505681
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [739]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@4e78cd40
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - []
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d505681
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [738]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@4d982a9e
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d505681
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [641]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@2f0a8ed3
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d505681
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:27:35 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:27:37 DEBUG [http-nio-8080-exec-9]: HQL : FROM Notebooks n where (n.reminder = NOT NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:27:37 DEBUG [http-nio-8080-exec-9]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:27:37 ERROR [http-nio-8080-exec-9]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (n.reminder = NOT NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC]
2022-05-08 15:27:47 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:28:32 DEBUG [http-nio-8080-exec-1]: HQL : FROM Notebooks n where (n.reminder = NOT NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:28:32 DEBUG [http-nio-8080-exec-1]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:28:32 ERROR [http-nio-8080-exec-1]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (n.reminder = NOT NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC]
2022-05-08 15:28:36 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@664989034 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1837353638 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where (n1_0.reminder is null) and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@76f711cc
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@97661774 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@997464974 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@4f79029d
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f544f1c
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3973bf30
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@3be4ee3c
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3973bf30
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@3c0e6e37
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3973bf30
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@514ffa05
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3973bf30
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@75615523
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3973bf30
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@69e8c0bd
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3973bf30
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@26586461
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3973bf30
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@8693d7d
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3973bf30
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@77deb91e
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3973bf30
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@581c7270
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3973bf30
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:28:36 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:28:38 DEBUG [http-nio-8080-exec-4]: HQL : FROM Notebooks n where (n.reminder = NOT NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:28:38 DEBUG [http-nio-8080-exec-4]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:28:38 ERROR [http-nio-8080-exec-4]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (n.reminder = NOT NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC]
2022-05-08 15:28:50 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@927478268 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@2143857423 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@63731c97
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@393c9d52
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:28:50 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1417943170 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1206725686 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@15be9f8c
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@991726993 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@261514205 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@3a4a8521
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1081e989
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4646b2d7
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [577]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@347f2761
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Время]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [тест]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4646b2d7
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [2]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@5af2cf42
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4646b2d7
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [65]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@45a0b834
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4646b2d7
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [290]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@36036a5d
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4646b2d7
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [801]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@7b8a07d3
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4646b2d7
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [769]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@374e4f3f
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - []
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4646b2d7
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [739]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@776f20fa
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4646b2d7
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [738]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@5a13edc8
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4646b2d7
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [481]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@710cddc6
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aew]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4646b2d7
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [641]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@34fe536f
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4646b2d7
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [33]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@3a18ddfa
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [141f]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4646b2d7
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:28:50 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:28:50 INFO  [http-nio-8080-exec-6]: Пользователь wqr вошел
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: begin
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: select next value for notebooks_SEQ
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: Sequence value obtained: 1601
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: Generated identifier: 1552, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: committing
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: Processing flush-time cascades
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: Dirty checking collections
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: Listing entities:
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: org.example.modelClasses.Notebooks{important=false, notes=new, reminder=2022-05-15T15:29, name=new, id=1552, user=org.example.modelClasses.Users#1, createdWhen=2022-05-08T15:29:11.554911300}
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-9]: HHH000420: Closing un-released batch
2022-05-08 15:29:11 WARN  [http-nio-8080-exec-10]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Initializer list
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1573930441 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1394057219 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@2372fdb3
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35395282
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:11 WARN  [http-nio-8080-exec-10]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Initializer list
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1912952183 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1698991645 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@764bcbc3
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Initializer list
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@935237489 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@498621845 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@6bdb9c42
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6be6d682
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [true]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [577]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@187758af
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [true]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Время]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [тест]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1552]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@2f79fe6f
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T15:29:11.554911]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [new]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [new]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [2022-05-15T15:29]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [2]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@72f67fc4
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [65]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@22b7634c
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [290]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@27f595
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [801]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@60cdf978
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [769]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@2104a2fa
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - []
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - []
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [739]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@38301895
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - []
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [738]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@784c95b
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [481]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@88df6ea
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [aew]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [641]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@c1a9673
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [33]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@3456c3d5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [141f]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4fabd5
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:11 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:11 INFO  [http-nio-8080-exec-10]: Пользователь wqr вошел
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.id = :id AND  n.user = :user
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Encountered use of reserved word as identifier : =
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Encountered use of reserved word as identifier : AND
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.id=:idANDn.user=:user
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> BasicSqmPathSource(id : Long)
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Notebooks(n).id`
                :id
            <- [EQUAL]
            -> [EQUAL]
                -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                :user
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:29:39 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(id)
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).id) 
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@105338086 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@448279696 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.id=? and n1_0.users_id=?
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1552]
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@5fc6f82b
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@75586551 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1811943285 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@5604621d
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6f61e284
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:29:11.554911]
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [new]
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [new]
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-05-15T15:29]
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@439e36f3
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:39 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: begin
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: committing
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: Processing flush-time cascades
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: Dirty checking collections
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: Listing entities:
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: org.example.modelClasses.Notebooks{important=false, notes=new, reminder=null, name=new, id=1552, user=org.example.modelClasses.Users#1, createdWhen=2022-05-08T15:29:41.252424400}
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-4]: HHH000420: Closing un-released batch
2022-05-08 15:29:41 WARN  [http-nio-8080-exec-5]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1921101737 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@2084986761 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@c8cec92
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ae5bed6
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:41 WARN  [http-nio-8080-exec-5]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1565829885 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1566986949 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@591a9300
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@914686620 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@773089342 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@1fb64a16
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@691b7c3f
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [true]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [577]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@ce606c4
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [true]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Время]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [тест]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1552]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@21ad1bb4
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T15:29:41.252424]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [new]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [new]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [2]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@1365713a
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [65]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@707b599d
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [290]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@4c97b170
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [801]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@52e63ed
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [769]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@3d7a2ed3
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - []
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - []
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [739]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@17e73f50
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - []
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [738]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@668a00ed
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [481]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@10cd26da
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [aew]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [641]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@7cad8ea6
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [33]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@521e33dc
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [141f]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a41278c
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:41 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:41 INFO  [http-nio-8080-exec-5]: Пользователь wqr вошел
2022-05-08 15:29:43 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1840329266 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1905369832 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.id=? and n1_0.users_id=?
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1552]
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@265ccb62
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1520872355 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@397035003 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@7dac883c
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12a35cd4
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:29:41.252424]
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [new]
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [new]
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e78e2d
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:43 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: begin
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: committing
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: Processing flush-time cascades
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: Dirty checking collections
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: Listing entities:
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: org.example.modelClasses.Notebooks{important=false, notes=new, reminder=null, name=new, id=1552, user=org.example.modelClasses.Users#1, createdWhen=2022-05-08T15:29:46.309974900}
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-7]: HHH000420: Closing un-released batch
2022-05-08 15:29:46 WARN  [http-nio-8080-exec-8]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Initializer list
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1283361006 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1712819891 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@48c2f591
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@63d8994
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:46 WARN  [http-nio-8080-exec-8]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Initializer list
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1368663463 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@965580490)
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@600133029 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@6626bb75
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Initializer list
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1862756977 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@838598754 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@995ba27
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e91544b
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [true]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [577]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@2f7861bc
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [true]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Время]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [тест]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1552]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@b18b2f6
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T15:29:46.309975]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [new]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [new]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [2]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@7f5f9cd2
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [65]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@49427b6c
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [290]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@255b8679
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [801]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@6b9a0f26
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [769]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@6820b78b
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - []
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - []
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [739]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@32e338f8
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - []
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [738]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@4b721893
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [481]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@702adde4
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [aew]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [641]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@1ddba085
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [33]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@36d47f3e
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [141f]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db36306
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:46 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:29:46 INFO  [http-nio-8080-exec-8]: Пользователь wqr вошел
2022-05-08 15:44:50 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:44:50 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:44:50 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:44:50 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:44:50 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:44:51 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@58c7a4f0
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@58c7a4f0
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@58c7a4f0
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@41c9909a
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@41c9909a
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6bf2747f
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6bf2747f
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@42935363
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@42935363
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@27169fe5
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@27169fe5
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@27169fe5
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@2ad696dd
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2ad696dd
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@2ad696dd
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@527f5e74
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@527f5e74
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@527f5e74
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@527f5e74
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@aaf1713
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@19d55814
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@19d55814
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7ab458d
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2f8f37f2
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@5d6aba9f
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@5d6aba9f
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5d6aba9f
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@6ecc5cde
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@6ecc5cde
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6ecc5cde
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@3316eba7
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@3316eba7
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3316eba7
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@65f06a90
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@65f06a90
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@65f06a90
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@6d469af3
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@6d469af3
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6d469af3
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@61e01129
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@61e01129
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@65af9561
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@65af9561
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@3edc7ae
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@3edc7ae
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3edc7ae
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5a255422
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@3bad6f16
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3bad6f16
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2230e19f
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@4f8d82c0
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4f8d82c0
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@4f8d82c0
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3f794b57
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@3f794b57
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@3f794b57
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@6f7c4671
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4ae57e18
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@695d6e06
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@695d6e06
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c8bb389
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c8bb389
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@11c921a7
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@70bd9838
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7212f577
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33c41747
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6bd8dc81
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77b8f59a
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@12e40f57
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@12e40f57
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1094c63
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1094c63
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2c98a417
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2c98a417
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1c3c803b
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1c3c803b
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e10aa5c
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e10aa5c
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@653181a9
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@ce03904
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@74254dfb
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@74254dfb
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5f4c4b69
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5f4c4b69
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3619b5e0
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bbc823e
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@65a84a27
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@65a84a27
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@588242f8
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@588242f8
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@23cf5abd
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@23cf5abd
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@23cf5abd
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5b63055a
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@113c094c
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@487fa364
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@487fa364
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@58de5a22
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@58de5a22
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@58de5a22
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1b54ddb6
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6ad3c1f9
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@5f023b44
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5f023b44
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@752775cc
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@752775cc
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@752775cc
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@4823afb3
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4823afb3
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3c8b6347
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3c8b6347
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@721db789
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@721db789
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3cda3513
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3cda3513
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@69514b0c
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@69514b0c
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@e278c3a
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@388f2924
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@388f2924
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@502729ac
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@502729ac
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@2b2a99c7
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6b66ea0
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@53327668
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@333954b8
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4c2217b9
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7954a3f3
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@39151b87
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@40700489
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1c334ce1
2022-05-08 15:44:52 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:44:52 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:44:52 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:44:52 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:44:52 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:44:52 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:44:52 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:44:57 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65ad4772] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@662a1f52]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:44:57 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@42fee73, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5c0decb3] under count; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@48fdb770] under every; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3f0549a6] under any; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@44c64b81] under position; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@fe3f511] under overlay; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3f68f4d0] under trim; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1429489a] under cast; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fb76898] under collate; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7cf164cc] under extract; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3cf90f73] under ifnull; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@22da2d16] under pad; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5e947dbe] under str; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13b20f96] under format; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@538b5c8f] under timestampadd; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1236eb78] under timestampdiff; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7785a29a] under current_date; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4ec29398] under current_time; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@55f62bc0] under current_timestamp; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6872e680] under local_date; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32b91866] under local_time; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@683d03fa] under local_datetime; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cf18d16] under offset_datetime; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@73c82cee] under instant; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3beec753] under sql; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@71ea364f] under count; prior registration was org.hibernate.dialect.function.CountFunction@5c0decb3
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@51f78dc4] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@32b91866
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@683d03fa
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@213f3b8d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@44c64b81
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d6e2b19] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@20432b75] under format; prior registration was org.hibernate.dialect.function.FormatFunction@13b20f96
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@f87ec03] under listagg; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4c96f7b5] under mode; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@69a1c9f8] under percentile_cont; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@449cfbb9] under percentile_disc; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3533e7ad] under rank; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7fad5e6c] under dense_rank; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4db6bef8] under percent_rank; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5742b6cc] under cume_dist; prior registration was null
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65ad4772] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4d6eb45b]
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:44:58 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37d7746] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2c0cfd2a] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:44:59 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@63c55d30] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:44:59 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6afa8d2
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 58ebb35f-afbf-4a1f-a624-eec856103931 (<unnamed>)
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:45:00 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1343970592 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:45:00 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1066730845 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@6436df77
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e48abef
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:45:01 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@627588952 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1310493364)
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1178415355 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@a70d4ae
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@703547182 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@631648670 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@329c9845
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6de4b608
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@70017882
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1552]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@546129d0
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:29:46.309975]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [new]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [new]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@108b0253
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@16db331e
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@6de59c2f
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@309707ea
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@78c61231
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@374a9df4
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@768f6bd6
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@7e2f9aba
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@363058d4
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@5576c6db
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:01 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:01 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: HQL : FROM Notebooks n where n.id = :id AND  n.user = :user
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Encountered use of reserved word as identifier : =
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Encountered use of reserved word as identifier : AND
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Handling root path - Notebooks
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMNotebooksnwheren.id=:idANDn.user=:user
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> BasicSqmPathSource(id : Long)
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Notebooks(n).id`
                :id
            <- [EQUAL]
            -> [EQUAL]
                -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                :user
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:45:02 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(id)
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).id) 
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@2021362981 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1310493364)
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1068455159 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.id=? and n1_0.users_id=?
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1552]
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@7c3591ff
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@964192866 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@2029172790 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@7e3ebbc3
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1fd4358c
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T15:29:46.309975]
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [new]
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [new]
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7877d47f
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:02 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: begin
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: committing
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: Processing flush-time cascades
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: Dirty checking collections
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: Listing entities:
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: org.example.modelClasses.Notebooks{important=false, notes=new, reminder=null, name=new, id=1552, user=org.example.modelClasses.Users#1, createdWhen=2022-05-08T15:45:07.165518200}
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-5]: HHH000420: Closing un-released batch
2022-05-08 15:45:07 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1123572051 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@210562194 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@36e5cd87
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21e1d683
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:07 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1494913792 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1310493364)
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@914686620 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@1fb64a16
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1763408959 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1782654860 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@707b599d
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c97b170
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [577]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@3d7a2ed3
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Время]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [тест]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1552]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@17e73f50
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:45:07.165518]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [new]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [new]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [2]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@668a00ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [65]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@10cd26da
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [290]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@7cad8ea6
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [801]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@521e33dc
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [769]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@6425dc1a
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - []
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [739]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@1d27cdb2
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [738]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@d6fa80e
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [481]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@2e4ceaac
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aew]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [641]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@64432673
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [33]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@472a2d14
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [141f]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e63ed
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:07 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:07 INFO  [http-nio-8080-exec-6]: Пользователь wqr вошел
2022-05-08 15:45:31 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:45:31 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:45:31 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:45:31 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:45:31 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:45:32 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:45:32 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2a7fae57
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2a7fae57
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2a7fae57
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4253aff4
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4253aff4
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@270f3b9d
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@270f3b9d
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@a02e4ec
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@a02e4ec
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@5d58eeed
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@5d58eeed
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5d58eeed
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@2abd6bd
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2abd6bd
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@2abd6bd
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5c26d6a6
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5c26d6a6
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@5c26d6a6
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@5c26d6a6
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@419e7c4a
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@5babcd12
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5babcd12
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7e9f6e4
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6d109359
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@5f5ede9d
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@5f5ede9d
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5f5ede9d
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@5a185b39
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@5a185b39
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5a185b39
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@128ed848
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@128ed848
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@128ed848
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7b6d1b1b
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7b6d1b1b
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7b6d1b1b
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@52ee98dd
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@52ee98dd
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@52ee98dd
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4ab7d02a
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4ab7d02a
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2e1f0dac
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2e1f0dac
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@3d396eb7
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@3d396eb7
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3d396eb7
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1bb731bd
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@6f759461
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6f759461
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3951864e
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@4feb1b05
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4feb1b05
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@4feb1b05
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6df3e19c
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@6df3e19c
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@6df3e19c
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@2ee6b6df
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1b3026bb
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@c9435eb
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@c9435eb
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7e19cae4
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7e19cae4
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6552dbb6
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7f4d2c59
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@52db7536
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6225cb63
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@115923fa
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@760fa6c
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@e1b5d73
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@e1b5d73
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4229e100
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4229e100
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1a374c4c
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1a374c4c
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1a0476fc
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1a0476fc
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4ea0400a
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4ea0400a
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@430c893f
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6379e83e
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5af3d13b
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5af3d13b
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@161f7a7f
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@161f7a7f
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@31fd5cf2
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1de97aeb
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@59d70a64
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@59d70a64
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@34764fa3
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@34764fa3
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fb79f13
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fb79f13
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fb79f13
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@39df9e2c
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@39df9e2c
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@39df9e2c
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@58ba2759
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5e3770ba
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@d2b2368
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@d2b2368
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4840e21f
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4840e21f
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4840e21f
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@414994a1
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@249e8e92
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@707ad90a
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@707ad90a
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@3fe58d00
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3fe58d00
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3fe58d00
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@3204fac1
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3204fac1
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@623e080d
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@623e080d
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@44aa2fc9
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@44aa2fc9
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@573437d1
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@573437d1
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@42f30d04
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@42f30d04
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@509f0b37
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f3d8d92
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f3d8d92
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@9d8be1e
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@9d8be1e
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@71a66ba6
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5102cb99
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@40d72b3e
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@52bfa550
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@10860ffa
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@571f4070
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2ee81f76
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1d2aade
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@218b9cc1
2022-05-08 15:45:33 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:45:33 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:45:33 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:45:33 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:45:33 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:45:33 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:45:33 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:45:38 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ae35af] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@67bd8bb5]
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:45:38 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar;G:\IntelliJ IDEA Community Edition 2021.1.3\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, jboss.modules.system.pkgs=com.intellij.rt, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@554ff4d6, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1234e9be] under count; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7aec2514] under every; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4967976] under any; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5fac486e] under position; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@56dd1093] under overlay; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@379b2dfc] under trim; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6276e881] under cast; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@794e3128] under collate; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4d880e3a] under extract; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@20f5601f] under ifnull; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6131e42] under pad; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4d050d6d] under str; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2f21a4b0] under format; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5a10fb91] under timestampadd; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@712dc716] under timestampdiff; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3053bf80] under current_date; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@649ffdb1] under current_time; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@172d61e4] under current_timestamp; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76d5e203] under local_date; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5bd7fce6] under local_time; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@403ee058] under local_datetime; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c608bfa] under offset_datetime; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@657cb38f] under instant; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@e4417b2] under sql; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4d37a573] under count; prior registration was org.hibernate.dialect.function.CountFunction@1234e9be
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@109b24e3] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5bd7fce6
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@403ee058
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@613b4dbf] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5fac486e
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c24fdb4] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@74465302] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2f21a4b0
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@7782ed33] under listagg; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@29e557d4] under mode; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@e37b4b2] under percentile_cont; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@15fd7a40] under percentile_disc; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@370d852d] under rank; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@60e06afd] under dense_rank; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@710bd45c] under percent_rank; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5e316678] under cume_dist; prior registration was null
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:45:39 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ae35af] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2ef48af7]
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@653fc6c3] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6037723a] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:45:40 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:45:41 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@22ef7d55] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@76a7477a
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 99e70dcd-13bb-416e-9705-0cd51ce066bf (<unnamed>)
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:45:41 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:45:42 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@23104677 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1852607540 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@5539666c
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a45f62b
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:45:42 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@12279322 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1028277098)
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1832945740 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@b2d5543
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1318768813 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@310404386 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@6f09e802
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35ca424e
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@75cc9b1a
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1552]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@4be18563
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:45:07.165518]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [new]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [new]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@64835a61
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@625f8e10
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@735acd0a
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@3457849f
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@4af98026
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@54c8b867
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@71df0d69
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@79241cb1
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@7fda5b03
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@6e40df1f
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:42 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:42 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: HQL : FROM Notebooks n where n.id = :id AND  n.user = :user
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Encountered use of reserved word as identifier : =
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Encountered use of reserved word as identifier : AND
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Handling root path - Notebooks
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMNotebooksnwheren.id=:idANDn.user=:user
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> BasicSqmPathSource(id : Long)
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Notebooks(n).id`
                :id
            <- [EQUAL]
            -> [EQUAL]
                -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                :user
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:45:46 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(id)
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).id) 
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@600491115 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1028277098)
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1834197565 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.id=? and n1_0.users_id=?
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1552]
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@27849b08
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1471580047 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1615364793 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@312fc089
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45837943
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T15:45:07.165518]
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [new]
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [new]
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e442b92
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:45:46 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:46:17 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:46:24 DEBUG [http-nio-8080-exec-6]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:46:24 DEBUG [http-nio-8080-exec-6]: begin
2022-05-08 15:46:24 DEBUG [http-nio-8080-exec-6]: committing
2022-05-08 15:46:24 DEBUG [http-nio-8080-exec-6]: Processing flush-time cascades
2022-05-08 15:46:24 DEBUG [http-nio-8080-exec-6]: Dirty checking collections
2022-05-08 15:46:25 DEBUG [http-nio-8080-exec-6]: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2022-05-08 15:46:25 DEBUG [http-nio-8080-exec-6]: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-05-08 15:46:25 DEBUG [http-nio-8080-exec-6]: Listing entities:
2022-05-08 15:46:25 DEBUG [http-nio-8080-exec-6]: org.example.modelClasses.Notebooks{important=false, notes=new, reminder=null, name=new, id=1552, user=org.example.modelClasses.Users#1, createdWhen=2022-05-08T15:45:57.667552200}
2022-05-08 15:46:25 DEBUG [http-nio-8080-exec-6]: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:46:25 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:46:25 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:46:25 DEBUG [http-nio-8080-exec-6]: HHH000420: Closing un-released batch
2022-05-08 15:46:36 WARN  [http-nio-8080-exec-8]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Initializer list
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@777495444 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@207264016 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@12e8419
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b27d00f
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:46:36 WARN  [http-nio-8080-exec-8]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Initializer list
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@865924514 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1028277098)
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1252020745 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@61303f05
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Initializer list
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@867258694 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@462933998 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@46b9739a
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@924b0d1
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [true]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [577]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@22063d9b
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [true]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Время]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [тест]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1552]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@2f2ebfe2
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T15:45:57.667552]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [new]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [new]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [2]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@32020ee
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [65]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@4b98d03a
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [290]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@5861c637
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [801]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@2eaa376
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [769]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@4fc495
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - []
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - []
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [739]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@d5bdda6
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - []
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [738]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@5bddf244
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [481]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@cfb0b5a
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [aew]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [641]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@72ee0d3c
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [33]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@218b582a
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [141f]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@607510a0
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:46:36 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:46:36 INFO  [http-nio-8080-exec-8]: Пользователь wqr вошел
2022-05-08 15:47:08 DEBUG [http-nio-8080-exec-10]: HQL : FROM Notebooks n where (n.reminder = NOT NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:47:08 DEBUG [http-nio-8080-exec-10]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:47:08 ERROR [http-nio-8080-exec-10]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (n.reminder = NOT NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: HQL : FROM Notebooks n where (n.reminder = NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Handling root path - Notebooks
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Encountered implicit select clause : FROMNotebooksnwhere(n.reminder=NULL)AND(n.user=:user)
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [grouped]
                -> [is-null]
                    -> [basic-path] - `org.example.modelClasses.Notebooks(n).reminder`
                <- [is-null]
            <- [grouped]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:47:14 WARN  [http-nio-8080-exec-2]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Created new SQL alias : n1_0
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Initializer list
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@948926723 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1028277098)
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@198194062 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where (n1_0.reminder is null) and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@5610f3d7
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Initializer list
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1291812332 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@875749591 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@33264b71
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@a6bbeac
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [true]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c8caa7e
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [577]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@50b52f2
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [true]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [Время]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [4] - [тест]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c8caa7e
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [1552]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@477fce1
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [2022-05-08T15:45:57.667552]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [new]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [4] - [new]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c8caa7e
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [2]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@533eac1d
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c8caa7e
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [65]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@2a98235e
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c8caa7e
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [290]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@75db783d
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c8caa7e
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [801]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@4e700293
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c8caa7e
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [769]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@68880104
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - []
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [4] - []
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c8caa7e
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [739]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@3e15d98
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [4] - []
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c8caa7e
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [738]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@2dd5c749
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c8caa7e
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [0] - [641]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@63ff2cfa
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c8caa7e
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:47:14 DEBUG [http-nio-8080-exec-2]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:47:22 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@258454172 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@26015523 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@4758e144
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22187f89
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:47:22 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1702210872 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1028277098)
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@503033944 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@34788ea9
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1950454030 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@549422532 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@6f8ad994
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@cd2e961
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@7d9e62e2
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1552]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@44e152bc
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:45:57.667552]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [new]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [new]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@5fe322a0
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@61f28a9d
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@6ff57d33
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@21cfa6c3
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@67ff6678
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@12acae78
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@56f445fb
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@ad11858
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@168173dc
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@61a9d01a
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7109f4dd
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:47:22 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:47:22 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:47:29 WARN  [http-nio-8080-exec-5]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@758716497 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1028277098)
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@688298286 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where (n1_0.reminder is null) and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@5d221d70
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1089478675 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@204205349 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@86515af
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53190740
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [true]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@677e9cb3
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [577]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@18bc3c6c
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [true]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Время]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [тест]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@677e9cb3
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1552]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@38548ab9
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T15:45:57.667552]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [new]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [new]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@677e9cb3
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [2]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@23ecb9f4
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@677e9cb3
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [65]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@3064223e
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@677e9cb3
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [290]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@49422702
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@677e9cb3
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [801]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@555f6dd1
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@677e9cb3
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [769]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@133a5d97
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - []
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - []
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@677e9cb3
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [739]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@25ef81c
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - []
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:47:29 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@677e9cb3
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [738]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@5a7cb562
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@677e9cb3
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [641]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@74e36a19
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@677e9cb3
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:47:30 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:47:58 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:47:58 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:47:58 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:47:58 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:47:58 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:47:58 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:47:58 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2a7fae57
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2a7fae57
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2a7fae57
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4253aff4
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4253aff4
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@270f3b9d
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@270f3b9d
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@a02e4ec
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@a02e4ec
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@5d58eeed
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@5d58eeed
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5d58eeed
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@2abd6bd
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2abd6bd
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@2abd6bd
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5c26d6a6
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5c26d6a6
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@5c26d6a6
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@5c26d6a6
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@419e7c4a
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@5babcd12
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5babcd12
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7e9f6e4
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6d109359
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@5f5ede9d
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@5f5ede9d
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5f5ede9d
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@5a185b39
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@5a185b39
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5a185b39
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@128ed848
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@128ed848
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@128ed848
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7b6d1b1b
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7b6d1b1b
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7b6d1b1b
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@52ee98dd
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@52ee98dd
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@52ee98dd
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4ab7d02a
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4ab7d02a
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2e1f0dac
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2e1f0dac
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@3d396eb7
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@3d396eb7
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3d396eb7
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1bb731bd
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@6f759461
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6f759461
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3951864e
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@4feb1b05
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4feb1b05
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@4feb1b05
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6df3e19c
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@6df3e19c
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@6df3e19c
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@2ee6b6df
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1b3026bb
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@c9435eb
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@c9435eb
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7e19cae4
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7e19cae4
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6552dbb6
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7f4d2c59
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@52db7536
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6225cb63
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@115923fa
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@760fa6c
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@e1b5d73
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@e1b5d73
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4229e100
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4229e100
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1a374c4c
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1a374c4c
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1a0476fc
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1a0476fc
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4ea0400a
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4ea0400a
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@430c893f
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6379e83e
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5af3d13b
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5af3d13b
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@161f7a7f
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@161f7a7f
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@31fd5cf2
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1de97aeb
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@59d70a64
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@59d70a64
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@34764fa3
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@34764fa3
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fb79f13
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fb79f13
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fb79f13
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@39df9e2c
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@39df9e2c
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@39df9e2c
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@58ba2759
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5e3770ba
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@d2b2368
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@d2b2368
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4840e21f
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4840e21f
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4840e21f
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@414994a1
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@249e8e92
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@707ad90a
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@707ad90a
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@3fe58d00
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3fe58d00
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3fe58d00
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@3204fac1
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3204fac1
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@623e080d
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@623e080d
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@44aa2fc9
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@44aa2fc9
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@573437d1
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@573437d1
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@42f30d04
2022-05-08 15:47:59 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@42f30d04
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@509f0b37
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f3d8d92
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f3d8d92
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@9d8be1e
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@9d8be1e
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@71a66ba6
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5102cb99
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@40d72b3e
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@52bfa550
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@10860ffa
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@571f4070
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2ee81f76
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1d2aade
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@218b9cc1
2022-05-08 15:48:00 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:48:00 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:48:00 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:48:00 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:48:00 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:48:00 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:48:00 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:48:04 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:48:04 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:48:04 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:48:04 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:48:04 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:48:04 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:48:04 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:48:04 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:48:04 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:48:04 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@bd6b8cd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@585254b0]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar;G:\IntelliJ IDEA Community Edition 2021.1.3\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, jboss.modules.system.pkgs=com.intellij.rt, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@554ff4d6, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:48:05 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1234e9be] under count; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7aec2514] under every; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4967976] under any; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5fac486e] under position; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@56dd1093] under overlay; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@379b2dfc] under trim; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6276e881] under cast; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@794e3128] under collate; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4d880e3a] under extract; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@20f5601f] under ifnull; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6131e42] under pad; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4d050d6d] under str; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2f21a4b0] under format; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5a10fb91] under timestampadd; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@712dc716] under timestampdiff; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3053bf80] under current_date; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@649ffdb1] under current_time; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@172d61e4] under current_timestamp; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76d5e203] under local_date; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5bd7fce6] under local_time; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@403ee058] under local_datetime; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c608bfa] under offset_datetime; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@657cb38f] under instant; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@e4417b2] under sql; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4d37a573] under count; prior registration was org.hibernate.dialect.function.CountFunction@1234e9be
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@109b24e3] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5bd7fce6
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@403ee058
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@613b4dbf] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5fac486e
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c24fdb4] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@74465302] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2f21a4b0
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@7782ed33] under listagg; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@29e557d4] under mode; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@e37b4b2] under percentile_cont; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@15fd7a40] under percentile_disc; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@370d852d] under rank; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@60e06afd] under dense_rank; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@710bd45c] under percent_rank; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5e316678] under cume_dist; prior registration was null
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@bd6b8cd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2ef48af7]
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:48:06 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@653fc6c3] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6037723a] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:48:07 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@22ef7d55] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@76a7477a
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 810a9433-3518-4059-a980-f7bc6f3f92ac (<unnamed>)
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:48:07 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:48:08 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@23104677 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1852607540 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@5539666c
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a45f62b
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:48:08 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@12279322 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1028277098)
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1832945740 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@b2d5543
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1318768813 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@310404386 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@6f09e802
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35ca424e
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@75cc9b1a
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1552]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@4be18563
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:45:57.667552]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [new]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [new]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@64835a61
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@625f8e10
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@735acd0a
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@3457849f
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@4af98026
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@54c8b867
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@71df0d69
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@79241cb1
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@7fda5b03
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@6e40df1f
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a8d8af3
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:48:08 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:48:08 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:48:15 DEBUG [http-nio-8080-exec-4]: HQL : FROM Notebooks n where (n.reminder = NOT NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:48:16 DEBUG [http-nio-8080-exec-4]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:48:16 ERROR [http-nio-8080-exec-4]: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: A query exception occurred [FROM Notebooks n where (n.reminder = NOT NULL) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC]
2022-05-08 15:50:01 DEBUG [http-nio-8080-exec-4]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:50:01 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:50:01 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:50:01 INFO  [http-nio-8080-exec-4]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:50:01 DEBUG [http-nio-8080-exec-4]: HHH000206: hibernate.properties not found
2022-05-08 15:50:02 DEBUG [http-nio-8080-exec-4]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:50:02 DEBUG [http-nio-8080-exec-4]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4c9189fd
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4c9189fd
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4c9189fd
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7d50b5a1
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7d50b5a1
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4948c415
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4948c415
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1b71dea7
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1b71dea7
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@5b6f7255
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@5b6f7255
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5b6f7255
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@236a3924
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@236a3924
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@236a3924
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2c8d2930
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2c8d2930
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@2c8d2930
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@2c8d2930
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration image -> org.hibernate.type.BasicTypeReference@391c4ee0
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@19c16e4c
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@19c16e4c
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6b90d749
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2e11a7a2
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration short -> org.hibernate.type.BasicTypeReference@75a197ce
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration short -> org.hibernate.type.BasicTypeReference@75a197ce
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@75a197ce
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@67002438
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration int -> org.hibernate.type.BasicTypeReference@67002438
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@67002438
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration long -> org.hibernate.type.BasicTypeReference@a479d0e
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration long -> org.hibernate.type.BasicTypeReference@a479d0e
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@a479d0e
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration float -> org.hibernate.type.BasicTypeReference@29480753
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration float -> org.hibernate.type.BasicTypeReference@29480753
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@29480753
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration double -> org.hibernate.type.BasicTypeReference@502efa53
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration double -> org.hibernate.type.BasicTypeReference@502efa53
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@502efa53
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3669358a
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3669358a
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@f071a4
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@f071a4
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration character -> org.hibernate.type.BasicTypeReference@69eb9c76
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration char -> org.hibernate.type.BasicTypeReference@69eb9c76
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@69eb9c76
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4e300f7a
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration string -> org.hibernate.type.BasicTypeReference@318aa653
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@318aa653
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@32748c97
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@749be83
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@749be83
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@749be83
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@49cc3acf
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@49cc3acf
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@49cc3acf
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration text -> org.hibernate.type.BasicTypeReference@2d10b59b
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3b16949a
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@716188dd
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@716188dd
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5953ce7c
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5953ce7c
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@714704a0
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7e7afc56
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3a0a424
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@44c7aa02
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@decc43e
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@245d1199
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@22da10b2
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@22da10b2
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5b343951
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5b343951
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3092cb3d
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3092cb3d
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7c8fc56f
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7c8fc56f
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@e2205cc
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@e2205cc
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@74264be8
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@524bbd72
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@506daee9
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@506daee9
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4e7fdd4d
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4e7fdd4d
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@8c0b661
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76f3a26
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration date -> org.hibernate.type.BasicTypeReference@3ac8c6c4
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3ac8c6c4
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration time -> org.hibernate.type.BasicTypeReference@a6df165
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@a6df165
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7132df7
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7132df7
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7132df7
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@79d38939
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@79d38939
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@79d38939
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5d18e21
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@60d2b127
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@7eb0445f
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7eb0445f
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1b4f80f1
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1b4f80f1
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1b4f80f1
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1266b53f
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@674865dd
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration class -> org.hibernate.type.BasicTypeReference@1ba647d7
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1ba647d7
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@7c09045a
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7c09045a
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7c09045a
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@5be199a9
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5be199a9
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7fa36985
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7fa36985
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@56121159
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@56121159
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@628df415
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@628df415
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration url -> org.hibernate.type.BasicTypeReference@3576053c
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3576053c
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@517dbd56
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@f381f76
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@f381f76
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration object -> org.hibernate.type.BasicTypeReference@15e5623f
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@15e5623f
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration null -> org.hibernate.type.NullType@7859ffef
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3fcf3b8c
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6b207d4c
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3db29793
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@aa3a14d
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4c76e8ce
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@24542611
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@d732307
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1acd422d
2022-05-08 15:50:03 WARN  [http-nio-8080-exec-4]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:50:03 INFO  [http-nio-8080-exec-4]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:50:03 INFO  [http-nio-8080-exec-4]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:50:03 INFO  [http-nio-8080-exec-4]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:50:03 INFO  [http-nio-8080-exec-4]: HHH10001003: Autocommit mode: false
2022-05-08 15:50:03 DEBUG [http-nio-8080-exec-4]: Initializing Connection pool with 1 Connections
2022-05-08 15:50:03 INFO  [http-nio-8080-exec-4]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: JDBC version : 4.2
2022-05-08 15:50:08 INFO  [http-nio-8080-exec-4]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62de9705] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2941c2c0]
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:50:08 DEBUG [http-nio-8080-exec-4]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Import with entity name Notebooks
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: building BasicValue for id
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.id
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building property id
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: building BasicValue for createdWhen
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building property createdWhen
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: building BasicValue for important
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.important
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building property important
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: building BasicValue for name
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.name
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building property name
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: building BasicValue for notes
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.notes
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building property notes
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: building BasicValue for reminder
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building property reminder
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building property user
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Import with entity name Users
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: building BasicValue for id
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.id
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building property id
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: building BasicValue for email
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.email
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building property email
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building property notebooks
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: building BasicValue for password
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.password
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building property password
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: building BasicValue for username
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.username
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building property username
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Building session factory
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Session factory constructed with filter configurations : {}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar;G:\IntelliJ IDEA Community Edition 2021.1.3\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, jboss.modules.system.pkgs=com.intellij.rt, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@f244782, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Instantiated session factory
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Starting QueryPlanCache(2048)
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@65042322] under count; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7cd5c3b3] under every; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@713028fa] under any; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registering alternate key : length -> character_length
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@34fb2620] under position; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@286f2342] under overlay; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@39b8c75b] under trim; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@35820481] under cast; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ca0112e] under collate; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4f841d82] under extract; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@20b6ee1] under ifnull; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6d4c4490] under pad; prior registration was null
2022-05-08 15:50:09 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@365c7e1e] under str; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5784de52] under format; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@175e3322] under timestampadd; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@50813f85] under timestampdiff; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1899eaae] under current_date; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f47ce2e] under current_time; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f15ec92] under current_timestamp; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current date -> current_date
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current time -> current_time
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5245deab] under local_date; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@55e82d7] under local_time; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4e91aec] under local_datetime; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54c8179f] under offset_datetime; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : local date -> local_date
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : local time -> local_time
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@28042b2b] under instant; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current_instant -> instant
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@87ba4d3] under sql; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3b131276] under count; prior registration was org.hibernate.dialect.function.CountFunction@65042322
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@5d86b9c3] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : day -> day_of_month
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@55e82d7
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@4e91aec
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : chr -> char
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@587ff481] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@34fb2620
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c14e86f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : every -> bool_and
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registering alternate key : any -> bool_or
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4ec56432] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5784de52
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@8b095a9] under listagg; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7873e1a] under mode; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2f1802cb] under percentile_cont; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5c974a3] under percentile_disc; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2252f121] under rank; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5e404de1] under dense_rank; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@509b330a] under percent_rank; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b635615] under cume_dist; prior registration was null
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: abs(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double acos(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Boolean any(BOOLEAN arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer ascii(STRING arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double asin(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double atan(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double avg(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: bit_and(arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer bit_length(STRING arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: bit_or(arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: bitand(arg0, arg1)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: bitor(arg0, arg1)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: bitxor(arg0, arg1)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: cast(arg as Type)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: ceiling(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Character char(INTEGER arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer character_length(STRING arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String collate(STRING string as COLLATION collation)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double cos(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double cot(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Long count([distinct ]{arg|*})
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double cume_dist([arg0[, ...]])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Date curdate()
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Date current_date
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Time current_time
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Timestamp current_timestamp
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Time curtime()
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer day(DATE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer day_of_month(DATE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer day_of_week(DATE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer day_of_year(DATE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String dayname(DATE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double degrees(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Long dense_rank([arg0[, ...]])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Boolean every(BOOLEAN arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double exp(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: first_valueANY value
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: floor(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer hour(TIME arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: ifnull(arg0, arg1)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Instant instant
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: last_valueANY value
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String left(STRING string, INTEGER length)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double ln(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: LocalDate local_date
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: LocalDateTime local_datetime
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: LocalTime local_time
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Time localtime
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Timestamp localtimestamp
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double log10(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String lower(STRING string)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String ltrim(STRING string)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: max(COMPARABLE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double median(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer microsecond(TIME arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: min(COMPARABLE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer minute(TIME arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: mode()
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer month(DATE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String monthname(DATE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Timestamp now()
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: nth_valueANY value, INTEGER nth
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: nullif(arg0, arg1)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer octet_length(STRING arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: OffsetDateTime offset_datetime
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double percent_rank([arg0[, ...]])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: percentile_cont(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: percentile_disc(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double pi()
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer position(STRING pattern in STRING string)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer quarter(DATE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double radians(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double rand([INTEGER seed])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Long rank([arg0[, ...]])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String repeat(STRING string, INTEGER times)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String right(STRING string, INTEGER length)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Long row_number()
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Long rownum()
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String rtrim(STRING string)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer second(TIME arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer sign(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double sin(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String soundex(arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String space(INTEGER arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Object sql
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double sqrt(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String str(arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: sum(arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Timestamp sysdate
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double tan(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: String upper(STRING string)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double var_pop(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Double var_samp(NUMERIC arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer week(DATE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer year(DATE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Boolean any(BOOLEAN predicate)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Character chr(INTEGER arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Date current date
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Time current time
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Timestamp current timestamp
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Instant current_instant
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer day(DATE arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Boolean every(BOOLEAN predicate)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Integer length(STRING arg)
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: LocalDate local date
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: LocalDateTime local datetime
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: LocalTime local time
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: OffsetDateTime offset datetime
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62de9705] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@52bfdf64]
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]:  Row update: update notebooks set  where id=?
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:50:10 DEBUG [http-nio-8080-exec-4]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Starting post-init callbacks
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]:  Version select: select id from notebooks where id =?
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@17e8201c] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : u1_0
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]:  Version select: select id from users where id =?
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]:  Delete 0: delete from users where id=?
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : u1_0
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@586f3768] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Checking 0 named HQL queries
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Checking 0 named SQL queries
2022-05-08 15:50:11 INFO  [http-nio-8080-exec-4]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@59092226] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: No alter strings for table : notebooks
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: No alter strings for table : users
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@13dac3bc
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Registering SessionFactory: 5ed28f68-863e-40e7-bcc8-1c625910d6c1 (<unnamed>)
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: Statistics initialized [enabled=false]
2022-05-08 15:50:11 DEBUG [http-nio-8080-exec-4]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Handling root path - Users
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:50:12 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : u1_0
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@590296068 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1366085565 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@4ebd5556
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4111f658
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Handling root path - Notebooks
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:50:12 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@2021616259 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1389746298)
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@52838918 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@5f1fee32
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@173715581 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@2052620201 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@2a32389a
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35211eec
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [true]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [577]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@541eb05a
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [true]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Время]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [тест]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [1552]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@47b8e84f
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T15:45:57.667552]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [new]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [new]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [2]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@5bc0f0ae
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [65]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@79c87831
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [290]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@58758b32
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [801]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@588feae3
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [769]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@41624dc
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - []
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - []
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [739]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@3e25cd9f
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - []
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [738]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@4afded72
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [481]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@6d02ce3c
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [aew]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [641]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@58073784
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [33]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@48de402e
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [4] - [141f]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e4c9de
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:12 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:13 INFO  [http-nio-8080-exec-4]: Пользователь wqr вошел
2022-05-08 15:50:21 DEBUG [http-nio-8080-exec-5]: HQL : FROM Notebooks n where (n.reminder is not null) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:50:22 DEBUG [http-nio-8080-exec-5]: Handling root path - Notebooks
2022-05-08 15:50:22 DEBUG [http-nio-8080-exec-5]: Encountered implicit select clause : FROMNotebooksnwhere(n.reminderisnotnull)AND(n.user=:user)
2022-05-08 15:50:22 DEBUG [http-nio-8080-exec-5]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:50:22 DEBUG [http-nio-8080-exec-5]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [grouped]
                -> [is-not-null]
                    -> [basic-path] - `org.example.modelClasses.Notebooks(n).reminder`
                <- [is-not-null]
            <- [grouped]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:50:22 WARN  [http-nio-8080-exec-5]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Created new SQL alias : n1_0
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@416340009 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1389746298)
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@872552883 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where (n1_0.reminder is not null) and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [481]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@69e9ad20
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@861541262 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@187672501 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@7c631f9b
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5604da5
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [aew]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79e359da
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [33]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@28bcfd0f
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [141f]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79e359da
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:25 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: HQL : FROM Notebooks n where (n.important = true) AND (n.user = :user) ORDER BY n.createdWhen DESC
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Handling root path - Notebooks
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Encountered implicit select clause : FROMNotebooksnwhere(n.important=true)AND(n.user=:user)
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [grouped]
                -> [EQUAL]
                    -> [basic-path] - `org.example.modelClasses.Notebooks(n).important`
                <- [EQUAL]
            <- [grouped]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:50:35 WARN  [http-nio-8080-exec-8]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Created new SQL alias : n1_0
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).important) 
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Initializer list
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1948067259 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1389746298)
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@120938114 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where (n1_0.important=true) and (n1_0.users_id=?) order by n1_0.created_when desc
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@341eca56
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Initializer list
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@426922777 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1416696340 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@70b011d6
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e755a6
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [true]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43597f56
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [577]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@5ad1a83
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [true]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [Время]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [тест]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43597f56
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:35 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:38 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: HQL : FROM Notebooks n where (n.important = false) AND (n.user = :user) ORDER BY n.createdWhen DESC
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Handling root path - Notebooks
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Encountered implicit select clause : FROMNotebooksnwhere(n.important=false)AND(n.user=:user)
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [grouped]
                -> [EQUAL]
                    -> [basic-path] - `org.example.modelClasses.Notebooks(n).important`
                <- [EQUAL]
            <- [grouped]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:50:42 WARN  [http-nio-8080-exec-9]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Created new SQL alias : n1_0
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).important) 
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Initializer list
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1133888596 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1389746298)
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@194164505 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where (n1_0.important=false) and (n1_0.users_id=?) order by n1_0.created_when desc
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [0] - [1552]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@ea25c30
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Initializer list
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@278272130 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@382498294 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [0] - [1]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@78b31ed1
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@a34d34b
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [1] - [2022-05-08T15:45:57.667552]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [3] - [new]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [4] - [new]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18c2f0bd
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [0] - [2]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@388d15ea
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18c2f0bd
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [0] - [65]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@58a8c1bc
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18c2f0bd
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [0] - [290]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@742aef69
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18c2f0bd
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [0] - [801]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@7be2be49
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18c2f0bd
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [0] - [769]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@2b90c69a
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [3] - []
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [4] - []
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18c2f0bd
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [0] - [739]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@352b5775
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [4] - []
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18c2f0bd
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [0] - [738]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@1659b71e
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18c2f0bd
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [0] - [481]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@78a7436a
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [4] - [aew]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18c2f0bd
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [0] - [641]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@552efef2
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18c2f0bd
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [0] - [33]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@3a519bdd
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [4] - [141f]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18c2f0bd
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:42 DEBUG [http-nio-8080-exec-9]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: HQL : FROM Notebooks n where (n.reminder is null) AND (n.user = :user) ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Handling root path - Notebooks
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Encountered implicit select clause : FROMNotebooksnwhere(n.reminderisnull)AND(n.user=:user)
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [grouped]
                -> [is-null]
                    -> [basic-path] - `org.example.modelClasses.Notebooks(n).reminder`
                <- [is-null]
            <- [grouped]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:50:48 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Created new SQL alias : n1_0
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@389668259 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1389746298)
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1324006939 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where (n1_0.reminder is null) and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@4eefa050
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1441715696 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1119100070 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@3245a3e3
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22c17221
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7775d917
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [577]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@1146fe72
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Время]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [тест]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7775d917
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1552]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@e031d02
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:45:57.667552]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [new]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [new]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7775d917
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [2]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@277a3699
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7775d917
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [65]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@7e9eee00
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7775d917
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [290]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@580d3acf
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7775d917
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [801]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@4ef0d7c1
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7775d917
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [769]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@38c8ee78
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - []
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7775d917
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [739]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@31aff98f
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7775d917
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [738]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@456637
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7775d917
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [641]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@48c3f721
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7775d917
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:48 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:54 WARN  [http-nio-8080-exec-7]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Initializer list
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1571738756 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1389746298)
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1776654766 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where (n1_0.reminder is not null) and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [481]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@21ba6609
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Initializer list
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1691857785 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@164385619 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [1]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@1f98d77f
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@681d584
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [aew]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28a90ddd
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [33]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@76f152f7
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [141f]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28a90ddd
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:50:54 DEBUG [http-nio-8080-exec-7]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:05 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 15:52:05 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:52:05 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:52:05 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 15:52:05 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 15:52:06 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3bbc823e
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3bbc823e
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3bbc823e
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@65a84a27
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@65a84a27
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@588242f8
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@588242f8
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@23cf5abd
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@23cf5abd
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@5b63055a
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5b63055a
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@5b63055a
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@113c094c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@113c094c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@113c094c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@113c094c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@487fa364
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@58de5a22
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@58de5a22
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b54ddb6
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6ad3c1f9
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@5f023b44
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@5f023b44
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5f023b44
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@752775cc
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@752775cc
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@752775cc
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@4823afb3
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@4823afb3
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4823afb3
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@3c8b6347
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@3c8b6347
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3c8b6347
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@721db789
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@721db789
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@721db789
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3cda3513
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3cda3513
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@69514b0c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@69514b0c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@e278c3a
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@e278c3a
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@e278c3a
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1199c388
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@7c860e05
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7c860e05
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f6c33b2
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@2d982a39
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2d982a39
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@2d982a39
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@72423981
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@72423981
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@72423981
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@3e78f7ea
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@40f7a234
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@2c5281f1
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2c5281f1
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4f3f3bcb
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4f3f3bcb
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@36014261
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b1aa097
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@73ffed0c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@452861db
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@79063155
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@670638fa
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6b1d2e9b
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6b1d2e9b
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6d3dac9a
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6d3dac9a
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@25f9a4f1
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@25f9a4f1
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@736e995c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@736e995c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7105185c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7105185c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@715c239a
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@19eacf6c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1ec90174
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1ec90174
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@47d73d09
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@47d73d09
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5787969a
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18d9b2a9
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@4e4dd267
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4e4dd267
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@300c91d2
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@300c91d2
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5bd4e20f
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5bd4e20f
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5bd4e20f
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@e4d4f26
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@e4d4f26
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@e4d4f26
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2eb37a62
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7a65fc67
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6ddadbe
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6ddadbe
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@628de63c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@628de63c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@628de63c
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5758e065
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@28bb82d
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@69d0459f
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69d0459f
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@6461f29f
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6461f29f
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6461f29f
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@742a6dbe
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@742a6dbe
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2bbff9c6
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2bbff9c6
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@40a8ad93
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@40a8ad93
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2b365a13
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2b365a13
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@c568556
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@c568556
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@58733cd3
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67cdf6da
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67cdf6da
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@3fe52ab9
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@3fe52ab9
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@4a507fdd
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@24a34af6
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@409aae25
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5ced8853
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@150aba84
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2bc0b629
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3ebedef2
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@e217666
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ebf23bc
2022-05-08 15:52:07 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 15:52:07 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 15:52:07 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 15:52:07 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 15:52:07 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 15:52:07 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 15:52:07 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 15:52:12 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a372518] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34ddf283]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 15:52:12 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@22d3ece5, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@79c9922e] under count; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5fb76898] under every; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4457d18d] under any; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@46ae0eea] under position; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6b0e579b] under overlay; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@504637ae] under trim; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@38a1c0ad] under cast; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@683d03fa] under collate; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@96a80c9] under extract; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2c5b9c73] under ifnull; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@213f3b8d] under pad; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@150cb26c] under str; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@40308a01] under format; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3e4e1284] under timestampadd; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3533e7ad] under timestampdiff; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7d663d06] under current_date; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@682d52f8] under current_time; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1014607b] under current_timestamp; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@52a24063] under local_date; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e60c93c] under local_time; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1cd8e29a] under local_datetime; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2f7c4ec2] under offset_datetime; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f9da216] under instant; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@63739d9d] under sql; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@71b2fd3c] under count; prior registration was org.hibernate.dialect.function.CountFunction@79c9922e
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@1f5796cd] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1e60c93c
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1cd8e29a
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cd211a5] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@46ae0eea
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b2050b2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@749b08c0] under format; prior registration was org.hibernate.dialect.function.FormatFunction@40308a01
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@1b3c39c9] under listagg; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1934f699] under mode; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6371390b] under percentile_cont; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@27cf95dc] under percentile_disc; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@106c5ddb] under rank; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@56194d75] under dense_rank; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5bf32c78] under percent_rank; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@22dcf10e] under cume_dist; prior registration was null
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a372518] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@47733d64]
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 15:52:13 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37d7746] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2c0cfd2a] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 15:52:14 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@63c55d30] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6afa8d2
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: f2abd6ab-509c-427e-8edc-7df98c340fb1 (<unnamed>)
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 15:52:14 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:52:15 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1343970592 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1066730845 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@6436df77
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e48abef
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:52:15 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@627588952 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1310493364)
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1178415355 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@a70d4ae
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@703547182 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@631648670 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@329c9845
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6de4b608
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@70017882
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1552]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@546129d0
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:45:57.667552]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [new]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [new]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@108b0253
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@16db331e
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@6de59c2f
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@309707ea
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@78c61231
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@374a9df4
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@768f6bd6
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@7e2f9aba
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@363058d4
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@5576c6db
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b3bbda9
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:15 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:16 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: HQL : FROM Notebooks n where n.id = :id AND  n.user = :user
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Encountered use of reserved word as identifier : =
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Encountered use of reserved word as identifier : AND
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Handling root path - Notebooks
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Encountered implicit select clause : FROMNotebooksnwheren.id=:idANDn.user=:user
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> BasicSqmPathSource(id : Long)
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Notebooks(n).id`
                :id
            <- [EQUAL]
            -> [EQUAL]
                -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                :user
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:52:18 WARN  [http-nio-8080-exec-5]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Created new SQL alias : n1_0
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(id)
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).id) 
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1584527703 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1310493364)
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1245265147 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.id=? and n1_0.users_id=?
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1552]
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@5a3fc38f
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1508041431 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1560604548 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@6f0b51a4
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36d5b55c
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T15:45:57.667552]
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [new]
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [new]
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@772a745a
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:18 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:22 DEBUG [http-nio-8080-exec-6]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:52:22 DEBUG [http-nio-8080-exec-6]: begin
2022-05-08 15:52:22 DEBUG [http-nio-8080-exec-6]: committing
2022-05-08 15:52:22 DEBUG [http-nio-8080-exec-6]: Processing flush-time cascades
2022-05-08 15:52:22 DEBUG [http-nio-8080-exec-6]: Dirty checking collections
2022-05-08 15:52:22 DEBUG [http-nio-8080-exec-6]: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2022-05-08 15:52:22 DEBUG [http-nio-8080-exec-6]: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-05-08 15:52:22 DEBUG [http-nio-8080-exec-6]: Listing entities:
2022-05-08 15:52:22 DEBUG [http-nio-8080-exec-6]: org.example.modelClasses.Notebooks{important=false, notes=new, reminder=2022-05-08T15:52, name=new, id=1552, user=org.example.modelClasses.Users#1, createdWhen=2022-05-08T15:52:22.909865}
2022-05-08 15:52:22 DEBUG [http-nio-8080-exec-6]: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-6]: HHH000420: Closing un-released batch
2022-05-08 15:52:23 WARN  [http-nio-8080-exec-7]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Initializer list
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@569602984 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@2059846611 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@5d281ea2
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@429cc815
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:23 WARN  [http-nio-8080-exec-7]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Initializer list
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@791054370 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1310493364)
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1519861436 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@634f82b4
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Initializer list
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@2054135098 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@525461572 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@1d5d82b8
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@56c9164d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [true]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [577]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@5619f39d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [true]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [Время]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [тест]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [1552]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@2720f3a4
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-05-08T15:52:22.909865]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [new]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [new]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [2022-05-08T15:52]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [2]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@3945f273
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [65]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@76165de2
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [290]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@6f0acda6
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [801]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@4f97be30
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [769]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@59571bdb
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - []
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - []
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [739]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@1d6ab45e
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - []
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [738]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@24b42da8
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [481]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@56a06130
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [aew]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [641]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@374831fc
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [0] - [33]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@7fc8ab0f
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [4] - [141f]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29fcdc0d
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:23 DEBUG [http-nio-8080-exec-7]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:23 INFO  [http-nio-8080-exec-7]: Пользователь wqr вошел
2022-05-08 15:52:27 WARN  [http-nio-8080-exec-8]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Initializer list
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1224437774 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1310493364)
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1178376033 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.id=? and n1_0.users_id=?
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1552]
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@1469e6b4
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Initializer list
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@911015111 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1825495451 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@77ca13b4
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6360f992
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [1] - [2022-05-08T15:52:22.909865]
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [3] - [new]
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [4] - [new]
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Extracted JDBC value [5] - [2022-05-08T15:52]
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@149e8888
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:27 DEBUG [http-nio-8080-exec-8]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: begin
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: committing
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: Processing flush-time cascades
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: Dirty checking collections
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: Listing entities:
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: org.example.modelClasses.Notebooks{important=false, notes=new, reminder=2022-05-08T15:56, name=new, id=1552, user=org.example.modelClasses.Users#1, createdWhen=2022-05-08T15:52:31.641842500}
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-9]: HHH000420: Closing un-released batch
2022-05-08 15:52:31 WARN  [http-nio-8080-exec-10]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Initializer list
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1114969302 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1286796008 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@3cc815ac
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f9b3ddc
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:31 WARN  [http-nio-8080-exec-10]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Initializer list
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1839204252 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1310493364)
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1043681846 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@69ee9e95
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Initializer list
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@2111755644 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1576747747 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@37a6bfd6
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@32969c9e
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [true]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [577]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@4b287034
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [true]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Время]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [тест]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [1552]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@49f23e88
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T15:52:31.641843]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [new]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [new]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [2022-05-08T15:56]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [2]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@4f062944
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [65]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@6f3ce962
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [290]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@671d9d61
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [801]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@3fc3f974
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [769]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@4171bbc1
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - []
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - []
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [739]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@498e2d74
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - []
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [738]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@427347b1
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [481]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@625b1ed2
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [aew]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [641]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@2eb80eeb
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [0] - [33]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@166563c5
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [4] - [141f]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13c66b85
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:31 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:31 INFO  [http-nio-8080-exec-10]: Пользователь wqr вошел
2022-05-08 15:52:38 WARN  [http-nio-8080-exec-1]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Initializer list
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1759044466 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@118796208 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@48d05831
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31396332
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:38 WARN  [http-nio-8080-exec-1]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Initializer list
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1240265596 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1310493364)
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@2077922759 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@6582f3a8
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Initializer list
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1247356530 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1899583447 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@2cb80d68
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a975854
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [true]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [577]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@7c15a30
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [true]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [Время]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - [тест]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [1552]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@6bfed4ed
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-05-08T15:52:31.641843]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [new]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - [new]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [2022-05-08T15:56]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [2]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@1bdb743e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [65]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@4850cda9
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [290]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@45cd0e49
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [801]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@5809f3a1
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [Алеша]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [769]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@18b3061a
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - []
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - []
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [739]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@5640ad20
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - []
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [738]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@7b525ee7
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [481]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@6cd12ed7
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - [aew]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [641]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@6c526681
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [Test2]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - [Testing]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [null]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [0] - [33]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@3f28ff86
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [6] - [1]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [2] - [false]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [4] - [141f]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@334c128e
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:38 DEBUG [http-nio-8080-exec-1]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:52:38 INFO  [http-nio-8080-exec-1]: Пользователь wqr вошел
2022-05-08 15:52:42 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Handling root path - Notebooks
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Encountered implicit select clause : FROMNotebooksnwheren.createdWhenlike('%05%')AND(n.user=:user)
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Error processing stanza {is-like}
java.lang.NullPointerException: Cannot invoke "org.hibernate.query.sqm.tree.expression.SqmExpression.accept(org.hibernate.query.sqm.SemanticQueryWalker)" because the return value of "org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.getEscapeCharacter()" is null
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitLikePredicate$35(SqmTreePrinter.java:889)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitLikePredicate(SqmTreePrinter.java:884)
	at org.hibernate.query.sqm.tree.predicate.SqmLikePredicate.accept(SqmLikePredicate.java:120)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitJunctionPredicate$30(SqmTreePrinter.java:816)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitJunctionPredicate(SqmTreePrinter.java:812)
	at org.hibernate.query.sqm.tree.predicate.SqmJunctionPredicate.accept(SqmJunctionPredicate.java:76)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitWhereClause$28(SqmTreePrinter.java:789)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitWhereClause(SqmTreePrinter.java:787)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitQuerySpec$12(SqmTreePrinter.java:431)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitQuerySpec(SqmTreePrinter.java:426)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:122)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.lambda$visitSelectStatement$7(SqmTreePrinter.java:336)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:183)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.processStanza(SqmTreePrinter.java:168)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.visitSelectStatement(SqmTreePrinter.java:334)
	at org.hibernate.query.sqm.internal.SqmTreePrinter.logTree(SqmTreePrinter.java:149)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:89)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$createQuery$2(AbstractSharedSessionContract.java:741)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:141)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:128)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:738)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:656)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at org.example.DAOClasses.NotebookDao.search(NotebookDao.java:172)
	at org.example.servlets.SearchServlet.doGet(SearchServlet.java:68)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [and]
            -> [is-like]
              -> [basic-path] - `org.example.modelClasses.Notebooks(n).createdWhen`
            <- [is-like]
            -> [grouped]
                -> [EQUAL]
                    -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
                    :user
                <- [EQUAL]
            <- [grouped]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 15:55:17 WARN  [http-nio-8080-exec-5]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Created new SQL alias : n1_0
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Notebooks(n).createdWhen) 
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1701878053 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@1310493364)
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1544857008 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.created_when like '%05%' and (n1_0.users_id=?) order by n1_0.important desc,n1_0.created_when desc
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@79d2a29f
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Initializer list
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@9609520 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@1327245387 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@55c790c7
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [wqr]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b1c9d66
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [true]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Новый]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [ааа]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d3169bf
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [1552]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@2bcc3e62
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T15:52:31.641843]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [new]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [new]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [2022-05-08T15:56]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d3169bf
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [2]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@4264c274
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [fsaf]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [fsafas]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d3169bf
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [65]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@6dbc90f3
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d3169bf
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [290]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@ba6706a
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [aaa]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [null]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d3169bf
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [481]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@41536052
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [aew]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d3169bf
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [0] - [33]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@25406d6e
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [6] - [1]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [2] - [false]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [3] - [asfga]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [4] - [141f]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d3169bf
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 15:55:17 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:08:24 DEBUG [http-nio-8080-exec-4]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 16:08:24 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 16:08:24 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 16:08:24 INFO  [http-nio-8080-exec-4]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 16:08:24 DEBUG [http-nio-8080-exec-4]: HHH000206: hibernate.properties not found
2022-05-08 16:08:24 DEBUG [http-nio-8080-exec-4]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 16:08:24 DEBUG [http-nio-8080-exec-4]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Building session factory using provided StandardServiceRegistry
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@518deadb
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@518deadb
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@518deadb
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@60420d86
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@60420d86
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4e304707
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4e304707
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6b1f3cf7
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6b1f3cf7
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@55fac87d
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@55fac87d
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@55fac87d
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@25a4c179
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@25a4c179
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@25a4c179
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6960a2b5
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6960a2b5
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@6960a2b5
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@6960a2b5
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration image -> org.hibernate.type.BasicTypeReference@7b8ad3ea
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@783045c6
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@783045c6
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7b1cecb0
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@17058c6c
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration short -> org.hibernate.type.BasicTypeReference@3a3d08e5
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration short -> org.hibernate.type.BasicTypeReference@3a3d08e5
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3a3d08e5
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@40d97411
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration int -> org.hibernate.type.BasicTypeReference@40d97411
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@40d97411
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration long -> org.hibernate.type.BasicTypeReference@5cbc69d6
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration long -> org.hibernate.type.BasicTypeReference@5cbc69d6
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5cbc69d6
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration float -> org.hibernate.type.BasicTypeReference@6761e8c1
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration float -> org.hibernate.type.BasicTypeReference@6761e8c1
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6761e8c1
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration double -> org.hibernate.type.BasicTypeReference@3549aee8
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration double -> org.hibernate.type.BasicTypeReference@3549aee8
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3549aee8
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3ebb3dac
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3ebb3dac
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1f61174
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1f61174
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration character -> org.hibernate.type.BasicTypeReference@6939c66b
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration char -> org.hibernate.type.BasicTypeReference@6939c66b
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6939c66b
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@11ff1b4a
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration string -> org.hibernate.type.BasicTypeReference@764e0284
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@764e0284
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4702c088
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@60af5c9d
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@60af5c9d
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@60af5c9d
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@9e32e89
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@9e32e89
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@9e32e89
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration text -> org.hibernate.type.BasicTypeReference@fbf4713
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5ee8d0ec
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@44393418
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@44393418
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@543ecd70
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@543ecd70
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@21cc8f3b
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@393b445e
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@342f2e95
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1658202d
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5328d08a
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@30d27705
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7d44bc0c
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7d44bc0c
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2a4aa2c1
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2a4aa2c1
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3ff38b82
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3ff38b82
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1cbab926
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1cbab926
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4446c261
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4446c261
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3b653c82
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18690ff7
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@51d3e655
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@51d3e655
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@23f473c4
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@23f473c4
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3167da14
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61a17d78
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration date -> org.hibernate.type.BasicTypeReference@2f8ece57
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f8ece57
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration time -> org.hibernate.type.BasicTypeReference@2f64f231
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2f64f231
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@20dc2ab3
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@20dc2ab3
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@20dc2ab3
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4a7cc96d
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4a7cc96d
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4a7cc96d
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@13d94a03
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1ba4c733
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@5a6cef46
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5a6cef46
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@76f762c7
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@76f762c7
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@76f762c7
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2fa7b748
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@128760d0
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration class -> org.hibernate.type.BasicTypeReference@2f2cab19
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2f2cab19
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@62000561
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@62000561
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@62000561
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@708fe39e
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@708fe39e
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@59279cbf
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@59279cbf
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@139990e1
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@139990e1
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@71d0b4fe
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@71d0b4fe
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration url -> org.hibernate.type.BasicTypeReference@7ecc3a49
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7ecc3a49
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1beb834b
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@608fcc59
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@608fcc59
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration object -> org.hibernate.type.BasicTypeReference@72100631
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@72100631
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration null -> org.hibernate.type.NullType@22602810
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6438d4c2
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@af767be
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1acb4806
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3948c3e7
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1bf48ec8
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2a8fc09f
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6a4436b0
2022-05-08 16:08:25 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@15ec97e4
2022-05-08 16:08:26 WARN  [http-nio-8080-exec-4]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 16:08:26 INFO  [http-nio-8080-exec-4]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 16:08:26 INFO  [http-nio-8080-exec-4]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 16:08:26 INFO  [http-nio-8080-exec-4]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 16:08:26 INFO  [http-nio-8080-exec-4]: HHH10001003: Autocommit mode: false
2022-05-08 16:08:26 DEBUG [http-nio-8080-exec-4]: Initializing Connection pool with 1 Connections
2022-05-08 16:08:26 INFO  [http-nio-8080-exec-4]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: JDBC version : 4.2
2022-05-08 16:08:31 INFO  [http-nio-8080-exec-4]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14ae159b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5890bcf7]
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 16:08:31 DEBUG [http-nio-8080-exec-4]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Import with entity name Notebooks
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property id with lazy=false
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: building BasicValue for id
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.id
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building property id
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: building BasicValue for createdWhen
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.created_when
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building property createdWhen
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property important with lazy=false
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: building BasicValue for important
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.important
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building property important
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property name with lazy=false
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: building BasicValue for name
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.name
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building property name
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: building BasicValue for notes
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.notes
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building property notes
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: building BasicValue for reminder
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.reminder
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building property reminder
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building property user
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Import with entity name Users
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property id with lazy=false
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: building BasicValue for id
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.id
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building property id
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property email with lazy=false
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: building BasicValue for email
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.email
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building property email
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building property notebooks
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property password with lazy=false
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: building BasicValue for password
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.password
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building property password
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property username with lazy=false
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: building BasicValue for username
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.username
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building property username
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Building session factory
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Session factory constructed with filter configurations : {}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3bf67cfe, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Instantiated session factory
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Starting QueryPlanCache(2048)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2e1cb4e1] under count; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f74868] under every; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@357b8bb1] under any; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : length -> character_length
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@72c7716b] under position; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@36ee69fb] under overlay; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5710672b] under trim; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1eef8936] under cast; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@599a2e7a] under collate; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@37a0b53a] under extract; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2f9ec169] under ifnull; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@253251b1] under pad; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@16ef6e99] under str; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6c4e8d28] under format; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@14d20c43] under timestampadd; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@17739d7a] under timestampdiff; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : dateadd -> timestampadd
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : datediff -> timestampdiff
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@d346c79] under current_date; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@416ed68b] under current_time; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7b9cdda8] under current_timestamp; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current date -> current_date
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current time -> current_time
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40ccd028] under local_date; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6e352bec] under local_time; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5958622f] under local_datetime; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@44b48531] under offset_datetime; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : local date -> local_date
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : local time -> local_time
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : local datetime -> local_datetime
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62df401f] under instant; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current_instant -> instant
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@471bc1ec] under sql; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7130b189] under count; prior registration was org.hibernate.dialect.function.CountFunction@2e1cb4e1
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@103a40d2] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : day -> day_of_month
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6e352bec
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5958622f
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : chr -> char
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7695c4b7] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@72c7716b
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@767478e8] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : every -> bool_and
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registering alternate key : any -> bool_or
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2bb2463] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6c4e8d28
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@1923c92b] under listagg; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1676c4da] under mode; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@729968e3] under percentile_cont; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7e4717cf] under percentile_disc; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@67999347] under rank; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@50e3bd4b] under dense_rank; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45d56873] under percent_rank; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@54ec4113] under cume_dist; prior registration was null
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: abs(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double acos(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Boolean any(BOOLEAN arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer ascii(STRING arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double asin(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double atan(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double avg(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: bit_and(arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer bit_length(STRING arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: bit_or(arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: bitand(arg0, arg1)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: bitor(arg0, arg1)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: bitxor(arg0, arg1)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: cast(arg as Type)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: ceiling(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Character char(INTEGER arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer character_length(STRING arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: coalesce(arg0[, arg1[, ...]])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String collate(STRING string as COLLATION collation)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double cos(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double cot(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Long count([distinct ]{arg|*})
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double cume_dist([arg0[, ...]])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Date curdate()
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Date current_date
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Time current_time
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Timestamp current_timestamp
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Time curtime()
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer day(DATE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer day_of_month(DATE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer day_of_week(DATE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer day_of_year(DATE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String dayname(DATE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double degrees(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Long dense_rank([arg0[, ...]])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Boolean every(BOOLEAN arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double exp(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: first_valueANY value
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: floor(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer hour(TIME arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: ifnull(arg0, arg1)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Instant instant
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: last_valueANY value
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String left(STRING string, INTEGER length)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String listagg(STRING arg0, STRING arg1)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double ln(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: LocalDate local_date
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: LocalDateTime local_datetime
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: LocalTime local_time
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Time localtime
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Timestamp localtimestamp
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double log10(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String lower(STRING string)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String ltrim(STRING string)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: max(COMPARABLE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double median(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer microsecond(TIME arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: min(COMPARABLE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer minute(TIME arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: mode()
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer month(DATE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String monthname(DATE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Timestamp now()
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: nth_valueANY value, INTEGER nth
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: nullif(arg0, arg1)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer octet_length(STRING arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: OffsetDateTime offset_datetime
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double percent_rank([arg0[, ...]])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: percentile_cont(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: percentile_disc(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double pi()
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer position(STRING pattern in STRING string)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer quarter(DATE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double radians(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double rand([INTEGER seed])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Long rank([arg0[, ...]])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String repeat(STRING string, INTEGER times)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String right(STRING string, INTEGER length)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Long row_number()
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Long rownum()
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String rtrim(STRING string)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer second(TIME arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer sign(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double sin(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String soundex(arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String space(INTEGER arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Object sql
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double sqrt(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double stddev_pop(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double stddev_samp(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String str(arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: sum(arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Timestamp sysdate
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double tan(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: String upper(STRING string)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double var_pop(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Double var_samp(NUMERIC arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer week(DATE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer year(DATE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Boolean any(BOOLEAN predicate)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Character chr(INTEGER arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Date current date
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Time current time
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Timestamp current timestamp
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Instant current_instant
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer day(DATE arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Boolean every(BOOLEAN predicate)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Integer length(STRING arg)
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: LocalDate local date
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: LocalDateTime local datetime
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: LocalTime local time
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: OffsetDateTime offset datetime
2022-05-08 16:08:32 DEBUG [http-nio-8080-exec-4]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14ae159b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4c4a1bf9]
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]:  Row update: update notebooks set  where id=?
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Starting post-init callbacks
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]:  Version select: select id from notebooks where id =?
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]:  Delete 0: delete from notebooks where id=?
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7f56fed0] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : u1_0
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]:  Version select: select id from users where id =?
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]:  Delete 0: delete from users where id=?
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : u1_0
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5327f1f7] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Checking 0 named HQL queries
2022-05-08 16:08:33 DEBUG [http-nio-8080-exec-4]: Checking 0 named SQL queries
2022-05-08 16:08:34 INFO  [http-nio-8080-exec-4]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@22a1c2ae] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: No alter strings for table : notebooks
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: No alter strings for table : users
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@168dfcaf
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Registering SessionFactory: 978b4255-d6e9-4585-948a-c44343cbeac4 (<unnamed>)
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Statistics initialized [enabled=false]
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: HQL : FROM Users u where u.username = :username OR  u.email = :email
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Handling root path - Users
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameORu.email=:email
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> BasicSqmPathSource(email : String)
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [or]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).email`
                :email
            <- [EQUAL]
          <- [or]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 16:08:34 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : u1_0
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).email) 
2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 16:08:34 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1825197341 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1658278574 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? or u1_0.email=?
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [65]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 65
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [65]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#65
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#65] : org.example.modelClasses.Users@7ef46f8c
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [sfdsg@ADF]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [Grihan181cv]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [Devlamer]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#65
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45d68761
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#65] - using loading instance
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [97]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 97
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [97]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#97
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#97] : org.example.modelClasses.Users@45795435
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [sfdsg@ADF]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [825C89B4D76E1295150800B04A9BDAE2]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [root]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#97
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45d68761
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#97] - using loading instance
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [129]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 129
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [0] - [129]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#129
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#129] : org.example.modelClasses.Users@38acbca
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [1] - [sfdsg@ADF]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [2] - [63A9F0EA7BB98050796B649E85481845]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Extracted JDBC value [3] - [root2]
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#129
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45d68761
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#129] - using loading instance
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:08:35 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:08:48 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@960273746 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@1417943170 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? or u1_0.email=?
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: begin
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: select next value for users_SEQ
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Sequence value obtained: 1
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: committing
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Processing flush-time cascades
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Dirty checking collections
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Collection found: [org.example.modelClasses.Users.notebooks#1], was: [<unreferenced>] (initialized)
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Listing entities:
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: org.example.modelClasses.Users{password=81DC9BDB52D04DC20036DBD8313ED055, notebooks=[], id=1, email=sfdsg111@ADF, username=newnew}
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: could not execute statement [n/a]
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Нарушение уникального индекса или первичного ключа: "PRIMARY KEY ON PUBLIC.USERS(ID) ( /* key:1 */ CAST(1 AS BIGINT), 'wqr', '81DC9BDB52D04DC20036DBD8313ED055', 'admin@mail.com')"
Unique index or primary key violation: "PRIMARY KEY ON PUBLIC.USERS(ID) ( /* key:1 */ CAST(1 AS BIGINT), 'wqr', '81DC9BDB52D04DC20036DBD8313ED055', 'admin@mail.com')"; SQL statement:
insert into users (email, password, username, id) values (?, ?, ?, ?) [23505-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:527)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:120)
	at org.h2.mvstore.db.MVTable.addRow(MVTable.java:519)
	at org.h2.command.dml.Insert.insertRows(Insert.java:174)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:61)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:209)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:169)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:39)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3374)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3979)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:103)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:612)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:483)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:480)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:329)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1419)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:473)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2231)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1927)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.example.DAOClasses.NotebookDao.insert(NotebookDao.java:138)
	at org.example.servlets.SignUpServlet.doPost(SignUpServlet.java:46)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 16:08:48 WARN  [http-nio-8080-exec-6]: SQL Error: 23505, SQLState: 23505
2022-05-08 16:08:48 ERROR [http-nio-8080-exec-6]: Нарушение уникального индекса или первичного ключа: "PRIMARY KEY ON PUBLIC.USERS(ID) ( /* key:1 */ CAST(1 AS BIGINT), 'wqr', '81DC9BDB52D04DC20036DBD8313ED055', 'admin@mail.com')"
Unique index or primary key violation: "PRIMARY KEY ON PUBLIC.USERS(ID) ( /* key:1 */ CAST(1 AS BIGINT), 'wqr', '81DC9BDB52D04DC20036DBD8313ED055', 'admin@mail.com')"; SQL statement:
insert into users (email, password, username, id) values (?, ?, ?, ?) [23505-210]
2022-05-08 16:08:48 INFO  [http-nio-8080-exec-6]: HHH000010: On release of batch it still contained JDBC statements
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:428)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:291)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:168)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:175)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:182)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:473)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2231)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1927)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.example.DAOClasses.NotebookDao.insert(NotebookDao.java:138)
	at org.example.servlets.SignUpServlet.doPost(SignUpServlet.java:46)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.example.DAOClasses.NotebookDao.insert(NotebookDao.java:138)
	at org.example.servlets.SignUpServlet.doPost(SignUpServlet.java:46)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: rollback() called on an inactive transaction
2022-05-08 16:08:48 ERROR [http-nio-8080-exec-6]: jakarta.persistence.PersistenceException: Converting `org.hibernate.exception.ConstraintViolationException` to JPA `PersistenceException` : could not execute statement
2022-05-08 16:08:48 DEBUG [http-nio-8080-exec-6]: HHH000420: Closing un-released batch
2022-05-08 16:12:27 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 16:12:27 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 16:12:27 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 16:12:27 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 16:12:27 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 16:12:28 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@67b61fde
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@67b61fde
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@67b61fde
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2bd57769
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2bd57769
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@314c0f11
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@314c0f11
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@303b23d2
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@303b23d2
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@672492e4
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@672492e4
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@672492e4
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@674adf56
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@674adf56
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@674adf56
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@362f7029
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@362f7029
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@362f7029
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@362f7029
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@5f63f08d
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1c13ea37
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1c13ea37
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2d12368c
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6071b53f
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2056c624
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2056c624
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2056c624
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@2397c24b
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@2397c24b
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2397c24b
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@1f0d36e3
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@1f0d36e3
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1f0d36e3
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7238a070
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7238a070
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7238a070
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@64493ff5
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@64493ff5
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@64493ff5
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79513cad
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79513cad
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@f9da74a
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@f9da74a
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@3891bde9
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@3891bde9
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3891bde9
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@158a9b99
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@65ce69d1
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65ce69d1
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@78b35d5
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@3240ae38
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3240ae38
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@3240ae38
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@73d7adba
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@73d7adba
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@73d7adba
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@6541d2f0
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3bba7610
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@cbc2e31
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@cbc2e31
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4248e861
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4248e861
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2975648a
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@41978d42
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2cb7eee7
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@29b910f0
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2bea6079
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@56ea15db
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@45390937
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@45390937
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2466aff0
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2466aff0
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5c77eaad
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5c77eaad
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5a357835
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5a357835
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@57c8a2f5
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@57c8a2f5
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@46c09ed3
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25813624
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@54041671
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@54041671
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@46c9c90e
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@46c9c90e
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4bdf102
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28a1d7a7
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@5c62fb5c
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5c62fb5c
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@54ebc867
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@54ebc867
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3f351619
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3f351619
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3f351619
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@190ff2b7
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@190ff2b7
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@190ff2b7
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@52fc42d1
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@585e0019
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@4fcc40d5
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4fcc40d5
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@29b089d1
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@29b089d1
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@29b089d1
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@196aacfc
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@311c3900
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@1c7b1d1e
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1c7b1d1e
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@3128f141
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3128f141
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3128f141
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@7d69b6d4
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7d69b6d4
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2d6d5440
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2d6d5440
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@69ba3f1e
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@69ba3f1e
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1f6e7991
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1f6e7991
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@2f81a3be
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2f81a3be
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68892d5a
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@50180a41
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@50180a41
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@27526a6e
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@27526a6e
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@db42c57
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@694eebcb
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@56db92da
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1884a30c
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@34fef2df
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2a705738
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@20374dee
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1d160627
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5ebd6750
2022-05-08 16:12:29 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 16:12:29 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 16:12:29 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 16:12:29 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 16:12:29 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 16:12:29 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 16:12:29 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 16:12:33 WARN  [http-nio-8080-exec-3]: HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:259)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:100)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:48)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:106)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:121)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:43)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:61)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:498)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:364)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:549)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:102)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:78)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:106)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:249)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:175)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:100)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:216)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:137)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:96)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:402)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:90)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:765)
	at org.example.connection.HibernateUtil.<clinit>(HibernateUtil.java:16)
	at org.example.DAOClasses.NotebookDao.checkUser(NotebookDao.java:40)
	at org.example.servlets.IndexNotebookServlet.doGet(IndexNotebookServlet.java:49)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 16:12:34 WARN  [http-nio-8080-exec-3]: HHH000393: The 0.0.0 version of H2 implements temporary table creation such that it commits current transaction; multi-table, bulk hql/jpaql will not work properly
2022-05-08 16:12:34 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 16:12:34 DEBUG [http-nio-8080-exec-3]: HHH000422: Disabling contextual LOB creation as connection was null
2022-05-08 16:12:34 DEBUG [http-nio-8080-exec-3]: Error calling Driver#connect [null]
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже используется: null. Возможные решения: закрыть все другие соединения; использовать режим сервера
Database may be already in use: null. Possible solutions: close all other connection(s); use the server mode [90020-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:697)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.mvstore.db.Store.convertMVStoreException(Store.java:161)
	at org.h2.mvstore.db.Store.<init>(Store.java:140)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:40)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:61)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:498)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:364)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:549)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:102)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:78)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:106)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:249)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:175)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:100)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:216)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:137)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:96)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:402)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:90)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:765)
	at org.example.connection.HibernateUtil.<clinit>(HibernateUtil.java:16)
	at org.example.DAOClasses.NotebookDao.checkUser(NotebookDao.java:40)
	at org.example.servlets.IndexNotebookServlet.doGet(IndexNotebookServlet.java:49)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.mvstore.MVStoreException: The file is locked: G:/Database/education/notebookDB.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	... 60 more
2022-05-08 16:12:34 WARN  [http-nio-8080-exec-3]: SQL Error: 90020, SQLState: 90020
2022-05-08 16:12:34 ERROR [http-nio-8080-exec-3]: База данных уже используется: null. Возможные решения: закрыть все другие соединения; использовать режим сервера
Database may be already in use: null. Possible solutions: close all other connection(s); use the server mode [90020-210]
2022-05-08 16:12:34 DEBUG [http-nio-8080-exec-3]: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2022-05-08 16:12:48 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 16:12:48 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 16:12:48 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 16:12:49 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 16:12:49 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 16:12:49 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 16:12:49 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@781e7126
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@781e7126
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@781e7126
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3dcb0f5
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3dcb0f5
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6a5908ae
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6a5908ae
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a41bc70
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a41bc70
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@515d615f
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@515d615f
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@515d615f
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@37603899
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@37603899
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@37603899
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@15de4aa3
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@15de4aa3
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@15de4aa3
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@15de4aa3
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@422bd654
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@784610d7
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@784610d7
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4e544bb6
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@29388b8d
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@35bd6188
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@35bd6188
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@35bd6188
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@7d350f40
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@7d350f40
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7d350f40
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@1150f2ab
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@1150f2ab
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1150f2ab
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7cd977ef
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7cd977ef
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7cd977ef
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@22b6f8dd
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@22b6f8dd
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@22b6f8dd
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@772cbcc4
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@772cbcc4
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@617fcd20
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@617fcd20
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@562ea8ef
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@562ea8ef
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@562ea8ef
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@43cbc2e7
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@51938cc6
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@51938cc6
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4e1a5d19
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@6d50fde5
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6d50fde5
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@6d50fde5
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7011c652
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@7011c652
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@7011c652
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@3d29812a
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@21c7f103
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@4b128f0b
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4b128f0b
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@35cfe36d
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@35cfe36d
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@441e142f
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5acfaa46
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5fa1cc3
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4f64439a
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7bef9935
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5c559194
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@99c82d9
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@99c82d9
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@648978e3
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@648978e3
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@63a87376
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@63a87376
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@138187a6
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@138187a6
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7e664545
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7e664545
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5187640a
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71148e8f
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6eb78bbc
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6eb78bbc
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@22b7a742
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@22b7a742
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48fa302a
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1d4fbf4c
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@4f773d32
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4f773d32
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@50651e29
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@50651e29
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@49070f6f
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@49070f6f
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@49070f6f
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@29d26cdc
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@29d26cdc
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@29d26cdc
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5f3a5a79
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@27d693e1
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@56db9c03
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@56db9c03
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6cd5ae88
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6cd5ae88
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6cd5ae88
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@61b1c8f9
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@726b16b5
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@78dab77f
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@78dab77f
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@393af702
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@393af702
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@393af702
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@562306dc
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@562306dc
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7c577c13
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7c577c13
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@519b5da9
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@519b5da9
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3ff7227f
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3ff7227f
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@712cd6bb
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@712cd6bb
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@365c9b69
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fe7f9b1
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fe7f9b1
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@7aebee61
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@7aebee61
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@2c7e1071
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@79ca8b0b
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5f52436b
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7531ccdb
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2910a794
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4aff36e
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@49abb18b
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3207eb71
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1e07c6a2
2022-05-08 16:12:50 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 16:12:50 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 16:12:50 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 16:12:50 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 16:12:50 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 16:12:50 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 16:12:50 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 16:12:51 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e46496a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@62dd14cb]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 16:12:51 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@42d6d6ac, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@375481e8] under count; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7e17cbb1] under every; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@65a1147f] under any; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6558ef11] under position; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@182ace88] under overlay; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@4c10949] under trim; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@325e9cfa] under cast; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@505e859c] under collate; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@b3ce957] under extract; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@125ebb2b] under ifnull; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1dd677bb] under pad; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5a620d0e] under str; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2b4c579d] under format; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@33599481] under timestampadd; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5060d266] under timestampdiff; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@701d7430] under current_date; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@47ed242d] under current_time; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@b264488] under current_timestamp; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ef08f66] under local_date; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7557da7c] under local_time; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b3544b7] under local_datetime; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@620e495d] under offset_datetime; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@8ef71c5] under instant; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5187f5db] under sql; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1496854b] under count; prior registration was org.hibernate.dialect.function.CountFunction@375481e8
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@6db3f0e1] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7557da7c
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5b3544b7
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fe6ab6c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6558ef11
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@682b4089] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@59f33c46] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2b4c579d
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@3cff18d1] under listagg; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7fde64c1] under mode; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4d44dd9] under percentile_cont; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@56fc0e06] under percentile_disc; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4eb49957] under rank; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@28c48006] under dense_rank; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@669f006e] under percent_rank; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6fbb6587] under cume_dist; prior registration was null
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e46496a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@654356ab]
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 16:12:52 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74ddb5a4] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@582cf0a4] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 16:12:53 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5dc06e91] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7f7e3f0f
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: fee7c8ac-1fff-4775-99b2-5846e6196538 (<unnamed>)
2022-05-08 16:12:53 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 16:12:54 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1093026810 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@269742828 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@19795cf1
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 16:12:54 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@61d003eb
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 16:12:55 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@99197858 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@2035758495)
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1479722616 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@12459e84
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1286188475 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@458764878 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@2f24ed6f
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@59899733
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@25aa3b7e
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1552]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@1a8be9c8
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:52:31.641843]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [new]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [new]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-05-08T15:56]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@71b17771
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@1f0306d5
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@6b06af80
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@2e06de81
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@54f62ecf
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@5344af2a
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@de0706d
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@150a4586
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@70ef81be
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@6a45d76
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:12:55 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:12:55 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: begin
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: select next value for notebooks_SEQ
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: Sequence value obtained: 3201
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: Generated identifier: 3152, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: committing
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: Processing flush-time cascades
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: Dirty checking collections
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: Listing entities:
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: org.example.modelClasses.Notebooks{important=true, notes=aaaa, reminder=null, name=newa, id=3152, user=org.example.modelClasses.Users#1, createdWhen=2022-05-08T16:13:03.265446800}
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-5]: HHH000420: Closing un-released batch
2022-05-08 16:13:03 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@739880829 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@814560265 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@599e036a
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4fbc9d74
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:13:03 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1705506389 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@2035758495)
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@923779633 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [3152]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 3152
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#3152] : org.example.modelClasses.Notebooks@6f9036c4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@650604365 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@552928550 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@1503a36f
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5d81c3e
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T16:13:03.265447]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [newa]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aaaa]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#3152
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#3152] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@505e64fe
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Новый]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [ааа]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [577]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@e2be1b5
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Время]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [тест]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1552]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@8b7dc9
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:52:31.641843]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [new]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [new]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-05-08T15:56]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [2]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@3530a3
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [fsaf]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsafas]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [65]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@23efddcf
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [290]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@7298a64e
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aaa]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [801]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@29a6e8e1
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Алеша]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [769]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@bf655e
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - []
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [739]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@5d63c123
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [738]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@6afea617
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [481]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@7481ba49
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfga]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aew]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [641]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@fefb412
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Test2]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [Testing]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [33]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@4c461615
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfga]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [141f]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0c84e4
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:13:03 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:13:03 INFO  [http-nio-8080-exec-6]: Пользователь wqr вошел
2022-05-08 16:13:21 DEBUG [Hibernate Connection Pool Validation Thread]: Connection pool now considered primed; min-size will be maintained
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: HQL : FROM Users u where u.username = :username OR  u.email = :email
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Handling root path - Users
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameORu.email=:email
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> BasicSqmPathSource(email : String)
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [or]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).email`
                :email
            <- [EQUAL]
          <- [or]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 16:13:43 WARN  [http-nio-8080-exec-1]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Created new SQL alias : u1_0
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).email) 
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Initializer list
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1974199752 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@985072836 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? or u1_0.email=?
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: begin
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: select next value for users_SEQ
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Sequence value obtained: 1601
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Generated identifier: 1552, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: committing
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Processing flush-time cascades
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Dirty checking collections
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Collection found: [org.example.modelClasses.Users.notebooks#1552], was: [<unreferenced>] (initialized)
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Listing entities:
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: org.example.modelClasses.Users{password=81DC9BDB52D04DC20036DBD8313ED055, notebooks=[], id=1552, email=sfdsg1@ADF, username=newnew}
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:13:43 DEBUG [http-nio-8080-exec-1]: HHH000420: Closing un-released batch
2022-05-08 16:14:43 DEBUG [http-nio-8080-exec-4]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 16:14:43 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 16:14:43 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 16:14:43 INFO  [http-nio-8080-exec-4]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 16:14:43 DEBUG [http-nio-8080-exec-4]: HHH000206: hibernate.properties not found
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Building session factory using provided StandardServiceRegistry
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 16:14:44 DEBUG [http-nio-8080-exec-4]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5f4c4b69
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5f4c4b69
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5f4c4b69
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3619b5e0
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3619b5e0
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3bbc823e
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3bbc823e
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@65a84a27
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@65a84a27
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@588242f8
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@588242f8
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@588242f8
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@23cf5abd
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@23cf5abd
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@23cf5abd
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@7c3d8188
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration image -> org.hibernate.type.BasicTypeReference@5b63055a
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@113c094c
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@113c094c
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@487fa364
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@58de5a22
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration short -> org.hibernate.type.BasicTypeReference@1b54ddb6
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration short -> org.hibernate.type.BasicTypeReference@1b54ddb6
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1b54ddb6
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@6ad3c1f9
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration int -> org.hibernate.type.BasicTypeReference@6ad3c1f9
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6ad3c1f9
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration long -> org.hibernate.type.BasicTypeReference@5f023b44
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration long -> org.hibernate.type.BasicTypeReference@5f023b44
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5f023b44
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration float -> org.hibernate.type.BasicTypeReference@752775cc
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration float -> org.hibernate.type.BasicTypeReference@752775cc
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@752775cc
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration double -> org.hibernate.type.BasicTypeReference@4823afb3
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration double -> org.hibernate.type.BasicTypeReference@4823afb3
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4823afb3
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c8b6347
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c8b6347
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@721db789
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@721db789
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration character -> org.hibernate.type.BasicTypeReference@3cda3513
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration char -> org.hibernate.type.BasicTypeReference@3cda3513
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3cda3513
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@69514b0c
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration string -> org.hibernate.type.BasicTypeReference@e278c3a
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@e278c3a
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1199c388
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@7c860e05
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7c860e05
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@7c860e05
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1f6c33b2
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@1f6c33b2
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@1f6c33b2
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration text -> org.hibernate.type.BasicTypeReference@2d982a39
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@72423981
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@3e78f7ea
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3e78f7ea
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@40f7a234
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@40f7a234
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2c5281f1
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4f3f3bcb
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@36014261
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4b1aa097
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@73ffed0c
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@452861db
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@79063155
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@79063155
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@670638fa
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@670638fa
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6b1d2e9b
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6b1d2e9b
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6d3dac9a
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6d3dac9a
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@25f9a4f1
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@25f9a4f1
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@736e995c
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7105185c
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@715c239a
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@715c239a
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@19eacf6c
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@19eacf6c
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ec90174
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@47d73d09
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration date -> org.hibernate.type.BasicTypeReference@5787969a
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5787969a
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration time -> org.hibernate.type.BasicTypeReference@18d9b2a9
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@18d9b2a9
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4e4dd267
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4e4dd267
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4e4dd267
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@300c91d2
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@300c91d2
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@300c91d2
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5bd4e20f
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@e4d4f26
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@2eb37a62
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2eb37a62
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7a65fc67
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7a65fc67
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7a65fc67
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6ddadbe
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@628de63c
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration class -> org.hibernate.type.BasicTypeReference@5758e065
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5758e065
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@28bb82d
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@28bb82d
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@28bb82d
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@69d0459f
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@69d0459f
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6461f29f
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6461f29f
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@742a6dbe
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@742a6dbe
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2bbff9c6
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2bbff9c6
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration url -> org.hibernate.type.BasicTypeReference@40a8ad93
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@40a8ad93
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2b365a13
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@339ca2f7
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@339ca2f7
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration object -> org.hibernate.type.BasicTypeReference@7983cf32
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@7983cf32
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration null -> org.hibernate.type.NullType@77326dfa
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@e424520
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4a507fdd
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@24a34af6
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@409aae25
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5ced8853
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@150aba84
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2bc0b629
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3ebedef2
2022-05-08 16:14:45 WARN  [http-nio-8080-exec-4]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 16:14:45 INFO  [http-nio-8080-exec-4]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 16:14:45 INFO  [http-nio-8080-exec-4]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 16:14:45 INFO  [http-nio-8080-exec-4]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 16:14:45 INFO  [http-nio-8080-exec-4]: HHH10001003: Autocommit mode: false
2022-05-08 16:14:45 DEBUG [http-nio-8080-exec-4]: Initializing Connection pool with 1 Connections
2022-05-08 16:14:45 INFO  [http-nio-8080-exec-4]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: JDBC version : 4.2
2022-05-08 16:14:50 INFO  [http-nio-8080-exec-4]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@184423a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@e38e96a]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Import with entity name Notebooks
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property id with lazy=false
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: building BasicValue for id
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.id
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building property id
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: building BasicValue for createdWhen
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.created_when
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building property createdWhen
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property important with lazy=false
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: building BasicValue for important
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.important
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building property important
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property name with lazy=false
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: building BasicValue for name
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.name
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building property name
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: building BasicValue for notes
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.notes
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building property notes
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: building BasicValue for reminder
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: notebooks.reminder
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building property reminder
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building property user
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Import with entity name Users
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property id with lazy=false
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: building BasicValue for id
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.id
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building property id
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property email with lazy=false
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: building BasicValue for email
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.email
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building property email
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building property notebooks
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property password with lazy=false
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: building BasicValue for password
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.password
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building property password
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: MetadataSourceProcessor property username with lazy=false
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: building BasicValue for username
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Skipping column re-registration: users.username
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building property username
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Building session factory
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Session factory constructed with filter configurations : {}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d5ad9e8, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 16:14:50 DEBUG [http-nio-8080-exec-4]: Instantiated session factory
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Starting QueryPlanCache(2048)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@52cdee90] under count; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@73c82cee] under every; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@9c870d9] under any; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : length -> character_length
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5dd3d4a] under position; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2cebd820] under overlay; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@4c96f7b5] under trim; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7fad5e6c] under cast; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f9da216] under collate; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@63739d9d] under extract; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@796adfc1] under ifnull; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@749b08c0] under pad; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3e97ce92] under str; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@50e55b57] under format; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6371390b] under timestampadd; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5bf32c78] under timestampdiff; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : dateadd -> timestampadd
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : datediff -> timestampdiff
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e101a92] under current_date; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b01cedf] under current_time; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c8ac10e] under current_timestamp; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current date -> current_date
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current time -> current_time
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23eb7f1e] under local_date; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2da1257b] under local_time; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68936126] under local_datetime; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@423b5f8b] under offset_datetime; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : local date -> local_date
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : local time -> local_time
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : local datetime -> local_datetime
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ad0cb5d] under instant; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : current_instant -> instant
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@49fe09c0] under sql; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@22b791dd] under count; prior registration was org.hibernate.dialect.function.CountFunction@52cdee90
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@6349fed9] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : day -> day_of_month
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2da1257b
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@68936126
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : chr -> char
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a2f7541] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5dd3d4a
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1630a3a9] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : every -> bool_and
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registering alternate key : any -> bool_or
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1ed8e09e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@50e55b57
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@65d99b1f] under listagg; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@718d2dc4] under mode; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2fcba68c] under percentile_cont; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1b9b3064] under percentile_disc; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3bb5f0d5] under rank; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@61ee5590] under dense_rank; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7cecc988] under percent_rank; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7ab9128e] under cume_dist; prior registration was null
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: abs(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double acos(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Boolean any(BOOLEAN arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer ascii(STRING arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double asin(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double atan(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double avg(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: bit_and(arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer bit_length(STRING arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: bit_or(arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: bitand(arg0, arg1)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: bitor(arg0, arg1)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: bitxor(arg0, arg1)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: cast(arg as Type)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: ceiling(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Character char(INTEGER arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer character_length(STRING arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: coalesce(arg0[, arg1[, ...]])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String collate(STRING string as COLLATION collation)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double cos(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double cot(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Long count([distinct ]{arg|*})
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double cume_dist([arg0[, ...]])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Date curdate()
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Date current_date
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Time current_time
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Timestamp current_timestamp
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Time curtime()
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer day(DATE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer day_of_month(DATE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer day_of_week(DATE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer day_of_year(DATE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String dayname(DATE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double degrees(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Long dense_rank([arg0[, ...]])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Boolean every(BOOLEAN arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double exp(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: first_valueANY value
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: floor(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer hour(TIME arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: ifnull(arg0, arg1)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Instant instant
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: last_valueANY value
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String left(STRING string, INTEGER length)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String listagg(STRING arg0, STRING arg1)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double ln(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: LocalDate local_date
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: LocalDateTime local_datetime
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: LocalTime local_time
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Time localtime
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Timestamp localtimestamp
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double log10(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String lower(STRING string)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String ltrim(STRING string)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: max(COMPARABLE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double median(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer microsecond(TIME arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: min(COMPARABLE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer minute(TIME arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: mode()
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer month(DATE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String monthname(DATE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Timestamp now()
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: nth_valueANY value, INTEGER nth
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: nullif(arg0, arg1)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer octet_length(STRING arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: OffsetDateTime offset_datetime
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double percent_rank([arg0[, ...]])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: percentile_cont(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: percentile_disc(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double pi()
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer position(STRING pattern in STRING string)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer quarter(DATE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double radians(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double rand([INTEGER seed])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Long rank([arg0[, ...]])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String repeat(STRING string, INTEGER times)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String right(STRING string, INTEGER length)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Long row_number()
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Long rownum()
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String rtrim(STRING string)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer second(TIME arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer sign(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double sin(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String soundex(arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String space(INTEGER arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Object sql
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double sqrt(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double stddev_pop(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double stddev_samp(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String str(arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: sum(arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Timestamp sysdate
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double tan(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: String upper(STRING string)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double var_pop(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Double var_samp(NUMERIC arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer week(DATE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer year(DATE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Boolean any(BOOLEAN predicate)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Character chr(INTEGER arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Date current date
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Time current time
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Timestamp current timestamp
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Instant current_instant
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer day(DATE arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Boolean every(BOOLEAN predicate)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Integer length(STRING arg)
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: LocalDate local date
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: LocalDateTime local datetime
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: LocalTime local time
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: OffsetDateTime offset datetime
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@184423a8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1ae801ed]
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 16:14:51 DEBUG [http-nio-8080-exec-4]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]:  Row update: update notebooks set  where id=?
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Starting post-init callbacks
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]:  Version select: select id from notebooks where id =?
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]:  Delete 0: delete from notebooks where id=?
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3f84e023] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : u1_0
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]:  Version select: select id from users where id =?
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]:  Delete 0: delete from users where id=?
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : u1_0
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : n1_0
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6c9d9260] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Checking 0 named HQL queries
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Checking 0 named SQL queries
2022-05-08 16:14:52 INFO  [http-nio-8080-exec-4]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4571ed9a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: No alter strings for table : notebooks
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: No alter strings for table : users
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2f93623f
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Registering SessionFactory: 2585c099-8b9a-49af-abe1-800829582fb5 (<unnamed>)
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: Statistics initialized [enabled=false]
2022-05-08 16:14:52 DEBUG [http-nio-8080-exec-4]: HQL : FROM Users u where u.username = :username OR  u.email = :email
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Handling root path - Users
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameORu.email=:email
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> BasicSqmPathSource(email : String)
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [or]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).email`
                :email
            <- [EQUAL]
          <- [or]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 16:14:53 WARN  [http-nio-8080-exec-4]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Created new SQL alias : u1_0
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).email) 
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Initializer list
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@2101051828 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@2011841593 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? or u1_0.email=?
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: begin
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: select next value for users_SEQ
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Sequence value obtained: 3201
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Generated identifier: 3152, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: committing
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Processing flush-time cascades
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Dirty checking collections
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Collection found: [org.example.modelClasses.Users.notebooks#3152], was: [<unreferenced>] (initialized)
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Listing entities:
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: org.example.modelClasses.Users{password=81DC9BDB52D04DC20036DBD8313ED055, notebooks=[], id=3152, email=sfdsg2@ADF, username=adminnew}
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:14:53 DEBUG [http-nio-8080-exec-4]: HHH000420: Closing un-released batch
2022-05-08 16:41:25 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 16:41:25 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 16:41:25 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 16:41:25 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 16:41:25 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 16:41:25 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 16:41:25 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5b175
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5b175
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5b175
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@72c24b90
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@72c24b90
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@51c0a49b
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@51c0a49b
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@554bd3cb
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@554bd3cb
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@78e84e0e
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@78e84e0e
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@78e84e0e
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@18161448
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18161448
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@18161448
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4c268fad
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4c268fad
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@4c268fad
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@4c268fad
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@47f8c869
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@7d5a76a6
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7d5a76a6
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@55468911
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2de53ff3
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2c5f11a6
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@2c5f11a6
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2c5f11a6
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@29eadcd
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@29eadcd
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@29eadcd
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@63f1b28e
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@63f1b28e
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@63f1b28e
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@676f13a4
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@676f13a4
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@676f13a4
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@33e9ecce
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@33e9ecce
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@33e9ecce
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@446edfbb
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@446edfbb
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2a65707a
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2a65707a
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@3588b4a1
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@3588b4a1
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3588b4a1
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@497ba142
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@7bda3cd1
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7bda3cd1
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7a3d7570
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@a60eb2a
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@a60eb2a
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@a60eb2a
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1e852a95
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@1e852a95
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@1e852a95
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@3413b120
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2514d427
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@28204214
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28204214
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1f460407
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1f460407
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@36752c7e
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@35c3637b
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1f59a735
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3010fee5
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2f193245
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@16f5466
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@53dd2b71
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@53dd2b71
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@648d1039
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@648d1039
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2e09df7
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2e09df7
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@79d735a9
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@79d735a9
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@43eb0f41
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@43eb0f41
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4f6bd3dd
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4962e0e2
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@958fe1a
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@958fe1a
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@12d27977
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@12d27977
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3b6a5cb
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d0d30af
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@13ebad3a
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@13ebad3a
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@12f367f1
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@12f367f1
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@24dd1099
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@24dd1099
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@24dd1099
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@10e1d4e5
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@10e1d4e5
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@10e1d4e5
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ead39be
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@57681175
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@1bfd9ad9
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1bfd9ad9
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@52533bf
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@52533bf
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@52533bf
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@32729a6c
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2586c6ee
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@52dabbd5
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@52dabbd5
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@7e4ec2fa
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7e4ec2fa
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7e4ec2fa
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@584996a5
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@584996a5
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4beb8af4
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4beb8af4
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4c68844f
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4c68844f
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4439c62a
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4439c62a
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@50518cb6
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@50518cb6
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@477a0062
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@53c2d287
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@53c2d287
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@267f757b
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@267f757b
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@64595ed5
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4941b3a4
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2b1641ba
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@45bff24f
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6bbea3db
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2fa6f19b
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@36a47e44
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@c33df55
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@128d1573
2022-05-08 16:41:26 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 16:41:26 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 16:41:26 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 16:41:26 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 16:41:26 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 16:41:26 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 16:41:26 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 16:41:31 WARN  [http-nio-8080-exec-3]: HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:259)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:100)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:48)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:106)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:121)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:43)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:61)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:498)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:364)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:549)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:102)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:78)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:106)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:249)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:175)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:100)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:216)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:137)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:96)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:402)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:90)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:765)
	at org.example.connection.HibernateUtil.<clinit>(HibernateUtil.java:16)
	at org.example.DAOClasses.NotebookDao.checkUser(NotebookDao.java:40)
	at org.example.servlets.IndexNotebookServlet.doGet(IndexNotebookServlet.java:49)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-05-08 16:41:31 WARN  [http-nio-8080-exec-3]: HHH000393: The 0.0.0 version of H2 implements temporary table creation such that it commits current transaction; multi-table, bulk hql/jpaql will not work properly
2022-05-08 16:41:31 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 16:41:31 DEBUG [http-nio-8080-exec-3]: HHH000422: Disabling contextual LOB creation as connection was null
2022-05-08 16:41:31 DEBUG [http-nio-8080-exec-3]: Error calling Driver#connect [null]
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже используется: null. Возможные решения: закрыть все другие соединения; использовать режим сервера
Database may be already in use: null. Possible solutions: close all other connection(s); use the server mode [90020-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:697)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.mvstore.db.Store.convertMVStoreException(Store.java:161)
	at org.h2.mvstore.db.Store.<init>(Store.java:140)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:40)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:61)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:498)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:364)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:549)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:102)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:78)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:106)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:249)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:175)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:100)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:216)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:137)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:96)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:402)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:90)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:727)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:765)
	at org.example.connection.HibernateUtil.<clinit>(HibernateUtil.java:16)
	at org.example.DAOClasses.NotebookDao.checkUser(NotebookDao.java:40)
	at org.example.servlets.IndexNotebookServlet.doGet(IndexNotebookServlet.java:49)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.mvstore.MVStoreException: The file is locked: G:/Database/education/notebookDB.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	... 60 more
2022-05-08 16:41:31 WARN  [http-nio-8080-exec-3]: SQL Error: 90020, SQLState: 90020
2022-05-08 16:41:31 ERROR [http-nio-8080-exec-3]: База данных уже используется: null. Возможные решения: закрыть все другие соединения; использовать режим сервера
Database may be already in use: null. Possible solutions: close all other connection(s); use the server mode [90020-210]
2022-05-08 16:41:31 DEBUG [http-nio-8080-exec-3]: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2022-05-08 16:41:50 DEBUG [http-nio-8080-exec-3]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2022-05-08 16:41:50 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 16:41:50 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 16:41:50 INFO  [http-nio-8080-exec-3]: HHH000412: Hibernate ORM core version 6.0.0.Final
2022-05-08 16:41:50 DEBUG [http-nio-8080-exec-3]: HHH000206: hibernate.properties not found
2022-05-08 16:41:50 DEBUG [http-nio-8080-exec-3]: Checking public/system identifiers `null`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Building session factory using internal StandardServiceRegistryBuilder
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Building session factory using provided StandardServiceRegistry
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@781e7126
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@781e7126
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@781e7126
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3dcb0f5
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3dcb0f5
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6a5908ae
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6a5908ae
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a41bc70
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a41bc70
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@515d615f
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration byte -> org.hibernate.type.BasicTypeReference@515d615f
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@515d615f
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration binary -> org.hibernate.type.BasicTypeReference@37603899
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@37603899
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration [B -> org.hibernate.type.BasicTypeReference@37603899
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@15de4aa3
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@15de4aa3
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@15de4aa3
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@15de4aa3
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration image -> org.hibernate.type.BasicTypeReference@422bd654
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration blob -> org.hibernate.type.BasicTypeReference@784610d7
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@784610d7
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4e544bb6
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@29388b8d
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@35bd6188
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration short -> org.hibernate.type.BasicTypeReference@35bd6188
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@35bd6188
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration integer -> org.hibernate.type.BasicTypeReference@7d350f40
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration int -> org.hibernate.type.BasicTypeReference@7d350f40
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7d350f40
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@1150f2ab
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration long -> org.hibernate.type.BasicTypeReference@1150f2ab
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1150f2ab
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7cd977ef
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration float -> org.hibernate.type.BasicTypeReference@7cd977ef
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7cd977ef
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@22b6f8dd
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration double -> org.hibernate.type.BasicTypeReference@22b6f8dd
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@22b6f8dd
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@772cbcc4
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@772cbcc4
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@617fcd20
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@617fcd20
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration character -> org.hibernate.type.BasicTypeReference@562ea8ef
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration char -> org.hibernate.type.BasicTypeReference@562ea8ef
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@562ea8ef
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@43cbc2e7
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration string -> org.hibernate.type.BasicTypeReference@51938cc6
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@51938cc6
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4e1a5d19
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration characters -> org.hibernate.type.BasicTypeReference@6d50fde5
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6d50fde5
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration [C -> org.hibernate.type.BasicTypeReference@6d50fde5
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7011c652
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@7011c652
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@7011c652
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration text -> org.hibernate.type.BasicTypeReference@3d29812a
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@21c7f103
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration clob -> org.hibernate.type.BasicTypeReference@4b128f0b
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4b128f0b
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@35cfe36d
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@35cfe36d
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@441e142f
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5acfaa46
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5fa1cc3
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4f64439a
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7bef9935
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5c559194
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@99c82d9
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@99c82d9
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@648978e3
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@648978e3
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@63a87376
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@63a87376
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@138187a6
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@138187a6
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7e664545
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7e664545
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5187640a
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71148e8f
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6eb78bbc
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6eb78bbc
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@22b7a742
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@22b7a742
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48fa302a
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1d4fbf4c
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration date -> org.hibernate.type.BasicTypeReference@4f773d32
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4f773d32
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration time -> org.hibernate.type.BasicTypeReference@50651e29
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@50651e29
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@49070f6f
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@49070f6f
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@49070f6f
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@29d26cdc
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@29d26cdc
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@29d26cdc
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5f3a5a79
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@27d693e1
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration instant -> org.hibernate.type.BasicTypeReference@56db9c03
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@56db9c03
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6cd5ae88
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6cd5ae88
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6cd5ae88
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@61b1c8f9
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@726b16b5
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration class -> org.hibernate.type.BasicTypeReference@78dab77f
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@78dab77f
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration currency -> org.hibernate.type.BasicTypeReference@393af702
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@393af702
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@393af702
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration locale -> org.hibernate.type.BasicTypeReference@562306dc
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@562306dc
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7c577c13
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7c577c13
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@519b5da9
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@519b5da9
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3ff7227f
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3ff7227f
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration url -> org.hibernate.type.BasicTypeReference@712cd6bb
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@712cd6bb
2022-05-08 16:41:51 DEBUG [http-nio-8080-exec-3]: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@365c9b69
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fe7f9b1
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fe7f9b1
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration object -> org.hibernate.type.BasicTypeReference@7aebee61
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration java.lang.Object -> org.hibernate.type.BasicTypeReference@7aebee61
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration null -> org.hibernate.type.NullType@2c7e1071
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@79ca8b0b
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5f52436b
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7531ccdb
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2910a794
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4aff36e
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@49abb18b
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3207eb71
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1e07c6a2
2022-05-08 16:41:52 WARN  [http-nio-8080-exec-3]: HHH10001002: Using built-in connection pool (not intended for production use)
2022-05-08 16:41:52 INFO  [http-nio-8080-exec-3]: HHH10001005: Loaded JDBC driver class: org.h2.Driver
2022-05-08 16:41:52 INFO  [http-nio-8080-exec-3]: HHH10001012: Connecting with JDBC URL [jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE]
2022-05-08 16:41:52 INFO  [http-nio-8080-exec-3]: HHH10001001: Connection properties: {password=, user=sa}
2022-05-08 16:41:52 INFO  [http-nio-8080-exec-3]: HHH10001003: Autocommit mode: false
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Initializing Connection pool with 1 Connections
2022-05-08 16:41:52 INFO  [http-nio-8080-exec-3]: HHH10001115: Connection pool size: 20 (min=1)
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Database ->
       name : H2
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: Driver ->
       name : H2 JDBC Driver
    version : 2.1.210 (2022-01-17)
      major : 2
      minor : 1
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: JDBC version : 4.2
2022-05-08 16:41:52 INFO  [http-nio-8080-exec-3]: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-05-08 16:41:52 DEBUG [http-nio-8080-exec-3]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e46496a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@62dd14cb]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Notebooks
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Import with entity name Notebooks
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Notebooks on table notebooks
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:id]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.id
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=created_when, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property createdWhen with lazy=false
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:createdWhen]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: building BasicValue for createdWhen
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.created_when
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building property createdWhen
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=important, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property important with lazy=false
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:important]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: building BasicValue for important
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.important
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building property important
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property name with lazy=false
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:name]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: building BasicValue for name
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.name
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building property name
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=notes, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property notes with lazy=false
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:notes]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: building BasicValue for notes
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.notes
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building property notes
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=reminder, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property reminder with lazy=false
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Notebooks:reminder]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: building BasicValue for reminder
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: notebooks.reminder
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building property reminder
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='users_id', referencedColumn='', mappedBy=''}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(notebooks), mappingColumn=user, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building property user
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding entity from annotated class: org.example.modelClasses.Users
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Import with entity name Users
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Bind entity org.example.modelClasses.Users on table users
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property id with lazy=false
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:id]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: building BasicValue for id
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.id
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building property id
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property email with lazy=false
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:email]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: building BasicValue for email
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.email
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building property email
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_ORDER, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=notebooks_KEY, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='notebooks_KEY', referencedColumn='null', mappedBy='null'}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Collection role: org.example.modelClasses.Users.notebooks
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building property notebooks
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property password with lazy=false
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:password]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: building BasicValue for password
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.password
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building property password
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: MetadataSourceProcessor property username with lazy=false
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Attempting to locate auto-apply AttributeConverter for property [org.example.modelClasses.Users:username]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: building BasicValue for username
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Skipping column re-registration: users.username
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building property username
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for createdWhen
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for important
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for name
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for notes
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for reminder
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for id
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for email
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for password
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Starting `BasicValueBinder#fillSimpleValue` for username
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [notebooks]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Second pass for collection: org.example.modelClasses.Users.notebooks
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Binding a OneToMany: org.example.modelClasses.Users.notebooks through a foreign key
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Mapping collection: org.example.modelClasses.Users.notebooks -> notebooks
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Retrieving property org.example.modelClasses.Notebooks.user
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Mapped collection key: users_id, one-to-many: org.example.modelClasses.Notebooks
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Resolving reference to class: org.example.modelClasses.Users
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Building session factory
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Session factory constructed with filter configurations : {}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=G:\apache-tomcat-9.0.59\bin\bootstrap.jar;G:\apache-tomcat-9.0.59\bin\commons-daemon.jar;G:\apache-tomcat-9.0.59\bin\tomcat-juli.jar;G:\apache-tomcat-9.0.59\lib\annotations-api.jar;G:\apache-tomcat-9.0.59\lib\catalina-ant.jar;G:\apache-tomcat-9.0.59\lib\catalina-ha.jar;G:\apache-tomcat-9.0.59\lib\catalina-ssi.jar;G:\apache-tomcat-9.0.59\lib\catalina-storeconfig.jar;G:\apache-tomcat-9.0.59\lib\catalina-tribes.jar;G:\apache-tomcat-9.0.59\lib\catalina.jar;G:\apache-tomcat-9.0.59\lib\ecj-4.20.jar;G:\apache-tomcat-9.0.59\lib\el-api.jar;G:\apache-tomcat-9.0.59\lib\jasper-el.jar;G:\apache-tomcat-9.0.59\lib\jasper.jar;G:\apache-tomcat-9.0.59\lib\jaspic-api.jar;G:\apache-tomcat-9.0.59\lib\jsp-api.jar;G:\apache-tomcat-9.0.59\lib\servlet-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-api.jar;G:\apache-tomcat-9.0.59\lib\tomcat-coyote.jar;G:\apache-tomcat-9.0.59\lib\tomcat-dbcp.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-cs.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-de.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-es.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-fr.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ja.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ko.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-pt-BR.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-ru.jar;G:\apache-tomcat-9.0.59\lib\tomcat-i18n-zh-CN.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jdbc.jar;G:\apache-tomcat-9.0.59\lib\tomcat-jni.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util-scan.jar;G:\apache-tomcat-9.0.59\lib\tomcat-util.jar;G:\apache-tomcat-9.0.59\lib\tomcat-websocket.jar;G:\apache-tomcat-9.0.59\lib\websocket-api.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Asia/Dubai, java.vm.specification.version=17, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\osagr, user.language=ru, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=C:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., hibernate.hbm2ddl.auto=update, user.script=, server.loader=, java.util.logging.config.file=C:\Users\osagr\.SmartTomcat\servlet\myApp\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-LTS-86, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=osagr, path.separator=;, common.loader="C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib","C:\Users\osagr\.SmartTomcat\servlet\myApp/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:file:G:/Database/education/notebookDB;AUTO_SERVER=TRUE, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\osagr\AppData\Local\Temp\, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\Users\osagr\.SmartTomcat\servlet\myApp, java.version=17.0.2, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=C:\Users\osagr\.SmartTomcat\servlet\myApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, catalina.base=C:\Users\osagr\.SmartTomcat\servlet\myApp, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@42d6d6ac, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\bin;C:\Program Files\maven\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\osagr\AppData\Local\Microsoft\WindowsApps;C:\Users\osagr\AppData\Local\GitHubDesktop\bin;G:\JetBrains\DataGrip 2021.3.4\bin;;C:\Users\osagr\AppData\Roaming\npm;C:\Users\osagr\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-LTS-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=61.0}
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Instantiated session factory
2022-05-08 16:41:53 DEBUG [http-nio-8080-exec-3]: Starting QueryPlanCache(2048)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@375481e8] under count; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7e17cbb1] under every; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@65a1147f] under any; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : length -> character_length
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6558ef11] under position; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@182ace88] under overlay; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@4c10949] under trim; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@325e9cfa] under cast; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@505e859c] under collate; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@b3ce957] under extract; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@125ebb2b] under ifnull; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1dd677bb] under pad; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5a620d0e] under str; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2b4c579d] under format; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@33599481] under timestampadd; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5060d266] under timestampdiff; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : dateadd -> timestampadd
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : datediff -> timestampdiff
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@701d7430] under current_date; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@47ed242d] under current_time; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@b264488] under current_timestamp; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current date -> current_date
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current time -> current_time
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current timestamp -> current_timestamp
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ef08f66] under local_date; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7557da7c] under local_time; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b3544b7] under local_datetime; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@620e495d] under offset_datetime; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local date -> local_date
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local time -> local_time
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : local datetime -> local_datetime
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : offset datetime -> offset_datetime
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@8ef71c5] under instant; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : current_instant -> instant
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5187f5db] under sql; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1496854b] under count; prior registration was org.hibernate.dialect.function.CountFunction@375481e8
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@6db3f0e1] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : day -> day_of_month
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7557da7c
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5b3544b7
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : chr -> char
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fe6ab6c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6558ef11
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@682b4089] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : every -> bool_and
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registering alternate key : any -> bool_or
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@59f33c46] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2b4c579d
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@3cff18d1] under listagg; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7fde64c1] under mode; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4d44dd9] under percentile_cont; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@56fc0e06] under percentile_disc; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4eb49957] under rank; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@28c48006] under dense_rank; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@669f006e] under percent_rank; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6fbb6587] under cume_dist; prior registration was null
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: abs(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double acos(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer ascii(STRING arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double asin(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double atan(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double avg(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: bit_and(arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer bit_length(STRING arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: bit_or(arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: bitand(arg0, arg1)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: bitor(arg0, arg1)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: bitxor(arg0, arg1)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Boolean bool_and(BOOLEAN predicate)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Boolean bool_or(BOOLEAN predicate)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: cast(arg as Type)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: ceiling(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Character char(INTEGER arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer character_length(STRING arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: coalesce(arg0[, arg1[, ...]])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String collate(STRING string as COLLATION collation)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String concat(STRING string0[, STRING string1[, ...]])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double cos(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double cot(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Long count([distinct ]{arg|*})
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double cume_dist([arg0[, ...]])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Date curdate()
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Date current_date
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Time current_time
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Timestamp current_timestamp
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Time curtime()
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer day_of_month(DATE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer day_of_week(DATE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer day_of_year(DATE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String dayname(DATE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double degrees(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Long dense_rank([arg0[, ...]])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double exp(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: first_valueANY value
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: floor(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String format(TEMPORAL datetime as STRING pattern)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer hour(TIME arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: ifnull(arg0, arg1)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Instant instant
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: lagANY value[, INTEGER offset[, ANY default]]
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: last_valueANY value
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: leadANY value[, INTEGER offset[, ANY default]]
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String left(STRING string, INTEGER length)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String listagg(STRING arg0, STRING arg1)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double ln(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: LocalDate local_date
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: LocalDateTime local_datetime
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: LocalTime local_time
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Time localtime
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Timestamp localtimestamp
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double log10(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String lower(STRING string)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String lpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String ltrim(STRING string)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: max(COMPARABLE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double median(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer microsecond(TIME arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: min(COMPARABLE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer minute(TIME arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer mod(INTEGER arg0, INTEGER arg1)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: mode()
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer month(DATE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String monthname(DATE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Timestamp now()
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: nth_valueANY value, INTEGER nth
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: nullif(arg0, arg1)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer octet_length(STRING arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset_datetime
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double percent_rank([arg0[, ...]])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: percentile_cont(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: percentile_disc(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double pi()
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer position(STRING pattern in STRING string)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double power(NUMERIC arg0, NUMERIC arg1)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer quarter(DATE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double radians(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double rand([INTEGER seed])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Long rank([arg0[, ...]])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String repeat(STRING string, INTEGER times)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String replace(STRING string, STRING pattern, STRING replacement)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String right(STRING string, INTEGER length)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: round(NUMERIC arg0, INTEGER arg1)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Long row_number()
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Long rownum()
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String rpad(STRING string, INTEGER length[, STRING padding])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String rtrim(STRING string)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer second(TIME arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer sign(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double sin(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String soundex(arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String space(INTEGER arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Object sql
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double sqrt(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double stddev_pop(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double stddev_samp(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String str(arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String substr(STRING string, INTEGER start[, INTEGER length])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: sum(arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Timestamp sysdate
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double tan(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String translate(STRING arg0, STRING arg1, STRING arg2)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double truncate(NUMERIC number, INTEGER places)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: String upper(STRING string)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double var_pop(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Double var_samp(NUMERIC arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer week(DATE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer year(DATE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Boolean any(BOOLEAN predicate)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Character chr(INTEGER arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Date current date
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Time current time
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Timestamp current timestamp
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Instant current_instant
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer day(DATE arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Boolean every(BOOLEAN predicate)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Integer length(STRING arg)
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: LocalDate local date
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: LocalDateTime local datetime
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: LocalTime local time
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: OffsetDateTime offset datetime
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e46496a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@654356ab]
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Notebooks] is safe
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Notebooks
2022-05-08 16:41:54 DEBUG [http-nio-8080-exec-3]: To-one property `org.example.modelClasses.Notebooks#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Not known whether passed class name [org.example.modelClasses.Users] is safe
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.modelClasses.Users
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Static SQL for collection: org.example.modelClasses.Users.notebooks
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]:  Row insert: update notebooks set users_id=? where id=?
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]:  Row update: update notebooks set  where id=?
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]:  Row delete: update notebooks set users_id=null where users_id=? and id=?
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]:  One-shot delete: update notebooks set users_id=null where users_id=?
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Starting post-init callbacks
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.modelClasses.Notebooks.user]
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `staticFetchableList` generator
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Notebooks) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.example.modelClasses.Users.notebooks#{element}]) - index descriptor
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks)#finishInitialization
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : PluralAttributeMapping(org.example.modelClasses.Users.notebooks) - key descriptor
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `staticFetchableList` generator
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Starting PostInitCallbackEntry : Entity(org.example.modelClasses.Users) `sqmMultiTableInsertStrategy` interpretation
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Notebooks
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]:  Version select: select id from notebooks where id =?
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]:  Update 0: update notebooks set created_when=?, important=?, name=?, notes=?, reminder=?, users_id=? where id=?
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from notebooks where id=?
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks)] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74ddb5a4] with identifierForTableGroup [org.example.modelClasses.Notebooks.user] for NavigablePath [org.example.modelClasses.Notebooks.user] 
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks.reminder]
 |  \-EntityFetchJoinedImpl [org.example.modelClasses.Notebooks.user]

2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks) {
          primaryTableReference : notebooks as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : org.example.modelClasses.Notebooks.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Static SQL for entity: org.example.modelClasses.Users
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]:  Version select: select id from users where id =?
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]:  Insert 0: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]:  Update 0: update users set email=?, password=?, username=? where id=?
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]:  Delete 0: delete from users where id=?
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users)] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users]
 |  +-BasicFetch [org.example.modelClasses.Users.email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users.notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users.password]
 |  \-BasicFetch [org.example.modelClasses.Users.username]

2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@582cf0a4] with identifierForTableGroup [org.example.modelClasses.Users.notebooks] for NavigablePath [org.example.modelClasses.Users.notebooks] 
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users.notebooks.{element})] with identifierForTableGroup [org.example.modelClasses.Users.notebooks.{element}] for NavigablePath [org.example.modelClasses.Users.notebooks.{element}] 
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Checking 0 named HQL queries
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Checking 0 named SQL queries
2022-05-08 16:41:55 INFO  [http-nio-8080-exec-3]: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5dc06e91] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: No alter strings for table : notebooks
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: No alter strings for table : users
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7f7e3f0f
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Registering SessionFactory: 9ef56a7f-789d-4fa3-b92e-c339234dc0b8 (<unnamed>)
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Not binding SessionFactory to JNDI, no JNDI name configured
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: Statistics initialized [enabled=false]
2022-05-08 16:41:55 DEBUG [http-nio-8080-exec-3]: HQL : FROM Users u where u.username = :username AND u.password = :password
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Handling root path - Users
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameANDu.password=:password
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(password)] : null -> BasicSqmPathSource(password : String)
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).password`
                :password
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 16:41:56 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : u1_0
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(password)
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).password) 
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1093026810 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@269742828 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@19795cf1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@61d003eb
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: HQL : FROM Notebooks n where n.user = :user ORDER BY n.important DESC, n.createdWhen DESC
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Handling root path - Notebooks
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Encountered implicit select clause : FROMNotebooksnwheren.user=:user
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> Users
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Notebooks(n)`
            <- [root] - `org.example.modelClasses.Notebooks(n)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Notebooks(n)`
          <- [root] - `org.example.modelClasses.Notebooks(n)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.modelClasses.Notebooks(n).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 16:41:56 WARN  [http-nio-8080-exec-3]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Created new SQL alias : n1_0
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Notebooks(n))] with identifierForTableGroup [org.example.modelClasses.Notebooks] for NavigablePath [org.example.modelClasses.Notebooks] 
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.modelClasses.Notebooks(n).user) 
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Notebooks(n)]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).createdWhen]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).important]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).name]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).notes]
 |  +-BasicFetch [org.example.modelClasses.Notebooks(n).reminder]
 |  \-CircularFetchImpl [org.example.modelClasses.Notebooks(n).user]

2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (n1 : org.example.modelClasses.Notebooks(n)) {
          primaryTableReference : notebooks as n1_0
        }
      }
    }

2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@99197858 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@2035758495)
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@1479722616 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [3152]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 3152
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#3152] : org.example.modelClasses.Notebooks@12459e84
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Initializer list
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1286188475 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@458764878 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@2f24ed6f
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [wqr]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@59899733
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T16:13:03.265447]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [newa]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaaa]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#3152
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#3152] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@25aa3b7e
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Новый]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [ааа]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [577]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@1a8be9c8
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [true]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Время]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [тест]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [1552]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@71b17771
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:52:31.641843]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [new]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [new]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-05-08T15:56]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [2]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@1f0306d5
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [fsaf]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsafas]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [65]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@6b06af80
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [290]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@2e06de81
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aaa]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [801]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@54f62ecf
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Алеша]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [769]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@5344af2a
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - []
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [739]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@de0706d
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - []
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [738]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@150a4586
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [481]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@70ef81be
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [aew]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [641]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@6a45d76
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [Test2]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [Testing]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [null]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [0] - [33]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@84936d7
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [6] - [1]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [2] - [false]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [3] - [asfga]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [4] - [141f]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6301abb1
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:41:56 DEBUG [http-nio-8080-exec-3]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:41:56 INFO  [http-nio-8080-exec-3]: Пользователь wqr вошел
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: begin
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: select next value for notebooks_SEQ
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: Sequence value obtained: 4801
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: Generated identifier: 4752, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: committing
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: Processing flush-time cascades
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: Dirty checking collections
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: Listing entities:
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: org.example.modelClasses.Notebooks{important=true, notes=aa, reminder=null, name=aa, id=4752, user=org.example.modelClasses.Users#1, createdWhen=2022-05-08T16:42:03.830235500}
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: insert into notebooks (created_when, important, name, notes, reminder, users_id, id) values (?, ?, ?, ?, ?, ?, ?)
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-5]: HHH000420: Closing un-released batch
2022-05-08 16:42:03 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@739880829 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@814560265 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? and u1_0.password=?
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users(u)): 1
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users(u).notebooks#1
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users(u)#1] : org.example.modelClasses.Users@599e036a
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users(u)#1
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4fbc9d74
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users(u)#1] - using loading instance
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:42:03 WARN  [http-nio-8080-exec-6]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n).user -> EntitySelectFetchInitializer(org.example.modelClasses.Notebooks(n).user)@1705506389 (ToOneAttributeMapping(NavigableRole[org.example.modelClasses.Notebooks.user])@2035758495)
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Notebooks(n) -> EntityResultInitializer(org.example.modelClasses.Notebooks(n))@923779633 (SingleTableEntityPersister(org.example.modelClasses.Notebooks))
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: select n1_0.id,n1_0.created_when,n1_0.important,n1_0.name,n1_0.notes,n1_0.reminder,n1_0.users_id from notebooks n1_0 where n1_0.users_id=? order by n1_0.important desc,n1_0.created_when desc
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [4752]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 4752
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#4752] : org.example.modelClasses.Notebooks@20f50526
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.modelClasses.Notebooks(n).user#1) : 1
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Initializer list
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users.notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users.notebooks)@1849679511 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]:     org.example.modelClasses.Users -> EntityResultInitializer(org.example.modelClasses.Users)@16249730 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Users): 1
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (DelayedCollectionInitializer) Current row collection key : org.example.modelClasses.Users.notebooks#1
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Users#1] : org.example.modelClasses.Users@3a0c84e4
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [admin@mail.com]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [81DC9BDB52D04DC20036DBD8313ED055]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [wqr]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Users#1
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1db2638a
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Users#1] - using loading instance
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntitySelectFetchInitializer) Entity [org.example.modelClasses.Notebooks(n).user#1] : 1 has being loaded by session.internalLoad.
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T16:42:03.830236]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [aa]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aa]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#4752
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#4752] - using loading instance
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [3152]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 3152
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#3152] : org.example.modelClasses.Notebooks@505e64fe
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T16:13:03.265447]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [newa]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aaaa]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#3152
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#3152] - using loading instance
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1] : org.example.modelClasses.Notebooks@e2be1b5
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:57:35.014298]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Новый]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [ааа]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1] - using loading instance
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [577]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 577
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#577] : org.example.modelClasses.Notebooks@8b7dc9
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T13:31:43.597637]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [true]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Время]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [тест]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#577
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#577] - using loading instance
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [1552]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 1552
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#1552] : org.example.modelClasses.Notebooks@3530a3
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:52:31.641843]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [new]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [new]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-05-08T15:56]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#1552
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#1552] - using loading instance
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [2]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 2
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#2] : org.example.modelClasses.Notebooks@23efddcf
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T15:15:12.718185]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [fsaf]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsafas]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#2
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#2] - using loading instance
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [65]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 65
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#65] : org.example.modelClasses.Notebooks@7298a64e
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:13.990149]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:42:03 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Балдеж]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [.qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq....................xxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffssssssssssssssssssssssssss]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#65
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#65] - using loading instance
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [290]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 290
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#290] : org.example.modelClasses.Notebooks@29a6e8e1
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-05-08T14:55:08.796097]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfsaf]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aaa]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#290
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#290] - using loading instance
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [801]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 801
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#801] : org.example.modelClasses.Notebooks@bf655e
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-24T00:50:13.329242]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Алеша]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [fsaf
fsaf
asfsaf
safsafsafsaf
safsafsaf
asfsafsaf]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#801
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#801] - using loading instance
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [769]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 769
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#769] : org.example.modelClasses.Notebooks@5d63c123
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-24T00:19:25.471591]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - []
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#769
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#769] - using loading instance
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [739]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 739
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#739] : org.example.modelClasses.Notebooks@6afea617
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:41:13.428242]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [safsafasfsaff]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - []
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#739
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#739] - using loading instance
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [738]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 738
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#738] : org.example.modelClasses.Notebooks@7481ba49
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T23:32:45.884400]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [ТЕсТ]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [safasfsafsafasf
afasfasf
asfsafas
xczvxzv
sfafsfa]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#738
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#738] - using loading instance
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [481]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 481
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#481] : org.example.modelClasses.Notebooks@fefb412
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T18:39:19.233056]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfga]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [aew]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-04-23T20:39]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#481
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#481] - using loading instance
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [641]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 641
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#641] : org.example.modelClasses.Notebooks@4c461615
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T13:33:47.533540]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [Test2]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [Testing]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [null]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#641
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#641] - using loading instance
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [0] - [33]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Hydrated EntityKey (org.example.modelClasses.Notebooks(n)): 33
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Created new entity instance [org.example.modelClasses.Notebooks(n)#33] : org.example.modelClasses.Notebooks@5397cf94
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [6] - [1]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [1] - [2022-04-23T12:53:29.705209]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [2] - [false]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [3] - [asfga]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [4] - [141f]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Extracted JDBC value [5] - [2022-03-12T12:53]
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Done materializing entityInstance : org.example.modelClasses.Notebooks(n)#33
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1522b388
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: (EntityResultInitializer) Found existing loading entry [org.example.modelClasses.Notebooks(n)#33] - using loading instance
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:42:04 DEBUG [http-nio-8080-exec-6]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:42:04 INFO  [http-nio-8080-exec-6]: Пользователь wqr вошел
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: HQL : FROM Users u where u.username = :username OR  u.email = :email
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Handling root path - Users
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Encountered implicit select clause : FROMUsersuwhereu.username=:usernameORu.email=:email
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> BasicSqmPathSource(email : String)
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.modelClasses.Users(u)`
            <- [root] - `org.example.modelClasses.Users(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.modelClasses.Users(u)`
          <- [root] - `org.example.modelClasses.Users(u)`
        <- [from]
        -> [where]
          -> [or]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).username`
                :username
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.modelClasses.Users(u).email`
                :email
            <- [EQUAL]
          <- [or]
        <- [where]
      <- [query-spec]
    <- [select]

2022-05-08 16:42:18 WARN  [http-nio-8080-exec-10]: HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Created new SQL alias : u1_0
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Registration of TableGroup [StandardTableGroup(org.example.modelClasses.Users(u))] with identifierForTableGroup [org.example.modelClasses.Users] for NavigablePath [org.example.modelClasses.Users] 
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).username) 
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.modelClasses.Users(u).email) 
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: DomainResult Graph:
 \-EntityResultImpl [org.example.modelClasses.Users(u)]
 |  +-BasicFetch [org.example.modelClasses.Users(u).email]
 |  +-DelayedCollectionFetch [org.example.modelClasses.Users(u).notebooks]
 |  +-BasicFetch [org.example.modelClasses.Users(u).password]
 |  \-BasicFetch [org.example.modelClasses.Users(u).username]

2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.modelClasses.Users(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Initializer list
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users(u).notebooks -> DelayedCollectionInitializer(org.example.modelClasses.Users(u).notebooks)@1498540054 (PluralAttribute(org.example.modelClasses.Users.notebooks))
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]:     org.example.modelClasses.Users(u) -> EntityResultInitializer(org.example.modelClasses.Users(u))@117348008 (SingleTableEntityPersister(org.example.modelClasses.Users))
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=? or u1_0.email=?
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: begin
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: select next value for users_SEQ
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Sequence value obtained: 4801
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: HHH000387: ResultSet's statement was not registered
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Generated identifier: 4752, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: committing
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Processing flush-time cascades
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Dirty checking collections
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Collection found: [org.example.modelClasses.Users.notebooks#4752], was: [<unreferenced>] (initialized)
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Listing entities:
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: org.example.modelClasses.Users{password=81DC9BDB52D04DC20036DBD8313ED055, notebooks=[], id=4752, email=asdasd@fsaf, username=wqrnew}
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: insert into users (email, password, username, id) values (?, ?, ?, ?)
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: Initiating JDBC connection release from afterTransaction
2022-05-08 16:42:18 DEBUG [http-nio-8080-exec-10]: HHH000420: Closing un-released batch
